using System.Drawing;
using FLTKSharp.Core.Interfaces;
using NLog;
using static FLTKSharp.Core.CFltkNative;
<!-- codegen:using -->

namespace FLTKSharp.Core;

public partial class %name% <!-- codegen:extends -->
{
    public static IFltkWidget FromPointer(IntPtr pointer) => new %name%(pointer);
    public IntPtr GetPointer() => Pointer;
    private readonly Logger _log = LogManager.GetCurrentClassLogger();
    
    public %name%(int x, int y, int width, int height, string? label = null)
        : this(Create(x, y, width, height, label, out var disposeAction))
    {
        _disposeActions.Add(disposeAction);
    }
    internal %name%(IntPtr pointer)
        : base(pointer)
    {
        _log.Properties["Pointer"] = pointer;
        _log.Trace($"Created " + pointer.ToString("x2"));
        base.FlObjectHandle = %prefix%_handle;
    }
    protected override FltkObjectHandleMethod FlObjectHandle
    {
        get => base.FlObjectHandle;
        set => base.FlObjectHandle = value;
    }
    
    private static IntPtr Create(int x, int y, int width, int height, string? label, out Action disposeAction)
    {
        var labelPointer = InternalHelper.AllocateStringD(label, out disposeAction);
        return %prefix%_new(x, y, width, height, labelPointer);
    }
    
    public virtual FLGroup AsGroup()
    {
        if (Pointer == IntPtr.Zero)
        {
            throw new InvalidOperationException($"Property {nameof(Pointer)} is a null pointer");
        }
        _log.Trace($"{nameof(%prefix%_as_group)}(0x{Pointer:x2})");
        var ptr = %prefix%_as_group(Pointer);
        if (ptr == IntPtr.Zero)
        {
            throw new InvalidCastException($"Cannot cast into {nameof(FLGroup)} since {nameof(%prefix%_as_group)} returned a NULL pointer (for {Pointer})");
        }
        return new FLGroup(ptr);
    }
    
    public FLWindow AsWindow()
    {
        if (Pointer == IntPtr.Zero)
        {
            throw new InvalidOperationException($"Property {nameof(Pointer)} is a null pointer");
        }
        _log.Trace($"{nameof(%prefix%_as_window)}(0x{Pointer:x2})");
        var ptr = %prefix%_as_window(Pointer);
        if (ptr == IntPtr.Zero)
        {
            throw new InvalidCastException($"Cannot cast into {nameof(FLWindow)} since {nameof(%prefix%_as_window)} returned a NULL pointer (for {Pointer})");
        }
        return new FLWindow(ptr);
    }

<!-- codegen:body -->
}