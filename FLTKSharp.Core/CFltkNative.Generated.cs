using System.Runtime.InteropServices;

namespace FLTKSharp.Core;

internal partial class CFltkNative
{
    /// <summary>Call the Fl_run function</summary>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_run", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_run();
    
    /// <summary>Call the Fl_check function</summary>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_check", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_check();
    
    /// <summary>Call the Fl_ready function</summary>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_ready", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_ready();
    
    /// <summary>Call the Fl_release function</summary>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_release", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_release();
    
    /// <summary>Call the Fl_reload_scheme function</summary>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_reload_scheme", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_reload_scheme();
    
    /// <summary>Call the Fl_menu_linespacing function</summary>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_menu_linespacing", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_menu_linespacing();
    
    /// <summary>Call the Fl_lock function</summary>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_lock", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_lock();
    
    /// <summary>Call the Fl_unlock function</summary>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_unlock", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_unlock();
    
    /// <summary>Call the Fl_awake function</summary>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_awake", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_awake();
    
    /// <summary>Call the Fl_set_scrollbase_size function</summary>
    /// <param name="size"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_set_scrollbase_size", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_set_scrollbase_size(int size);
    
    /// <summary>Call the Fl_scrollbar_size function</summary>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_scrollbar_size", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_scrollbar_size();
    
    /// <summary>Call the Fl_event function</summary>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_event", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_event();
    
    /// <summary>Call the Fl_event_key function</summary>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_event_key", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_event_key();
    
    /// <summary>Call the Fl_event_original_key function</summary>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_event_original_key", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_event_original_key();
    
    /// <summary>Call the Fl_event_key_down function</summary>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_event_key_down", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_event_key_down();
    
    /// <summary>Call the Fl_event_text function</summary>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_event_text", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_event_text();
    
    /// <summary>Call the Fl_event_button function</summary>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_event_button", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_event_button();
    
    /// <summary>Call the Fl_event_clicks function</summary>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_event_clicks", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_event_clicks();
    
    /// <summary>Call the Fl_event_x function</summary>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_event_x", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_event_x();
    
    /// <summary>Call the Fl_event_y function</summary>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_event_y", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_event_y();
    
    /// <summary>Call the Fl_event_x_root function</summary>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_event_x_root", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_event_x_root();
    
    /// <summary>Call the Fl_event_y_root function</summary>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_event_y_root", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_event_y_root();
    
    /// <summary>Call the Fl_event_dx function</summary>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_event_dx", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_event_dx();
    
    /// <summary>Call the Fl_event_dy function</summary>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_event_dy", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_event_dy();
    
    /// <summary>Call the Fl_get_mouse function</summary>
    /// <param name="x"></param>
    /// <param name="y"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_get_mouse", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_get_mouse(ref int x, ref int y);
    
    /// <summary>Call the Fl_event_is_click function</summary>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_event_is_click", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_event_is_click();
    
    /// <summary>Call the Fl_event_length function</summary>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_event_length", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_event_length();
    
    /// <summary>Call the Fl_event_state function</summary>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_event_state", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_event_state();
    
    /// <summary>Call the Fl_w function</summary>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_w", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_w();
    
    /// <summary>Call the Fl_h function</summary>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_h", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_h();
    
    /// <summary>Call the Fl_screen_x function</summary>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_screen_x", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_screen_x();
    
    /// <summary>Call the Fl_screen_y function</summary>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_screen_y", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_screen_y();
    
    /// <summary>Call the Fl_screen_h function</summary>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_screen_h", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_screen_h();
    
    /// <summary>Call the Fl_screen_w function</summary>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_screen_w", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_screen_w();
    
    /// <summary>Call the Fl_compose function</summary>
    /// <param name="del"></param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_compose", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_compose(ref int del);
    
    /// <summary>Call the Fl_compose_state function</summary>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_compose_state", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_compose_state();
    
    /// <summary>Call the Fl_copy function</summary>
    /// <param name="content"></param>
    /// <param name="length"></param>
    /// <param name="destination"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_copy", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_copy(IntPtr content, int length, int destination);
    
    /// <summary>Call the Fl_paste_text function</summary>
    /// <param name="widget"></param>
    /// <param name="source"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_paste_text", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_paste_text(IntPtr widget, int source);
    
    /// <summary>Call the Fl_paste_image function</summary>
    /// <param name="widget"></param>
    /// <param name="source"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_paste_image", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_paste_image(IntPtr widget, int source);
    
    /// <summary>Call the Fl_set_scheme function</summary>
    /// <param name="scheme"></param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_set_scheme", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_set_scheme(IntPtr scheme);
    
    /// <summary>Call the Fl_scheme function</summary>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_scheme", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_scheme();
    
    /// <summary>Call the Fl_scheme_string function</summary>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_scheme_string", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_scheme_string();
    
    /// <summary>Call the Fl_visible_focus function</summary>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_visible_focus", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_visible_focus();
    
    /// <summary>Call the Fl_set_visible_focus function</summary>
    /// <param name="value"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_set_visible_focus", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_set_visible_focus(int value);
    
    /// <summary>Call the Fl_set_box_type function</summary>
    /// <param name="a"></param>
    /// <param name="b"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_set_box_type", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_set_box_type(int a, int b);
    
    /// <summary>Call the Fl_box_shadow_width function</summary>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_box_shadow_width", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_box_shadow_width();
    
    /// <summary>Call the Fl_set_box_shadow_width function</summary>
    /// <param name="width"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_set_box_shadow_width", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_set_box_shadow_width(int width);
    
    /// <summary>Call the Fl_box_border_radius_max function</summary>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_box_border_radius_max", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_box_border_radius_max();
    
    /// <summary>Call the Fl_set_box_border_radius_max function</summary>
    /// <param name="radius"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_set_box_border_radius_max", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_set_box_border_radius_max(int radius);
    
    /// <summary>Call the Fl_get_rgb_color function</summary>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_get_rgb_color", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_get_rgb_color();
    
    /// <summary>Call the Fl_set_color function</summary>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_set_color", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_set_color();
    
    /// <summary>Call the Fl_set_color_with_alpha function</summary>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_set_color_with_alpha", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_set_color_with_alpha();
    
    /// <summary>Call the Fl_get_font function</summary>
    /// <param name="index"></param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_get_font", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_get_font(int index);
    
    /// <summary>Call the Fl_get_font_name function</summary>
    /// <param name="index"></param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_get_font_name", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_get_font_name(int index);
    
    /// <summary>Call the Fl_get_font_name2 function</summary>
    /// <param name="index"></param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_get_font_name2", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_get_font_name2(int index);
    
    /// <summary>Call the Fl_get_font_sizes function</summary>
    /// <param name="fontIndex"></param>
    /// <param name="sizep"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_get_font_sizes", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_get_font_sizes(int fontIndex, ref int[] sizep);
    
    /// <summary>Call the Fl_set_fonts function</summary>
    /// <param name="c"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_set_fonts", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_set_fonts(IntPtr c);
    
    /// <summary>Call the Fl_set_font function</summary>
    /// <param name="a"></param>
    /// <param name="b"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_set_font", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_set_font(int a, int b);
    
    /// <summary>Call the Fl_set_font2 function</summary>
    /// <param name="a"></param>
    /// <param name="name"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_set_font2", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_set_font2(int a, IntPtr name);
    
    /// <summary>Call the Fl_set_font_size function</summary>
    /// <param name="size"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_set_font_size", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_set_font_size(int size);
    
    /// <summary>Call the Fl_add_handler function</summary>
    /// <param name="handler"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_add_handler", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_add_handler(FltkEventHandlerDelegate handler);
    
    /// <summary>Call the Fl_awake_msg function</summary>
    /// <param name="handler"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_awake_msg", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_awake_msg(FltkAwakeHandler handler);
    
    /// <summary>Call the Fl_thread_msg function</summary>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_thread_msg", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_thread_msg();
    
    /// <summary>Call the Fl_wait function</summary>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_wait", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_wait();
    
    /// <summary>Call the Fl_wait_for function</summary>
    /// <param name="time"></param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_wait_for", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern double Fl_wait_for(double time);
    
    /// <summary>Call the Fl_add_timeout function</summary>
    /// <param name="t"></param>
    /// <param name="callback"></param>
    /// <param name="data"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_add_timeout", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_add_timeout(double t, FltkTimeoutHandler callback, IntPtr data);
    
    /// <summary>Call the Fl_repeat_timeout function</summary>
    /// <param name="t"></param>
    /// <param name="callback"></param>
    /// <param name="data"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_repeat_timeout", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_repeat_timeout(double t, FltkTimeoutHandler callback, IntPtr data);
    
    /// <summary>Call the Fl_remove_timeout function</summary>
    /// <param name="callback"></param>
    /// <param name="data"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_remove_timeout", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_remove_timeout(FltkTimeoutHandler callback, IntPtr data);
    
    /// <summary>Call the Fl_has_timeout function</summary>
    /// <param name="callback"></param>
    /// <param name="data"></param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_has_timeout", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_has_timeout(FltkTimeoutHandler callback, IntPtr data);
    
    /// <summary>
    /// "dnd" means Drag 'n Drop
    /// </summary>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_dnd", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_dnd();
    
    /// <summary>Call the Fl_grab function</summary>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_grab", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_grab();
    
    /// <summary>Call the Fl_set_grab function</summary>
    /// <param name="data"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_set_grab", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_set_grab(IntPtr data);
    
    /// <summary>Call the Fl_first_window function</summary>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_first_window", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_first_window();
    
    /// <summary>Call the Fl_next_window function</summary>
    /// <param name="current"></param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_next_window", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_next_window(IntPtr current);
    
    /// <summary>Call the Fl_modal function</summary>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_modal", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_modal();
    
    /// <summary>Call the Fl_should_program_quit function</summary>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_should_program_quit", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_should_program_quit();
    
    /// <summary>Call the Fl_program_should_quit function</summary>
    /// <param name="flag"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_program_should_quit", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_program_should_quit(int flag);
    
    /// <summary>Call the Fl_event_inside function</summary>
    /// <param name="x"></param>
    /// <param name="y"></param>
    /// <param name="width"></param>
    /// <param name="height"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_event_inside", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_event_inside(int x, int y, int width, int height);
    
    /// <summary>Call the Fl_belowmouse function</summary>
    /// <returns>
    /// <inheritdoc cref="Fl_Widget_new" path="/returns" />
    /// </returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_belowmouse", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_belowmouse();
    
    /// <summary>Call the Fl_set_belowmouse function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Widget_new" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_set_belowmouse", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_set_belowmouse(IntPtr widget);
    
    /// <summary>Call the Fl_delete_widget function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Widget_new" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_delete_widget", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_delete_widget(IntPtr widget);
    
    /// <summary>Call the Fl_Widget_Tracker_new function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Widget_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Widget_Tracker_new", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Widget_Tracker_new(IntPtr widget);
    
    /// <summary>Call the Fl_Widget_Tracker_deleted function</summary>
    /// <param name="self">
    /// <inheritdoc cref="Fl_Widget_Tracker_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Widget_Tracker_deleted", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Widget_Tracker_deleted(IntPtr self);
    
    /// <summary>Call the Fl_Widget_Tracker_delete function</summary>
    /// <param name="self">
    /// <inheritdoc cref="Fl_Widget_Tracker_new" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Widget_Tracker_delete", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Widget_Tracker_delete(IntPtr self);
    
    /// <summary>Call the Fl_init_all function</summary>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_init_all", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_init_all();
    
    /// <summary>Call the Fl_redraw function</summary>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_redraw", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_redraw();
    
    /// <summary>Call the Fl_event_shift function</summary>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_event_shift", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_event_shift();
    
    /// <summary>Call the Fl_event_ctrl function</summary>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_event_ctrl", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_event_ctrl();
    
    /// <summary>Call the Fl_event_command function</summary>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_event_command", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_event_command();
    
    /// <summary>Call the Fl_event_alt function</summary>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_event_alt", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_event_alt();
    
    /// <summary>Call the Fl_set_damage function</summary>
    /// <param name="flag"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_set_damage", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_set_damage(int flag);
    
    /// <summary>Call the Fl_damage function</summary>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_damage", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_damage();
    
    /// <summary>Call the Fl_visual function</summary>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_visual", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_visual();
    
    /// <summary>Call the Fl_own_colormap function</summary>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_own_colormap", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_own_colormap();
    
    /// <summary>Call the Fl_pushed function</summary>
    /// <returns>
    /// <inheritdoc cref="Fl_Widget_new" path="/returns" />
    /// </returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_pushed", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_pushed();
    
    /// <summary>Call the Fl_set_focus function</summary>
    /// <param name="widget"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_set_focus", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_set_focus(IntPtr widget);
    
    /// <summary>Call the Fl_version function</summary>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_version", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern double Fl_version();
    
    /// <summary>Call the Fl_abi_version function</summary>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_abi_version", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_abi_version();
    
    /// <summary>Call the Fl_api_version function</summary>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_api_version", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_api_version();
    
    /// <summary>Call the Fl_load_font function</summary>
    /// <param name="path"></param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_load_font", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_load_font(IntPtr path);
    
    /// <summary>Call the Fl_unload_font function</summary>
    /// <param name="path"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_unload_font", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_unload_font(IntPtr path);
    
    /// <summary>Call the Fl_foreground function</summary>
    /// <param name="r"></param>
    /// <param name="g"></param>
    /// <param name="b"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_foreground", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_foreground(char r, char g, char b);
    
    /// <summary>Call the Fl_background function</summary>
    /// <param name="r"></param>
    /// <param name="g"></param>
    /// <param name="b"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_background", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_background(char r, char g, char b);
    
    /// <summary>Call the Fl_background2 function</summary>
    /// <param name="r"></param>
    /// <param name="g"></param>
    /// <param name="b"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_background2", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_background2(char r, char g, char b);
    
    /// <summary>Call the Fl_selection_color function</summary>
    /// <param name="r"></param>
    /// <param name="g"></param>
    /// <param name="b"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_selection_color", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_selection_color(char r, char g, char b);
    
    /// <summary>Call the Fl_inactive_color function</summary>
    /// <param name="r"></param>
    /// <param name="g"></param>
    /// <param name="b"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_inactive_color", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_inactive_color(char r, char g, char b);
    
    /// <summary>Call the Fl_get_system_colors function</summary>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_get_system_colors", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_get_system_colors();
    
    /// <summary>Call the Fl_handle function</summary>
    /// <param name="@event"></param>
    /// <param name="windowPointer">
    /// <inheritdoc cref="Fl_Window_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_handle", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_handle(int @event, IntPtr windowPointer);
    
    /// <summary>Call the Fl_handle_ function</summary>
    /// <param name="@event"></param>
    /// <param name="windowPointer">
    /// <inheritdoc cref="Fl_Window_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_handle_", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_handle_(int @event, IntPtr windowPointer);
    
    /// <summary>Call the Fl_add_idle function</summary>
    /// <param name="handler"></param>
    /// <param name="data"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_add_idle", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_add_idle(IntPtr handler, IntPtr data);
    
    /// <summary>Call the Fl_has_idle function</summary>
    /// <param name="handler"></param>
    /// <param name="data"></param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_has_idle", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_has_idle(IntPtr handler, IntPtr data);
    
    /// <summary>Call the Fl_add_check function</summary>
    /// <param name="handler"></param>
    /// <param name="data"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_add_check", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_add_check(IntPtr handler, IntPtr data);
    
    /// <summary>Call the Fl_has_check function</summary>
    /// <param name="handler"></param>
    /// <param name="data"></param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_has_check", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_has_check(IntPtr handler, IntPtr data);
    
    /// <summary>Call the Fl_remove_check function</summary>
    /// <param name="handler"></param>
    /// <param name="data"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_remove_check", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_remove_check(IntPtr handler, IntPtr data);
    
    /// <summary>Call the Fl_flush function</summary>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_flush", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_flush();
    
    /// <summary>Call the Fl_set_screen_scale function</summary>
    /// <param name="screenIndex"></param>
    /// <param name="scale"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_set_screen_scale", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_set_screen_scale(int screenIndex, float scale);
    
    /// <summary>Call the Fl_screen_scale function</summary>
    /// <param name="screenIndex"></param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_screen_scale", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern float Fl_screen_scale(int screenIndex);
    
    /// <summary>Call the Fl_screen_scaling_supported function</summary>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_screen_scaling_supported", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_screen_scaling_supported();
    
    /// <summary>Call the Fl_screen_count function</summary>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_screen_count", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_screen_count();
    
    /// <summary>Call the Fl_screen_num function</summary>
    /// <param name="x"></param>
    /// <param name="y"></param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_screen_num", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_screen_num(int x, int y);
    
    /// <summary>Call the Fl_screen_num_inside function</summary>
    /// <param name="x"></param>
    /// <param name="y"></param>
    /// <param name="width"></param>
    /// <param name="height"></param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_screen_num_inside", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_screen_num_inside(int x, int y, int width, int height);
    
    /// <summary>Call the Fl_screen_xywh function</summary>
    /// <param name="x"></param>
    /// <param name="y"></param>
    /// <param name="width"></param>
    /// <param name="height"></param>
    /// <param name="n"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_screen_xywh", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_screen_xywh(ref int x, ref int y, ref int width, ref int height, int n);
    
    /// <summary>Call the Fl_screen_xywh_at function</summary>
    /// <param name="x"></param>
    /// <param name="y"></param>
    /// <param name="width"></param>
    /// <param name="height"></param>
    /// <param name="mx"></param>
    /// <param name="my"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_screen_xywh_at", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_screen_xywh_at(ref int x, ref int y, ref int width, ref int height, int mx, int my);
    
    /// <summary>Call the Fl_screen_xywh_inside function</summary>
    /// <param name="x"></param>
    /// <param name="y"></param>
    /// <param name="width"></param>
    /// <param name="height"></param>
    /// <param name="mx"></param>
    /// <param name="my"></param>
    /// <param name="mw"></param>
    /// <param name="mh"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_screen_xywh_inside", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_screen_xywh_inside(ref int x, ref int y, ref int width, ref int height, int mx, int my, int mw, int mh);
    
    /// <summary>Call the Fl_screen_xywh_mouse function</summary>
    /// <param name="x"></param>
    /// <param name="y"></param>
    /// <param name="width"></param>
    /// <param name="height"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_screen_xywh_mouse", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_screen_xywh_mouse(ref int x, ref int y, ref int width, ref int height);
    
    /// <summary>Call the Fl_screen_dpi function</summary>
    /// <param name="horizontal"></param>
    /// <param name="vertical"></param>
    /// <param name="n"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_screen_dpi", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_screen_dpi(ref float horizontal, ref float vertical, int n);
    
    /// <summary>Call the Fl_screen_work_area function</summary>
    /// <param name="x"></param>
    /// <param name="y"></param>
    /// <param name="width"></param>
    /// <param name="height"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_screen_work_area", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_screen_work_area(ref int x, ref int y, ref int width, ref int height);
    
    /// <summary>Call the Fl_screen_work_area_at function</summary>
    /// <param name="x"></param>
    /// <param name="y"></param>
    /// <param name="width"></param>
    /// <param name="height"></param>
    /// <param name="mx"></param>
    /// <param name="my"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_screen_work_area_at", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_screen_work_area_at(ref int x, ref int y, ref int width, ref int height, int mx, int my);
    
    /// <summary>Call the Fl_screen_work_area_mouse function</summary>
    /// <param name="x"></param>
    /// <param name="y"></param>
    /// <param name="width"></param>
    /// <param name="height"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_screen_work_area_mouse", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_screen_work_area_mouse(ref int x, ref int y, ref int width, ref int height);
    
    /// <summary>Call the Fl_keyboard_screen_scaling function</summary>
    /// <param name="value"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_keyboard_screen_scaling", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_keyboard_screen_scaling(int value);
    
    /// <summary>Call the Fl_open_display function</summary>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_open_display", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_open_display();
    
    /// <summary>Call the Fl_close_display function</summary>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_close_display", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_close_display();
    
    /// <summary>Call the Fl_box_dx function</summary>
    /// <param name="boxType"></param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_box_dx", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_box_dx(int boxType);
    
    /// <summary>Call the Fl_box_dy function</summary>
    /// <param name="boxType"></param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_box_dy", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_box_dy(int boxType);
    
    /// <summary>Call the Fl_box_dw function</summary>
    /// <param name="boxType"></param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_box_dw", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_box_dw(int boxType);
    
    /// <summary>Call the Fl_box_dh function</summary>
    /// <param name="boxType"></param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_box_dh", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_box_dh(int boxType);
    
    /// <summary>Call the Fl_mac_os_version function</summary>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_mac_os_version", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_mac_os_version();
    
    /// <summary>Call the Fl_event_clipboard function</summary>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_event_clipboard", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_event_clipboard();
    
    /// <summary>Call the Fl_event_clipboard_type function</summary>
    /// <returns>
    /// <inheritdoc cref="Fl_Widget_new" path="/param[@name='labelPointer']" />
    /// </returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_event_clipboard_type", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_event_clipboard_type();
    
    /// <summary>Call the Fl_clipboard_contains function</summary>
    /// <param name="type">
    /// <inheritdoc cref="Fl_Widget_new" path="/param[@name='labelPointer']" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_clipboard_contains", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_clipboard_contains(IntPtr type);
    
    /// <summary>Call the Fl_event_dispatch function</summary>
    /// <param name="callback"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_event_dispatch", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_event_dispatch(FltkEventDispatchHandler callback);
    
    /// <summary>Call the Fl_inactive function</summary>
    /// <param name="c"></param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_inactive", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern uint Fl_inactive(uint c);
    
    /// <summary>Call the Fl_lighter function</summary>
    /// <param name="c"></param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_lighter", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern uint Fl_lighter(uint c);
    
    /// <summary>Call the Fl_darker function</summary>
    /// <param name="c"></param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_darker", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern uint Fl_darker(uint c);
    
    /// <summary>Call the Fl_set_box_type_cb function</summary>
    /// <param name="boxType"></param>
    /// <param name="callback"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_set_box_type_cb", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_set_box_type_cb(int boxType, FltkBoxDrawHandler callback);
    
    /// <summary>Call the Fl_draw_box_active function</summary>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_draw_box_active", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_draw_box_active();
    
    /// <summary>Call the Fl_gray_ramp function</summary>
    /// <param name="i"></param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_gray_ramp", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern uint Fl_gray_ramp(int i);
    
    /// <summary>Call the Fl_color_average function</summary>
    /// <param name="a"></param>
    /// <param name="b"></param>
    /// <param name="f"></param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_color_average", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern uint Fl_color_average(uint a, uint b, float f);
    
    /// <summary>Call the Fl_contrast function</summary>
    /// <param name="a"></param>
    /// <param name="b"></param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_contrast", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern uint Fl_contrast(uint a, uint b);
    
    /// <summary>Call the Fl_rgb_color function</summary>
    /// <param name="r"></param>
    /// <param name="g"></param>
    /// <param name="b"></param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_rgb_color", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern uint Fl_rgb_color(char r, char g, char b);
    
    /// <summary>Call the Fl_rgb_color2 function</summary>
    /// <param name="g"></param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_rgb_color2", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern uint Fl_rgb_color2(char g);
    
    /// <summary>Call the Fl_cmap function</summary>
    /// <param name="color"></param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_cmap", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern uint Fl_cmap(uint color);
    
    /// <summary>Call the Fl_box_color function</summary>
    /// <param name="color"></param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_box_color", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern uint Fl_box_color(uint color);
    
    /// <summary>Call the Fl_set_box_color function</summary>
    /// <param name="color"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_set_box_color", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_set_box_color(uint color);
    
    /// <summary>Call the Fl_add_system_handler function</summary>
    /// <param name="callback"></param>
    /// <param name="data"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_add_system_handler", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_add_system_handler(FltkSystemHandler callback, IntPtr data);
    
    /// <summary>Call the Fl_remove_system_handler function</summary>
    /// <param name="callback"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_remove_system_handler", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_remove_system_handler(FltkSystemHandler callback);
    
    /// <summary>Call the Fl_gl_visual function</summary>
    /// <param name="mode"></param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_gl_visual", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_gl_visual(int mode);
    
    /// <summary>Call the Fl_add_clipboard_notify function</summary>
    /// <param name="callback"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_add_clipboard_notify", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_add_clipboard_notify(FltkClipboardNotifyHandler callback);
    
    /// <summary>Call the Fl_Fl_remove_clipboard_notify function</summary>
    /// <param name="callback"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Fl_remove_clipboard_notify", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Fl_remove_clipboard_notify(FltkClipboardNotifyHandler callback);
    
    /// <summary>Call the Fl_Fl_open_callback function</summary>
    /// <param name="callback"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Fl_open_callback", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Fl_open_callback(FltkClipboardNotifyHandler callback);
    
    /// <summary>Call the Fl_disable_wayland function</summary>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_disable_wayland", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_disable_wayland();
    
    /// <summary>Call the Fl_Widget_Tracker_widget function</summary>
    /// <param name="tracker">
    /// <inheritdoc cref="Fl_Widget_Tracker_new" path="/returns" />
    /// </param>
    /// <returns>
    /// <inheritdoc cref="Fl_Widget_new" path="/returns" />
    /// </returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Widget_Tracker_widget", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Widget_Tracker_widget(IntPtr tracker);
    
    /// <summary>Call the Fl_Widget_Tracker_exists function</summary>
    /// <param name="tracker">
    /// <inheritdoc cref="Fl_Widget_Tracker_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Widget_Tracker_exists", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Widget_Tracker_exists(IntPtr tracker);
    
    /// <summary>Call the Fl_get_color_rgb function</summary>
    /// <param name="color"></param>
    /// <param name="r"></param>
    /// <param name="g"></param>
    /// <param name="b"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_get_color_rgb", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_get_color_rgb(uint color, ref uint r, ref uint g, ref uint b);
    
    /// <summary>Call the Fl_callback_reason function</summary>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_callback_reason", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_callback_reason();
    
    /// <summary>Call the Fl_get_fl_msg function</summary>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_get_fl_msg", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_get_fl_msg();
    
    /// <summary>Call the Fl_cairo_make_current function</summary>
    /// <param name="widget"></param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_cairo_make_current", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_cairo_make_current(IntPtr widget);
    
    /// <summary>Call the Fl_set_cairo_autolink_context function</summary>
    /// <param name="alink"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_set_cairo_autolink_context", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_set_cairo_autolink_context(int alink);
    
    /// <summary>Call the Fl_cairo_autolink_context function</summary>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_cairo_autolink_context", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_cairo_autolink_context();
    
    /// <summary>Call the Fl_cairo_cc function</summary>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_cairo_cc", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_cairo_cc();
    
    /// <summary>Call the Fl_set_cairo_cc function</summary>
    /// <param name="c"></param>
    /// <param name="own"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_set_cairo_cc", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_set_cairo_cc(IntPtr c, int own);
    
    /// <summary>Call the Fl_cairo_flush function</summary>
    /// <param name="c"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_cairo_flush", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_cairo_flush(IntPtr c);
    
    /// <summary>Call the Fl_option function</summary>
    /// <param name="option"></param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_option", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_option(int option);
    
    /// <summary>Call the Fl_set_option function</summary>
    /// <param name="option"></param>
    /// <param name="value"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_set_option", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_set_option(int option, int value);
    
    /// <summary>Call the Fl_load_system_icons function</summary>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_load_system_icons", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_load_system_icons();
    
    /// <summary>Call the Fl_set_contrast_level function</summary>
    /// <param name="level"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_set_contrast_level", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_set_contrast_level(int level);
    
    /// <summary>Call the Fl_contrast_level function</summary>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_contrast_level", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_contrast_level();
    
    /// <summary>Call the Fl_set_contrast_mode function</summary>
    /// <param name="mode"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_set_contrast_mode", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_set_contrast_mode(int mode);
    
    /// <summary>Call the Fl_contrast_mode function</summary>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_contrast_mode", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_contrast_mode();
    
    /// <summary>Call the Fl_set_contrast_function function</summary>
    /// <param name="fnc"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_set_contrast_function", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_set_contrast_function(FltkContrastFunction fnc);
    
    /// <summary>Call the Fl_using_wayland function</summary>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_using_wayland", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_using_wayland();
    
    /// <summary>Call the Fl_Window_new_wh function</summary>
    /// <param name="width"></param>
    /// <param name="height"></param>
    /// <param name="titlePointer">
    /// <inheritdoc cref="Fl_Widget_new" path="/param[@name='labelPointer']" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Window_new_wh", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Window_new_wh(int width, int height, IntPtr titlePointer);
    
    /// <summary>Call the Fl_Window_find_by_handle function</summary>
    /// <param name="handle"></param>
    /// <returns>
    /// <inheritdoc cref="Fl_Window_new" path="/returns" />
    /// </returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Window_find_by_handle", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Window_find_by_handle(IntPtr handle);
    
    /// <summary>Call the Fl_Window_show_with_args function</summary>
    /// <param name="window">
    /// <inheritdoc cref="Fl_Window_new" path="/returns" />
    /// </param>
    /// <param name="argc"></param>
    /// <param name="argv"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Window_show_with_args", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Window_show_with_args(IntPtr window, int argc, IntPtr argv);
    
    /// <summary>Call the Fl_Window_set_raw_handle function</summary>
    /// <param name="window">
    /// <inheritdoc cref="Fl_Window_new" path="/returns" />
    /// </param>
    /// <param name="handle"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Window_set_raw_handle", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Window_set_raw_handle(IntPtr window, IntPtr handle);
    
    /// <summary>Call the Fl_gl_start function</summary>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_gl_start", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_gl_start();
    
    /// <summary>Call the Fl_gl_finish function</summary>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_gl_finish", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_gl_finish();
    
    /// <summary>Call the Fl_ function</summary>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_();
    
    /// <summary>Call the Fl_Widget_new function</summary>
    /// <param name="x"></param>
    /// <param name="y"></param>
    /// <param name="width"></param>
    /// <param name="height"></param>
    /// <param name="labelPointer"></param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Widget_new", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Widget_new(int x, int y, int width, int height, IntPtr labelPointer);
    
    /// <summary>Call the Fl_Widget_x function</summary>
    /// <param name="widget">
    /// Pointer to <c>Fl_Widget</c>
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Widget_x", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Widget_x(IntPtr widget);
    
    /// <summary>Call the Fl_Widget_y function</summary>
    /// <param name="widget">
    /// Pointer to <c>Fl_Widget</c>
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Widget_y", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Widget_y(IntPtr widget);
    
    /// <summary>Call the Fl_Widget_width function</summary>
    /// <param name="widget">
    /// Pointer to <c>Fl_Widget</c>
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Widget_width", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Widget_width(IntPtr widget);
    
    /// <summary>Call the Fl_Widget_height function</summary>
    /// <param name="widget">
    /// Pointer to <c>Fl_Widget</c>
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Widget_height", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Widget_height(IntPtr widget);
    
    /// <summary>Call the Fl_Widget_label function</summary>
    /// <param name="widget">
    /// Pointer to <c>Fl_Widget</c>
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Widget_label", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Widget_label(IntPtr widget);
    
    /// <summary>Call the Fl_Widget_set_label function</summary>
    /// <param name="widget"></param>
    /// <param name="labelPointer">
    /// <inheritdoc cref="Fl_Widget_new" path="/param[@name='labelPointer']" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Widget_set_label", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Widget_set_label(IntPtr widget, IntPtr labelPointer);
    
    /// <summary>Call the Fl_Widget_redraw function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Widget_new" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Widget_redraw", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Widget_redraw(IntPtr widget);
    
    /// <summary>Call the Fl_Widget_show function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Widget_new" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Widget_show", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Widget_show(IntPtr widget);
    
    /// <summary>Call the Fl_Widget_hide function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Widget_new" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Widget_hide", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Widget_hide(IntPtr widget);
    
    /// <summary>Call the Fl_Widget_activate function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Widget_new" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Widget_activate", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Widget_activate(IntPtr widget);
    
    /// <summary>Call the Fl_Widget_deactivate function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Widget_new" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Widget_deactivate", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Widget_deactivate(IntPtr widget);
    
    /// <summary>Call the Fl_Widget_redraw_label function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Widget_new" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Widget_redraw_label", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Widget_redraw_label(IntPtr widget);
    
    /// <summary>Call the Fl_Widget_resize function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Widget_new" path="/returns" />
    /// </param>
    /// <param name="x"></param>
    /// <param name="y"></param>
    /// <param name="width"></param>
    /// <param name="height"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Widget_resize", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Widget_resize(IntPtr widget, int x, int y, int width, int height);
    
    /// <summary>Call the Fl_Widget_widget_resize function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Widget_new" path="/returns" />
    /// </param>
    /// <param name="x"></param>
    /// <param name="y"></param>
    /// <param name="width"></param>
    /// <param name="height"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Widget_widget_resize", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Widget_widget_resize(IntPtr widget, int x, int y, int width, int height);
    
    /// <summary>Call the Fl_Widget_tooltip function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Widget_new" path="/returns" />
    /// </param>
    /// <returns>
    /// <inheritdoc cref="Fl_Widget_new" path="/param[@name='labelPointer']" />
    /// </returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Widget_tooltip", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Widget_tooltip(IntPtr widget);
    
    /// <summary>Call the Fl_Widget_set_tooltip function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Widget_new" path="/returns" />
    /// </param>
    /// <param name="tooltipPointer">
    /// <inheritdoc cref="Fl_Widget_new" path="/param[@name='labelPointer']" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Widget_set_tooltip", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Widget_set_tooltip(IntPtr widget, IntPtr tooltipPointer);
    
    /// <summary>Call the Fl_Widget_get_type function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Widget_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Widget_get_type", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Widget_get_type(IntPtr widget);
    
    /// <summary>Call the Fl_Widget_set_type function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Widget_new" path="/returns" />
    /// </param>
    /// <param name="type"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Widget_set_type", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Widget_set_type(IntPtr widget, int type);
    
    /// <summary>Call the Fl_Widget_color function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Widget_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Widget_color", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern uint Fl_Widget_color(IntPtr widget);
    
    /// <summary>Call the Fl_Widget_set_color function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Widget_new" path="/returns" />
    /// </param>
    /// <param name="color"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Widget_set_color", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Widget_set_color(IntPtr widget, uint color);
    
    /// <summary>Call the Fl_Widget_measure_label function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Widget_new" path="/returns" />
    /// </param>
    /// <param name="width"></param>
    /// <param name="height"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Widget_measure_label", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Widget_measure_label(IntPtr widget, ref int width, ref int height);
    
    /// <summary>Call the Fl_Widget_label_color function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Widget_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Widget_label_color", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern uint Fl_Widget_label_color(IntPtr widget);
    
    /// <summary>Call the Fl_Widget_set_label_color function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Widget_new" path="/returns" />
    /// </param>
    /// <param name="color">
    /// <inheritdoc cref="Fl_Widget_label_color" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Widget_set_label_color", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Widget_set_label_color(IntPtr widget, uint color);
    
    /// <summary>Call the Fl_Widget_label_font function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Widget_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Widget_label_font", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Widget_label_font(IntPtr widget);
    
    /// <summary>Call the Fl_Widget_set_label_font function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Widget_new" path="/returns" />
    /// </param>
    /// <param name="fontIndex"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Widget_set_label_font", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Widget_set_label_font(IntPtr widget, int fontIndex);
    
    /// <summary>Call the Fl_Widget_label_size function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Widget_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Widget_label_size", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Widget_label_size(IntPtr widget);
    
    /// <summary>Call the Fl_Widget_set_label_size function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Widget_new" path="/returns" />
    /// </param>
    /// <param name="size">
    /// <inheritdoc cref="Fl_Widget_label_size" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Widget_set_label_size", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Widget_set_label_size(IntPtr widget, int size);
    
    /// <summary>Call the Fl_Widget_label_type function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Widget_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Widget_label_type", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Widget_label_type(IntPtr widget);
    
    /// <summary>Call the Fl_Widget_set_label_type function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Widget_new" path="/returns" />
    /// </param>
    /// <param name="size">
    /// <inheritdoc cref="Fl_Widget_label_type" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Widget_set_label_type", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Widget_set_label_type(IntPtr widget, int size);
    
    /// <summary>Call the Fl_Widget_box function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Widget_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Widget_box", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Widget_box(IntPtr widget);
    
    /// <summary>Call the Fl_Widget_set_box function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Widget_new" path="/returns" />
    /// </param>
    /// <param name="type"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Widget_set_box", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Widget_set_box(IntPtr widget, int type);
    
    /// <summary>Call the Fl_Widget_changed function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Widget_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Widget_changed", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Widget_changed(IntPtr widget);
    
    /// <summary>Call the Fl_Widget_set_changed function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Widget_new" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Widget_set_changed", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Widget_set_changed(IntPtr widget);
    
    /// <summary>Call the Fl_Widget_clear_changed function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Widget_new" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Widget_clear_changed", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Widget_clear_changed(IntPtr widget);
    
    /// <summary>Call the Fl_Widget_align function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Widget_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Widget_align", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Widget_align(IntPtr widget);
    
    /// <summary>Call the Fl_Widget_set_align function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Widget_new" path="/returns" />
    /// </param>
    /// <param name="type"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Widget_set_align", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Widget_set_align(IntPtr widget, int type);
    
    /// <summary>Call the Fl_Widget_delete function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Widget_new" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Widget_delete", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Widget_delete(IntPtr widget);
    
    /// <summary>Call the Fl_Widget_set_image function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Widget_new" path="/returns" />
    /// </param>
    /// <param name="imagePointer"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Widget_set_image", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Widget_set_image(IntPtr widget, IntPtr imagePointer);
    
    /// <summary>Call the Fl_Widget_handle function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Widget_new" path="/returns" />
    /// </param>
    /// <param name="callback"></param>
    /// <param name="data"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Widget_handle", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Widget_handle(IntPtr widget, FltkWidgetHandleCallback callback, IntPtr data);
    
    /// <summary>Call the Fl_Widget_handle_event function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Widget_new" path="/returns" />
    /// </param>
    /// <param name="eventType"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Widget_handle_event", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Widget_handle_event(IntPtr widget, int eventType);
    
    /// <summary>Call the Fl_Widget_draw function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Widget_new" path="/returns" />
    /// </param>
    /// <param name="callback"></param>
    /// <param name="data"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Widget_draw", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Widget_draw(IntPtr widget, FltkWidgetCallback callback, IntPtr data);
    
    /// <summary>Call the Fl_Widget_resize_callback function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Widget_new" path="/returns" />
    /// </param>
    /// <param name="callback"></param>
    /// <param name="data"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Widget_resize_callback", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Widget_resize_callback(IntPtr widget, FltkWidgetResizeCallback callback, IntPtr data);
    
    /// <summary>Call the Fl_Widget_set_when function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Widget_new" path="/returns" />
    /// </param>
    /// <param name="value"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Widget_set_when", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Widget_set_when(IntPtr widget, int value);
    
    /// <summary>Call the Fl_Widget_when function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Widget_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Widget_when", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Widget_when(IntPtr widget);
    
    /// <summary>Call the Fl_Widget_image function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Widget_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Widget_image", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Widget_image(IntPtr widget);
    
    /// <summary>Call the Fl_Widget_parent function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Widget_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Widget_parent", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Widget_parent(IntPtr widget);
    
    /// <summary>Call the Fl_Widget_selection_color function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Widget_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Widget_selection_color", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern uint Fl_Widget_selection_color(IntPtr widget);
    
    /// <summary>Call the Fl_Widget_set_selection_color function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Widget_new" path="/returns" />
    /// </param>
    /// <param name="color"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Widget_set_selection_color", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Widget_set_selection_color(IntPtr widget, uint color);
    
    /// <summary>Call the Fl_Widget_inside function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Widget_new" path="/returns" />
    /// </param>
    /// <param name="other"></param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Widget_inside", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Widget_inside(IntPtr widget, IntPtr other);
    
    /// <summary>Call the Fl_Widget_window function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Widget_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Widget_window", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Widget_window(IntPtr widget);
    
    /// <summary>Call the Fl_Widget_top_window function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Widget_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Widget_top_window", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Widget_top_window(IntPtr widget);
    
    /// <summary>Call the Fl_Widget_takes_events function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Widget_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Widget_takes_events", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Widget_takes_events(IntPtr widget);
    
    /// <summary>Call the Fl_Widget_user_data function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Widget_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Widget_user_data", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Widget_user_data(IntPtr widget);
    
    /// <summary>Call the Fl_Widget_take_focus function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Widget_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Widget_take_focus", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Widget_take_focus(IntPtr widget);
    
    /// <summary>Call the Fl_Widget_set_visible_focus function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Widget_new" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Widget_set_visible_focus", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Widget_set_visible_focus(IntPtr widget);
    
    /// <summary>Call the Fl_Widget_clear_visible_focus function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Widget_new" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Widget_clear_visible_focus", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Widget_clear_visible_focus(IntPtr widget);
    
    /// <summary>Call the Fl_Widget_visible_focus function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Widget_new" path="/returns" />
    /// </param>
    /// <param name="value"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Widget_visible_focus", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Widget_visible_focus(IntPtr widget, int value);
    
    /// <summary>Call the Fl_Widget_has_visible_focus function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Widget_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Widget_has_visible_focus", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern uint Fl_Widget_has_visible_focus(IntPtr widget);
    
    /// <summary>Call the Fl_Widget_set_user_data function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Widget_new" path="/returns" />
    /// </param>
    /// <param name="data"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Widget_set_user_data", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Widget_set_user_data(IntPtr widget, IntPtr data);
    
    /// <summary>Call the Fl_Widget_draw_data function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Widget_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Widget_draw_data", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Widget_draw_data(IntPtr widget);
    
    /// <summary>Call the Fl_Widget_handle_data function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Widget_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Widget_handle_data", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Widget_handle_data(IntPtr widget);
    
    /// <summary>Call the Fl_Widget_set_draw_data function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Widget_new" path="/returns" />
    /// </param>
    /// <param name="data"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Widget_set_draw_data", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Widget_set_draw_data(IntPtr widget, IntPtr data);
    
    /// <summary>Call the Fl_Widget_set_handle_data function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Widget_new" path="/returns" />
    /// </param>
    /// <param name="data"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Widget_set_handle_data", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Widget_set_handle_data(IntPtr widget, IntPtr data);
    
    /// <summary>Call the Fl_Widget_damage function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Widget_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Widget_damage", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern char Fl_Widget_damage(IntPtr widget);
    
    /// <summary>Call the Fl_Widget_set_damage function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Widget_new" path="/returns" />
    /// </param>
    /// <param name="flag"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Widget_set_damage", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Widget_set_damage(IntPtr widget, char flag);
    
    /// <summary>Call the Fl_Widget_set_damage_area function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Widget_new" path="/returns" />
    /// </param>
    /// <param name="flag"></param>
    /// <param name="x"></param>
    /// <param name="y"></param>
    /// <param name="width"></param>
    /// <param name="height"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Widget_set_damage_area", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Widget_set_damage_area(IntPtr widget, char flag, int x, int y, int width, int height);
    
    /// <summary>Call the Fl_Widget_clear_damage function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Widget_new" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Widget_clear_damage", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Widget_clear_damage(IntPtr widget);
    
    /// <summary>Call the Fl_Widget_as_window function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Widget_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Widget_as_window", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Widget_as_window(IntPtr widget);
    
    /// <summary>Call the Fl_Widget_as_group function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Widget_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Widget_as_group", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Widget_as_group(IntPtr widget);
    
    /// <summary>Call the Fl_Widget_set_deimage function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Widget_new" path="/returns" />
    /// </param>
    /// <param name="imagePointer"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Widget_set_deimage", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Widget_set_deimage(IntPtr widget, IntPtr imagePointer);
    
    /// <summary>Call the Fl_Widget_deimage function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Widget_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Widget_deimage", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Widget_deimage(IntPtr widget);
    
    /// <summary>Call the Fl_Widget_set_callback function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Widget_new" path="/returns" />
    /// </param>
    /// <param name="callback"></param>
    /// <param name="data"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Widget_set_callback", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Widget_set_callback(IntPtr widget, FltkWidgetCallback callback, IntPtr data);
    
    /// <summary>Call the Fl_Widget_set_deleter function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Widget_new" path="/returns" />
    /// </param>
    /// <param name="callback"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Widget_set_deleter", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Widget_set_deleter(IntPtr widget, Action<Action> callback);
    
    /// <summary>Call the Fl_Widget_visible function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Widget_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Widget_visible", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Widget_visible(IntPtr widget);
    
    /// <summary>Call the Fl_Widget_visible_r function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Widget_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Widget_visible_r", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Widget_visible_r(IntPtr widget);
    
    /// <summary>Call the Fl_Widget_active function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Widget_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Widget_active", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern uint Fl_Widget_active(IntPtr widget);
    
    /// <summary>Call the Fl_Widget_active_r function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Widget_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Widget_active_r", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Widget_active_r(IntPtr widget);
    
    /// <summary>Call the Fl_Widget_callback function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Widget_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Widget_callback", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern FltkWidgetCallback Fl_Widget_callback(IntPtr widget);
    
    /// <summary>Call the Fl_Widget_set_deletion_callback function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Widget_new" path="/returns" />
    /// </param>
    /// <param name="callback"></param>
    /// <param name="data"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Widget_set_deletion_callback", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Widget_set_deletion_callback(IntPtr widget, FltkWidgetCallback callback, IntPtr data);
    
    /// <summary>Call the Fl_Widget_from_dyn_ptr function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Widget_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Widget_from_dyn_ptr", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Widget_from_dyn_ptr(IntPtr widget);
    
    /// <summary>Call the Fl_Widget_from_derived_dyn_ptr function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Widget_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Widget_from_derived_dyn_ptr", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Widget_from_derived_dyn_ptr(IntPtr widget);
    
    /// <summary>Call the Fl_Widget_super_draw function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Widget_new" path="/returns" />
    /// </param>
    /// <param name="flag"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Widget_super_draw", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Widget_super_draw(IntPtr widget, int flag);
    
    /// <summary>Call the Fl_Widget_super_draw_first function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Widget_new" path="/returns" />
    /// </param>
    /// <param name="flag"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Widget_super_draw_first", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Widget_super_draw_first(IntPtr widget, int flag);
    
    /// <summary>Call the Fl_Widget_super_handle_first function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Widget_new" path="/returns" />
    /// </param>
    /// <param name="flag"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Widget_super_handle_first", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Widget_super_handle_first(IntPtr widget, int flag);
    
    /// <summary>Call the Fl_Group_new function</summary>
    /// <param name="x"></param>
    /// <param name="y"></param>
    /// <param name="width"></param>
    /// <param name="height"></param>
    /// <param name="labelPointer">
    /// <inheritdoc cref="Fl_Widget_new" path="/param[@name='labelPointer']" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Group_new", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Group_new(int x, int y, int width, int height, IntPtr labelPointer);
    
    /// <summary>Call the Fl_Group_x function</summary>
    /// <param name="widget">
    /// Pointer to <c>Fl_Group</c>
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Group_x", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Group_x(IntPtr widget);
    
    /// <summary>Call the Fl_Group_y function</summary>
    /// <param name="widget">
    /// Pointer to <c>Fl_Group</c>
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Group_y", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Group_y(IntPtr widget);
    
    /// <summary>Call the Fl_Group_width function</summary>
    /// <param name="widget">
    /// Pointer to <c>Fl_Group</c>
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Group_width", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Group_width(IntPtr widget);
    
    /// <summary>Call the Fl_Group_height function</summary>
    /// <param name="widget">
    /// Pointer to <c>Fl_Group</c>
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Group_height", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Group_height(IntPtr widget);
    
    /// <summary>Call the Fl_Group_label function</summary>
    /// <param name="widget">
    /// Pointer to <c>Fl_Group</c>
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Group_label", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Group_label(IntPtr widget);
    
    /// <summary>Call the Fl_Group_set_label function</summary>
    /// <param name="widget"></param>
    /// <param name="labelPointer">
    /// <inheritdoc cref="Fl_Widget_new" path="/param[@name='labelPointer']" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Group_set_label", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Group_set_label(IntPtr widget, IntPtr labelPointer);
    
    /// <summary>Call the Fl_Group_redraw function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Group_new" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Group_redraw", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Group_redraw(IntPtr widget);
    
    /// <summary>Call the Fl_Group_show function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Group_new" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Group_show", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Group_show(IntPtr widget);
    
    /// <summary>Call the Fl_Group_hide function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Group_new" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Group_hide", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Group_hide(IntPtr widget);
    
    /// <summary>Call the Fl_Group_activate function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Group_new" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Group_activate", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Group_activate(IntPtr widget);
    
    /// <summary>Call the Fl_Group_deactivate function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Group_new" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Group_deactivate", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Group_deactivate(IntPtr widget);
    
    /// <summary>Call the Fl_Group_redraw_label function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Group_new" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Group_redraw_label", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Group_redraw_label(IntPtr widget);
    
    /// <summary>Call the Fl_Group_resize function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Group_new" path="/returns" />
    /// </param>
    /// <param name="x"></param>
    /// <param name="y"></param>
    /// <param name="width"></param>
    /// <param name="height"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Group_resize", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Group_resize(IntPtr widget, int x, int y, int width, int height);
    
    /// <summary>Call the Fl_Group_widget_resize function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Group_new" path="/returns" />
    /// </param>
    /// <param name="x"></param>
    /// <param name="y"></param>
    /// <param name="width"></param>
    /// <param name="height"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Group_widget_resize", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Group_widget_resize(IntPtr widget, int x, int y, int width, int height);
    
    /// <summary>Call the Fl_Group_tooltip function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Group_new" path="/returns" />
    /// </param>
    /// <returns>
    /// <inheritdoc cref="Fl_Group_new" path="/param[@name='labelPointer']" />
    /// </returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Group_tooltip", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Group_tooltip(IntPtr widget);
    
    /// <summary>Call the Fl_Group_set_tooltip function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Group_new" path="/returns" />
    /// </param>
    /// <param name="tooltipPointer">
    /// <inheritdoc cref="Fl_Group_new" path="/param[@name='labelPointer']" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Group_set_tooltip", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Group_set_tooltip(IntPtr widget, IntPtr tooltipPointer);
    
    /// <summary>Call the Fl_Group_get_type function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Group_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Group_get_type", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Group_get_type(IntPtr widget);
    
    /// <summary>Call the Fl_Group_set_type function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Group_new" path="/returns" />
    /// </param>
    /// <param name="type"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Group_set_type", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Group_set_type(IntPtr widget, int type);
    
    /// <summary>Call the Fl_Group_color function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Group_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Group_color", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern uint Fl_Group_color(IntPtr widget);
    
    /// <summary>Call the Fl_Group_set_color function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Group_new" path="/returns" />
    /// </param>
    /// <param name="color"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Group_set_color", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Group_set_color(IntPtr widget, uint color);
    
    /// <summary>Call the Fl_Group_measure_label function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Group_new" path="/returns" />
    /// </param>
    /// <param name="width"></param>
    /// <param name="height"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Group_measure_label", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Group_measure_label(IntPtr widget, ref int width, ref int height);
    
    /// <summary>Call the Fl_Group_label_color function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Group_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Group_label_color", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern uint Fl_Group_label_color(IntPtr widget);
    
    /// <summary>Call the Fl_Group_set_label_color function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Group_new" path="/returns" />
    /// </param>
    /// <param name="color">
    /// <inheritdoc cref="Fl_Group_label_color" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Group_set_label_color", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Group_set_label_color(IntPtr widget, uint color);
    
    /// <summary>Call the Fl_Group_label_font function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Group_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Group_label_font", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Group_label_font(IntPtr widget);
    
    /// <summary>Call the Fl_Group_set_label_font function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Group_new" path="/returns" />
    /// </param>
    /// <param name="fontIndex"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Group_set_label_font", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Group_set_label_font(IntPtr widget, int fontIndex);
    
    /// <summary>Call the Fl_Group_label_size function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Group_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Group_label_size", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Group_label_size(IntPtr widget);
    
    /// <summary>Call the Fl_Group_set_label_size function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Group_new" path="/returns" />
    /// </param>
    /// <param name="size">
    /// <inheritdoc cref="Fl_Group_label_size" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Group_set_label_size", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Group_set_label_size(IntPtr widget, int size);
    
    /// <summary>Call the Fl_Group_label_type function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Group_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Group_label_type", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Group_label_type(IntPtr widget);
    
    /// <summary>Call the Fl_Group_set_label_type function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Group_new" path="/returns" />
    /// </param>
    /// <param name="size">
    /// <inheritdoc cref="Fl_Group_label_type" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Group_set_label_type", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Group_set_label_type(IntPtr widget, int size);
    
    /// <summary>Call the Fl_Group_box function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Group_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Group_box", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Group_box(IntPtr widget);
    
    /// <summary>Call the Fl_Group_set_box function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Group_new" path="/returns" />
    /// </param>
    /// <param name="type"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Group_set_box", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Group_set_box(IntPtr widget, int type);
    
    /// <summary>Call the Fl_Group_changed function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Group_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Group_changed", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Group_changed(IntPtr widget);
    
    /// <summary>Call the Fl_Group_set_changed function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Group_new" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Group_set_changed", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Group_set_changed(IntPtr widget);
    
    /// <summary>Call the Fl_Group_clear_changed function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Group_new" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Group_clear_changed", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Group_clear_changed(IntPtr widget);
    
    /// <summary>Call the Fl_Group_align function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Group_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Group_align", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Group_align(IntPtr widget);
    
    /// <summary>Call the Fl_Group_set_align function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Group_new" path="/returns" />
    /// </param>
    /// <param name="type"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Group_set_align", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Group_set_align(IntPtr widget, int type);
    
    /// <summary>Call the Fl_Group_delete function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Group_new" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Group_delete", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Group_delete(IntPtr widget);
    
    /// <summary>Call the Fl_Group_set_image function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Group_new" path="/returns" />
    /// </param>
    /// <param name="imagePointer"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Group_set_image", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Group_set_image(IntPtr widget, IntPtr imagePointer);
    
    /// <summary>Call the Fl_Group_handle function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Group_new" path="/returns" />
    /// </param>
    /// <param name="callback"></param>
    /// <param name="data"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Group_handle", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Group_handle(IntPtr widget, FltkWidgetHandleCallback callback, IntPtr data);
    
    /// <summary>Call the Fl_Group_handle_event function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Group_new" path="/returns" />
    /// </param>
    /// <param name="eventType"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Group_handle_event", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Group_handle_event(IntPtr widget, int eventType);
    
    /// <summary>Call the Fl_Group_draw function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Group_new" path="/returns" />
    /// </param>
    /// <param name="callback"></param>
    /// <param name="data"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Group_draw", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Group_draw(IntPtr widget, FltkWidgetCallback callback, IntPtr data);
    
    /// <summary>Call the Fl_Group_resize_callback function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Group_new" path="/returns" />
    /// </param>
    /// <param name="callback"></param>
    /// <param name="data"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Group_resize_callback", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Group_resize_callback(IntPtr widget, FltkWidgetResizeCallback callback, IntPtr data);
    
    /// <summary>Call the Fl_Group_set_when function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Group_new" path="/returns" />
    /// </param>
    /// <param name="value"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Group_set_when", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Group_set_when(IntPtr widget, int value);
    
    /// <summary>Call the Fl_Group_when function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Group_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Group_when", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Group_when(IntPtr widget);
    
    /// <summary>Call the Fl_Group_image function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Group_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Group_image", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Group_image(IntPtr widget);
    
    /// <summary>Call the Fl_Group_parent function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Group_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Group_parent", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Group_parent(IntPtr widget);
    
    /// <summary>Call the Fl_Group_selection_color function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Group_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Group_selection_color", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern uint Fl_Group_selection_color(IntPtr widget);
    
    /// <summary>Call the Fl_Group_set_selection_color function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Group_new" path="/returns" />
    /// </param>
    /// <param name="color"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Group_set_selection_color", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Group_set_selection_color(IntPtr widget, uint color);
    
    /// <summary>Call the Fl_Group_inside function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Group_new" path="/returns" />
    /// </param>
    /// <param name="other"></param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Group_inside", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Group_inside(IntPtr widget, IntPtr other);
    
    /// <summary>Call the Fl_Group_window function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Group_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Group_window", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Group_window(IntPtr widget);
    
    /// <summary>Call the Fl_Group_top_window function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Group_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Group_top_window", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Group_top_window(IntPtr widget);
    
    /// <summary>Call the Fl_Group_takes_events function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Group_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Group_takes_events", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Group_takes_events(IntPtr widget);
    
    /// <summary>Call the Fl_Group_user_data function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Group_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Group_user_data", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Group_user_data(IntPtr widget);
    
    /// <summary>Call the Fl_Group_take_focus function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Group_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Group_take_focus", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Group_take_focus(IntPtr widget);
    
    /// <summary>Call the Fl_Group_set_visible_focus function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Group_new" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Group_set_visible_focus", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Group_set_visible_focus(IntPtr widget);
    
    /// <summary>Call the Fl_Group_clear_visible_focus function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Group_new" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Group_clear_visible_focus", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Group_clear_visible_focus(IntPtr widget);
    
    /// <summary>Call the Fl_Group_visible_focus function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Group_new" path="/returns" />
    /// </param>
    /// <param name="value"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Group_visible_focus", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Group_visible_focus(IntPtr widget, int value);
    
    /// <summary>Call the Fl_Group_has_visible_focus function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Group_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Group_has_visible_focus", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern uint Fl_Group_has_visible_focus(IntPtr widget);
    
    /// <summary>Call the Fl_Group_set_user_data function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Group_new" path="/returns" />
    /// </param>
    /// <param name="data"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Group_set_user_data", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Group_set_user_data(IntPtr widget, IntPtr data);
    
    /// <summary>Call the Fl_Group_draw_data function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Group_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Group_draw_data", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Group_draw_data(IntPtr widget);
    
    /// <summary>Call the Fl_Group_handle_data function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Group_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Group_handle_data", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Group_handle_data(IntPtr widget);
    
    /// <summary>Call the Fl_Group_set_draw_data function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Group_new" path="/returns" />
    /// </param>
    /// <param name="data"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Group_set_draw_data", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Group_set_draw_data(IntPtr widget, IntPtr data);
    
    /// <summary>Call the Fl_Group_set_handle_data function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Group_new" path="/returns" />
    /// </param>
    /// <param name="data"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Group_set_handle_data", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Group_set_handle_data(IntPtr widget, IntPtr data);
    
    /// <summary>Call the Fl_Group_damage function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Group_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Group_damage", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern char Fl_Group_damage(IntPtr widget);
    
    /// <summary>Call the Fl_Group_set_damage function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Group_new" path="/returns" />
    /// </param>
    /// <param name="flag"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Group_set_damage", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Group_set_damage(IntPtr widget, char flag);
    
    /// <summary>Call the Fl_Group_set_damage_area function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Group_new" path="/returns" />
    /// </param>
    /// <param name="flag"></param>
    /// <param name="x"></param>
    /// <param name="y"></param>
    /// <param name="width"></param>
    /// <param name="height"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Group_set_damage_area", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Group_set_damage_area(IntPtr widget, char flag, int x, int y, int width, int height);
    
    /// <summary>Call the Fl_Group_clear_damage function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Group_new" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Group_clear_damage", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Group_clear_damage(IntPtr widget);
    
    /// <summary>Call the Fl_Group_as_window function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Group_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Group_as_window", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Group_as_window(IntPtr widget);
    
    /// <summary>Call the Fl_Group_as_group function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Group_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Group_as_group", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Group_as_group(IntPtr widget);
    
    /// <summary>Call the Fl_Group_set_deimage function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Group_new" path="/returns" />
    /// </param>
    /// <param name="imagePointer"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Group_set_deimage", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Group_set_deimage(IntPtr widget, IntPtr imagePointer);
    
    /// <summary>Call the Fl_Group_deimage function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Group_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Group_deimage", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Group_deimage(IntPtr widget);
    
    /// <summary>Call the Fl_Group_set_callback function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Group_new" path="/returns" />
    /// </param>
    /// <param name="callback"></param>
    /// <param name="data"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Group_set_callback", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Group_set_callback(IntPtr widget, FltkWidgetCallback callback, IntPtr data);
    
    /// <summary>Call the Fl_Group_set_deleter function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Group_new" path="/returns" />
    /// </param>
    /// <param name="callback"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Group_set_deleter", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Group_set_deleter(IntPtr widget, Action<Action> callback);
    
    /// <summary>Call the Fl_Group_visible function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Group_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Group_visible", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Group_visible(IntPtr widget);
    
    /// <summary>Call the Fl_Group_visible_r function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Group_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Group_visible_r", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Group_visible_r(IntPtr widget);
    
    /// <summary>Call the Fl_Group_active function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Group_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Group_active", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern uint Fl_Group_active(IntPtr widget);
    
    /// <summary>Call the Fl_Group_active_r function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Group_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Group_active_r", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Group_active_r(IntPtr widget);
    
    /// <summary>Call the Fl_Group_callback function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Group_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Group_callback", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern FltkWidgetCallback Fl_Group_callback(IntPtr widget);
    
    /// <summary>Call the Fl_Group_set_deletion_callback function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Group_new" path="/returns" />
    /// </param>
    /// <param name="callback"></param>
    /// <param name="data"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Group_set_deletion_callback", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Group_set_deletion_callback(IntPtr widget, FltkWidgetCallback callback, IntPtr data);
    
    /// <summary>Call the Fl_Group_from_dyn_ptr function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Widget_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Group_from_dyn_ptr", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Group_from_dyn_ptr(IntPtr widget);
    
    /// <summary>Call the Fl_Group_from_derived_dyn_ptr function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Widget_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Group_from_derived_dyn_ptr", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Group_from_derived_dyn_ptr(IntPtr widget);
    
    /// <summary>Call the Fl_Group_super_draw function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Widget_new" path="/returns" />
    /// </param>
    /// <param name="flag"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Group_super_draw", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Group_super_draw(IntPtr widget, int flag);
    
    /// <summary>Call the Fl_Group_super_draw_first function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Widget_new" path="/returns" />
    /// </param>
    /// <param name="flag"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Group_super_draw_first", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Group_super_draw_first(IntPtr widget, int flag);
    
    /// <summary>Call the Fl_Group_super_handle_first function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Widget_new" path="/returns" />
    /// </param>
    /// <param name="flag"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Group_super_handle_first", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Group_super_handle_first(IntPtr widget, int flag);
    
    /// <summary>Call the Fl_Group_begin function</summary>
    /// <param name="group">
    /// <inheritdoc cref="Fl_Group_new" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Group_begin", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Group_begin(IntPtr group);
    
    /// <summary>Call the Fl_Group_end function</summary>
    /// <param name="group">
    /// <inheritdoc cref="Fl_Group_new" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Group_end", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Group_end(IntPtr group);
    
    /// <summary>
    /// Find the index of a widget in this group
    /// </summary>
    /// <param name="group">
    /// <inheritdoc cref="Fl_Group_new" path="/returns" />
    /// </param>
    /// <param name="widget"></param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Group_find", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Group_find(IntPtr group, IntPtr widget);
    
    /// <summary>
    /// Add a widget to this group
    /// </summary>
    /// <param name="group">
    /// <inheritdoc cref="Fl_Group_new" path="/returns" />
    /// </param>
    /// <param name="widget"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Group_add", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Group_add(IntPtr group, IntPtr widget);
    
    /// <summary>
    /// Insert the provided widget into this group at a specific index.
    /// </summary>
    /// <param name="group">
    /// <inheritdoc cref="Fl_Group_new" path="/returns" />
    /// </param>
    /// <param name="widget"></param>
    /// <param name="index"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Group_insert", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Group_insert(IntPtr group, IntPtr widget, int index);
    
    /// <summary>
    /// Remove a widget from the group provided.
    /// </summary>
    /// <param name="group">
    /// <inheritdoc cref="Fl_Group_new" path="/returns" />
    /// </param>
    /// <param name="widget"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Group_remove", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Group_remove(IntPtr group, IntPtr widget);
    
    /// <summary>
    /// Remove a widget (by the index) from the group provided.
    /// </summary>
    /// <param name="group">
    /// <inheritdoc cref="Fl_Group_new" path="/returns" />
    /// </param>
    /// <param name="widgetIndex"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Group_remove_by_index", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Group_remove_by_index(IntPtr group, int widgetIndex);
    
    /// <summary>
    /// Remove all child widgets from this group
    /// </summary>
    /// <param name="group">
    /// <inheritdoc cref="Fl_Group_new" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Group_clear", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Group_clear(IntPtr group);
    
    /// <summary>
    /// Get the amount of child widgets for this group
    /// </summary>
    /// <param name="group">
    /// <inheritdoc cref="Fl_Group_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Group_children", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Group_children(IntPtr group);
    
    /// <summary>Call the Fl_Group_child function</summary>
    /// <param name="group">
    /// <inheritdoc cref="Fl_Group_new" path="/returns" />
    /// </param>
    /// <param name="index"></param>
    /// <returns>
    /// <inheritdoc cref="Fl_Widget_new" path="/returns" />
    /// </returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Group_child", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Group_child(IntPtr group, int index);
    
    /// <summary>Call the Fl_Group_resizable function</summary>
    /// <param name="group">
    /// <inheritdoc cref="Fl_Group_new" path="/returns" />
    /// </param>
    /// <param name="resizableWidgetPointer"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Group_resizable", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Group_resizable(IntPtr group, IntPtr resizableWidgetPointer);
    
    /// <summary>Call the Fl_Group_set_clip_children function</summary>
    /// <param name="group">
    /// <inheritdoc cref="Fl_Group_new" path="/returns" />
    /// </param>
    /// <param name="clipValue"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Group_set_clip_children", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Group_set_clip_children(IntPtr group, int clipValue);
    
    /// <summary>Call the Fl_Group_clip_children function</summary>
    /// <param name="group">
    /// <inheritdoc cref="Fl_Group_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Group_clip_children", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Group_clip_children(IntPtr group);
    
    /// <summary>Call the Fl_Group_init_sizes function</summary>
    /// <param name="group">
    /// <inheritdoc cref="Fl_Group_new" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Group_init_sizes", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Group_init_sizes(IntPtr group);
    
    /// <summary>Call the Fl_Group_draw_child function</summary>
    /// <param name="group">
    /// <inheritdoc cref="Fl_Group_new" path="/returns" />
    /// </param>
    /// <param name="childWidgetPointer"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Group_draw_child", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Group_draw_child(IntPtr group, IntPtr childWidgetPointer);
    
    /// <summary>Call the Fl_Group_update_child function</summary>
    /// <param name="group">
    /// <inheritdoc cref="Fl_Group_new" path="/returns" />
    /// </param>
    /// <param name="childWidgetPointer"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Group_update_child", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Group_update_child(IntPtr group, IntPtr childWidgetPointer);
    
    /// <summary>Call the Fl_Group_draw_outside_label function</summary>
    /// <param name="group">
    /// <inheritdoc cref="Fl_Group_new" path="/returns" />
    /// </param>
    /// <param name="childWidgetPointer"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Group_draw_outside_label", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Group_draw_outside_label(IntPtr group, IntPtr childWidgetPointer);
    
    /// <summary>Call the Fl_Group_draw_children function</summary>
    /// <param name="group">
    /// <inheritdoc cref="Fl_Group_new" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Group_draw_children", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Group_draw_children(IntPtr group);
    
    /// <summary>Call the Fl_Group_current function</summary>
    /// <returns>
    /// <inheritdoc cref="Fl_Group_new" path="/returns" />
    /// </returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Group_current", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Group_current();
    
    /// <summary>Call the Fl_Group_set_current function</summary>
    /// <param name="group">
    /// <inheritdoc cref="Fl_Group_new" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Group_set_current", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Group_set_current(IntPtr group);
    
    /// <summary>Call the Fl_Window_new function</summary>
    /// <param name="x"></param>
    /// <param name="y"></param>
    /// <param name="width"></param>
    /// <param name="height"></param>
    /// <param name="titlePointer">
    /// <inheritdoc cref="Fl_Widget_new" path="/param[@name='labelPointer']" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Window_new", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Window_new(int x, int y, int width, int height, IntPtr titlePointer);
    
    /// <summary>Call the Fl_Window_x function</summary>
    /// <param name="widget">
    /// Pointer to <c>Fl_Window</c>
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Window_x", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Window_x(IntPtr widget);
    
    /// <summary>Call the Fl_Window_y function</summary>
    /// <param name="widget">
    /// Pointer to <c>Fl_Window</c>
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Window_y", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Window_y(IntPtr widget);
    
    /// <summary>Call the Fl_Window_width function</summary>
    /// <param name="widget">
    /// Pointer to <c>Fl_Window</c>
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Window_width", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Window_width(IntPtr widget);
    
    /// <summary>Call the Fl_Window_height function</summary>
    /// <param name="widget">
    /// Pointer to <c>Fl_Window</c>
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Window_height", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Window_height(IntPtr widget);
    
    /// <summary>Call the Fl_Window_label function</summary>
    /// <param name="widget">
    /// Pointer to <c>Fl_Window</c>
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Window_label", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Window_label(IntPtr widget);
    
    /// <summary>Call the Fl_Window_set_label function</summary>
    /// <param name="widget"></param>
    /// <param name="labelPointer">
    /// <inheritdoc cref="Fl_Widget_new" path="/param[@name='labelPointer']" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Window_set_label", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Window_set_label(IntPtr widget, IntPtr labelPointer);
    
    /// <summary>Call the Fl_Window_redraw function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Window_new" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Window_redraw", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Window_redraw(IntPtr widget);
    
    /// <summary>Call the Fl_Window_show function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Window_new" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Window_show", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Window_show(IntPtr widget);
    
    /// <summary>Call the Fl_Window_hide function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Window_new" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Window_hide", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Window_hide(IntPtr widget);
    
    /// <summary>Call the Fl_Window_activate function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Window_new" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Window_activate", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Window_activate(IntPtr widget);
    
    /// <summary>Call the Fl_Window_deactivate function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Window_new" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Window_deactivate", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Window_deactivate(IntPtr widget);
    
    /// <summary>Call the Fl_Window_redraw_label function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Window_new" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Window_redraw_label", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Window_redraw_label(IntPtr widget);
    
    /// <summary>Call the Fl_Window_resize function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Window_new" path="/returns" />
    /// </param>
    /// <param name="x"></param>
    /// <param name="y"></param>
    /// <param name="width"></param>
    /// <param name="height"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Window_resize", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Window_resize(IntPtr widget, int x, int y, int width, int height);
    
    /// <summary>Call the Fl_Window_widget_resize function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Window_new" path="/returns" />
    /// </param>
    /// <param name="x"></param>
    /// <param name="y"></param>
    /// <param name="width"></param>
    /// <param name="height"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Window_widget_resize", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Window_widget_resize(IntPtr widget, int x, int y, int width, int height);
    
    /// <summary>Call the Fl_Window_tooltip function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Window_new" path="/returns" />
    /// </param>
    /// <returns>
    /// <inheritdoc cref="Fl_Window_new" path="/param[@name='labelPointer']" />
    /// </returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Window_tooltip", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Window_tooltip(IntPtr widget);
    
    /// <summary>Call the Fl_Window_set_tooltip function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Window_new" path="/returns" />
    /// </param>
    /// <param name="tooltipPointer">
    /// <inheritdoc cref="Fl_Window_new" path="/param[@name='labelPointer']" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Window_set_tooltip", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Window_set_tooltip(IntPtr widget, IntPtr tooltipPointer);
    
    /// <summary>Call the Fl_Window_get_type function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Window_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Window_get_type", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Window_get_type(IntPtr widget);
    
    /// <summary>Call the Fl_Window_set_type function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Window_new" path="/returns" />
    /// </param>
    /// <param name="type"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Window_set_type", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Window_set_type(IntPtr widget, int type);
    
    /// <summary>Call the Fl_Window_color function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Window_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Window_color", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern uint Fl_Window_color(IntPtr widget);
    
    /// <summary>Call the Fl_Window_set_color function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Window_new" path="/returns" />
    /// </param>
    /// <param name="color"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Window_set_color", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Window_set_color(IntPtr widget, uint color);
    
    /// <summary>Call the Fl_Window_measure_label function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Window_new" path="/returns" />
    /// </param>
    /// <param name="width"></param>
    /// <param name="height"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Window_measure_label", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Window_measure_label(IntPtr widget, ref int width, ref int height);
    
    /// <summary>Call the Fl_Window_label_color function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Window_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Window_label_color", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern uint Fl_Window_label_color(IntPtr widget);
    
    /// <summary>Call the Fl_Window_set_label_color function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Window_new" path="/returns" />
    /// </param>
    /// <param name="color">
    /// <inheritdoc cref="Fl_Window_label_color" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Window_set_label_color", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Window_set_label_color(IntPtr widget, uint color);
    
    /// <summary>Call the Fl_Window_label_font function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Window_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Window_label_font", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Window_label_font(IntPtr widget);
    
    /// <summary>Call the Fl_Window_set_label_font function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Window_new" path="/returns" />
    /// </param>
    /// <param name="fontIndex"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Window_set_label_font", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Window_set_label_font(IntPtr widget, int fontIndex);
    
    /// <summary>Call the Fl_Window_label_size function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Window_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Window_label_size", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Window_label_size(IntPtr widget);
    
    /// <summary>Call the Fl_Window_set_label_size function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Window_new" path="/returns" />
    /// </param>
    /// <param name="size">
    /// <inheritdoc cref="Fl_Window_label_size" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Window_set_label_size", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Window_set_label_size(IntPtr widget, int size);
    
    /// <summary>Call the Fl_Window_label_type function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Window_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Window_label_type", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Window_label_type(IntPtr widget);
    
    /// <summary>Call the Fl_Window_set_label_type function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Window_new" path="/returns" />
    /// </param>
    /// <param name="size">
    /// <inheritdoc cref="Fl_Window_label_type" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Window_set_label_type", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Window_set_label_type(IntPtr widget, int size);
    
    /// <summary>Call the Fl_Window_box function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Window_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Window_box", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Window_box(IntPtr widget);
    
    /// <summary>Call the Fl_Window_set_box function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Window_new" path="/returns" />
    /// </param>
    /// <param name="type"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Window_set_box", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Window_set_box(IntPtr widget, int type);
    
    /// <summary>Call the Fl_Window_changed function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Window_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Window_changed", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Window_changed(IntPtr widget);
    
    /// <summary>Call the Fl_Window_set_changed function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Window_new" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Window_set_changed", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Window_set_changed(IntPtr widget);
    
    /// <summary>Call the Fl_Window_clear_changed function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Window_new" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Window_clear_changed", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Window_clear_changed(IntPtr widget);
    
    /// <summary>Call the Fl_Window_align function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Window_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Window_align", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Window_align(IntPtr widget);
    
    /// <summary>Call the Fl_Window_set_align function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Window_new" path="/returns" />
    /// </param>
    /// <param name="type"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Window_set_align", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Window_set_align(IntPtr widget, int type);
    
    /// <summary>Call the Fl_Window_delete function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Window_new" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Window_delete", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Window_delete(IntPtr widget);
    
    /// <summary>Call the Fl_Window_set_image function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Window_new" path="/returns" />
    /// </param>
    /// <param name="imagePointer"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Window_set_image", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Window_set_image(IntPtr widget, IntPtr imagePointer);
    
    /// <summary>Call the Fl_Window_handle function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Window_new" path="/returns" />
    /// </param>
    /// <param name="callback"></param>
    /// <param name="data"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Window_handle", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Window_handle(IntPtr widget, FltkWidgetHandleCallback callback, IntPtr data);
    
    /// <summary>Call the Fl_Window_handle_event function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Window_new" path="/returns" />
    /// </param>
    /// <param name="eventType"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Window_handle_event", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Window_handle_event(IntPtr widget, int eventType);
    
    /// <summary>Call the Fl_Window_draw function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Window_new" path="/returns" />
    /// </param>
    /// <param name="callback"></param>
    /// <param name="data"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Window_draw", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Window_draw(IntPtr widget, FltkWidgetCallback callback, IntPtr data);
    
    /// <summary>Call the Fl_Window_resize_callback function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Window_new" path="/returns" />
    /// </param>
    /// <param name="callback"></param>
    /// <param name="data"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Window_resize_callback", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Window_resize_callback(IntPtr widget, FltkWidgetResizeCallback callback, IntPtr data);
    
    /// <summary>Call the Fl_Window_set_when function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Window_new" path="/returns" />
    /// </param>
    /// <param name="value"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Window_set_when", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Window_set_when(IntPtr widget, int value);
    
    /// <summary>Call the Fl_Window_when function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Window_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Window_when", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Window_when(IntPtr widget);
    
    /// <summary>Call the Fl_Window_image function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Window_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Window_image", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Window_image(IntPtr widget);
    
    /// <summary>Call the Fl_Window_parent function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Window_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Window_parent", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Window_parent(IntPtr widget);
    
    /// <summary>Call the Fl_Window_selection_color function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Window_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Window_selection_color", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern uint Fl_Window_selection_color(IntPtr widget);
    
    /// <summary>Call the Fl_Window_set_selection_color function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Window_new" path="/returns" />
    /// </param>
    /// <param name="color"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Window_set_selection_color", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Window_set_selection_color(IntPtr widget, uint color);
    
    /// <summary>Call the Fl_Window_inside function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Window_new" path="/returns" />
    /// </param>
    /// <param name="other"></param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Window_inside", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Window_inside(IntPtr widget, IntPtr other);
    
    /// <summary>Call the Fl_Window_window function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Window_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Window_window", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Window_window(IntPtr widget);
    
    /// <summary>Call the Fl_Window_top_window function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Window_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Window_top_window", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Window_top_window(IntPtr widget);
    
    /// <summary>Call the Fl_Window_takes_events function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Window_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Window_takes_events", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Window_takes_events(IntPtr widget);
    
    /// <summary>Call the Fl_Window_user_data function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Window_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Window_user_data", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Window_user_data(IntPtr widget);
    
    /// <summary>Call the Fl_Window_take_focus function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Window_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Window_take_focus", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Window_take_focus(IntPtr widget);
    
    /// <summary>Call the Fl_Window_set_visible_focus function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Window_new" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Window_set_visible_focus", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Window_set_visible_focus(IntPtr widget);
    
    /// <summary>Call the Fl_Window_clear_visible_focus function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Window_new" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Window_clear_visible_focus", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Window_clear_visible_focus(IntPtr widget);
    
    /// <summary>Call the Fl_Window_visible_focus function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Window_new" path="/returns" />
    /// </param>
    /// <param name="value"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Window_visible_focus", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Window_visible_focus(IntPtr widget, int value);
    
    /// <summary>Call the Fl_Window_has_visible_focus function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Window_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Window_has_visible_focus", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern uint Fl_Window_has_visible_focus(IntPtr widget);
    
    /// <summary>Call the Fl_Window_set_user_data function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Window_new" path="/returns" />
    /// </param>
    /// <param name="data"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Window_set_user_data", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Window_set_user_data(IntPtr widget, IntPtr data);
    
    /// <summary>Call the Fl_Window_draw_data function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Window_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Window_draw_data", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Window_draw_data(IntPtr widget);
    
    /// <summary>Call the Fl_Window_handle_data function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Window_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Window_handle_data", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Window_handle_data(IntPtr widget);
    
    /// <summary>Call the Fl_Window_set_draw_data function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Window_new" path="/returns" />
    /// </param>
    /// <param name="data"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Window_set_draw_data", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Window_set_draw_data(IntPtr widget, IntPtr data);
    
    /// <summary>Call the Fl_Window_set_handle_data function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Window_new" path="/returns" />
    /// </param>
    /// <param name="data"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Window_set_handle_data", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Window_set_handle_data(IntPtr widget, IntPtr data);
    
    /// <summary>Call the Fl_Window_damage function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Window_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Window_damage", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern char Fl_Window_damage(IntPtr widget);
    
    /// <summary>Call the Fl_Window_set_damage function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Window_new" path="/returns" />
    /// </param>
    /// <param name="flag"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Window_set_damage", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Window_set_damage(IntPtr widget, char flag);
    
    /// <summary>Call the Fl_Window_set_damage_area function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Window_new" path="/returns" />
    /// </param>
    /// <param name="flag"></param>
    /// <param name="x"></param>
    /// <param name="y"></param>
    /// <param name="width"></param>
    /// <param name="height"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Window_set_damage_area", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Window_set_damage_area(IntPtr widget, char flag, int x, int y, int width, int height);
    
    /// <summary>Call the Fl_Window_clear_damage function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Window_new" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Window_clear_damage", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Window_clear_damage(IntPtr widget);
    
    /// <summary>Call the Fl_Window_as_window function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Window_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Window_as_window", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Window_as_window(IntPtr widget);
    
    /// <summary>Call the Fl_Window_as_group function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Window_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Window_as_group", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Window_as_group(IntPtr widget);
    
    /// <summary>Call the Fl_Window_set_deimage function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Window_new" path="/returns" />
    /// </param>
    /// <param name="imagePointer"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Window_set_deimage", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Window_set_deimage(IntPtr widget, IntPtr imagePointer);
    
    /// <summary>Call the Fl_Window_deimage function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Window_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Window_deimage", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Window_deimage(IntPtr widget);
    
    /// <summary>Call the Fl_Window_set_callback function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Window_new" path="/returns" />
    /// </param>
    /// <param name="callback"></param>
    /// <param name="data"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Window_set_callback", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Window_set_callback(IntPtr widget, FltkWidgetCallback callback, IntPtr data);
    
    /// <summary>Call the Fl_Window_set_deleter function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Window_new" path="/returns" />
    /// </param>
    /// <param name="callback"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Window_set_deleter", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Window_set_deleter(IntPtr widget, Action<Action> callback);
    
    /// <summary>Call the Fl_Window_visible function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Window_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Window_visible", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Window_visible(IntPtr widget);
    
    /// <summary>Call the Fl_Window_visible_r function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Window_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Window_visible_r", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Window_visible_r(IntPtr widget);
    
    /// <summary>Call the Fl_Window_active function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Window_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Window_active", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern uint Fl_Window_active(IntPtr widget);
    
    /// <summary>Call the Fl_Window_active_r function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Window_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Window_active_r", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Window_active_r(IntPtr widget);
    
    /// <summary>Call the Fl_Window_callback function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Window_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Window_callback", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern FltkWidgetCallback Fl_Window_callback(IntPtr widget);
    
    /// <summary>Call the Fl_Window_set_deletion_callback function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Window_new" path="/returns" />
    /// </param>
    /// <param name="callback"></param>
    /// <param name="data"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Window_set_deletion_callback", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Window_set_deletion_callback(IntPtr widget, FltkWidgetCallback callback, IntPtr data);
    
    /// <summary>Call the Fl_Window_from_dyn_ptr function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Widget_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Window_from_dyn_ptr", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Window_from_dyn_ptr(IntPtr widget);
    
    /// <summary>Call the Fl_Window_from_derived_dyn_ptr function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Widget_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Window_from_derived_dyn_ptr", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Window_from_derived_dyn_ptr(IntPtr widget);
    
    /// <summary>Call the Fl_Window_super_draw function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Widget_new" path="/returns" />
    /// </param>
    /// <param name="flag"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Window_super_draw", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Window_super_draw(IntPtr widget, int flag);
    
    /// <summary>Call the Fl_Window_super_draw_first function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Widget_new" path="/returns" />
    /// </param>
    /// <param name="flag"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Window_super_draw_first", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Window_super_draw_first(IntPtr widget, int flag);
    
    /// <summary>Call the Fl_Window_super_handle_first function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Widget_new" path="/returns" />
    /// </param>
    /// <param name="flag"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Window_super_handle_first", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Window_super_handle_first(IntPtr widget, int flag);
    
    /// <summary>Call the Fl_Window_begin function</summary>
    /// <param name="group">
    /// <inheritdoc cref="Fl_Window_new" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Window_begin", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Window_begin(IntPtr group);
    
    /// <summary>Call the Fl_Window_end function</summary>
    /// <param name="group">
    /// <inheritdoc cref="Fl_Window_new" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Window_end", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Window_end(IntPtr group);
    
    /// <summary>
    /// Find the index of a widget in this group
    /// </summary>
    /// <param name="group">
    /// <inheritdoc cref="Fl_Window_new" path="/returns" />
    /// </param>
    /// <param name="widget"></param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Window_find", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Window_find(IntPtr group, IntPtr widget);
    
    /// <summary>
    /// Add a widget to this group
    /// </summary>
    /// <param name="group">
    /// <inheritdoc cref="Fl_Window_new" path="/returns" />
    /// </param>
    /// <param name="widget"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Window_add", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Window_add(IntPtr group, IntPtr widget);
    
    /// <summary>
    /// Insert the provided widget into this group at a specific index.
    /// </summary>
    /// <param name="group">
    /// <inheritdoc cref="Fl_Window_new" path="/returns" />
    /// </param>
    /// <param name="widget"></param>
    /// <param name="index"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Window_insert", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Window_insert(IntPtr group, IntPtr widget, int index);
    
    /// <summary>
    /// Remove a widget from the group provided.
    /// </summary>
    /// <param name="group">
    /// <inheritdoc cref="Fl_Window_new" path="/returns" />
    /// </param>
    /// <param name="widget"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Window_remove", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Window_remove(IntPtr group, IntPtr widget);
    
    /// <summary>
    /// Remove a widget (by the index) from the group provided.
    /// </summary>
    /// <param name="group">
    /// <inheritdoc cref="Fl_Window_new" path="/returns" />
    /// </param>
    /// <param name="widgetIndex"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Window_remove_by_index", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Window_remove_by_index(IntPtr group, int widgetIndex);
    
    /// <summary>
    /// Remove all child widgets from this group
    /// </summary>
    /// <param name="group">
    /// <inheritdoc cref="Fl_Window_new" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Window_clear", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Window_clear(IntPtr group);
    
    /// <summary>
    /// Get the amount of child widgets for this group
    /// </summary>
    /// <param name="group">
    /// <inheritdoc cref="Fl_Window_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Window_children", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Window_children(IntPtr group);
    
    /// <summary>Call the Fl_Window_child function</summary>
    /// <param name="group">
    /// <inheritdoc cref="Fl_Window_new" path="/returns" />
    /// </param>
    /// <param name="index"></param>
    /// <returns>
    /// <inheritdoc cref="Fl_Widget_new" path="/returns" />
    /// </returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Window_child", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Window_child(IntPtr group, int index);
    
    /// <summary>Call the Fl_Window_resizable function</summary>
    /// <param name="group">
    /// <inheritdoc cref="Fl_Window_new" path="/returns" />
    /// </param>
    /// <param name="resizableWidgetPointer"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Window_resizable", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Window_resizable(IntPtr group, IntPtr resizableWidgetPointer);
    
    /// <summary>Call the Fl_Window_set_clip_children function</summary>
    /// <param name="group">
    /// <inheritdoc cref="Fl_Window_new" path="/returns" />
    /// </param>
    /// <param name="clipValue"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Window_set_clip_children", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Window_set_clip_children(IntPtr group, int clipValue);
    
    /// <summary>Call the Fl_Window_clip_children function</summary>
    /// <param name="group">
    /// <inheritdoc cref="Fl_Window_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Window_clip_children", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Window_clip_children(IntPtr group);
    
    /// <summary>Call the Fl_Window_init_sizes function</summary>
    /// <param name="group">
    /// <inheritdoc cref="Fl_Window_new" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Window_init_sizes", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Window_init_sizes(IntPtr group);
    
    /// <summary>Call the Fl_Window_draw_child function</summary>
    /// <param name="group">
    /// <inheritdoc cref="Fl_Window_new" path="/returns" />
    /// </param>
    /// <param name="childWidgetPointer"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Window_draw_child", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Window_draw_child(IntPtr group, IntPtr childWidgetPointer);
    
    /// <summary>Call the Fl_Window_update_child function</summary>
    /// <param name="group">
    /// <inheritdoc cref="Fl_Window_new" path="/returns" />
    /// </param>
    /// <param name="childWidgetPointer"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Window_update_child", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Window_update_child(IntPtr group, IntPtr childWidgetPointer);
    
    /// <summary>Call the Fl_Window_draw_outside_label function</summary>
    /// <param name="group">
    /// <inheritdoc cref="Fl_Window_new" path="/returns" />
    /// </param>
    /// <param name="childWidgetPointer"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Window_draw_outside_label", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Window_draw_outside_label(IntPtr group, IntPtr childWidgetPointer);
    
    /// <summary>Call the Fl_Window_draw_children function</summary>
    /// <param name="group">
    /// <inheritdoc cref="Fl_Window_new" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Window_draw_children", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Window_draw_children(IntPtr group);
    
    /// <summary>Call the Fl_Window_make_modal function</summary>
    /// <param name="window">
    /// <inheritdoc cref="Fl_Window_new" path="/returns" />
    /// </param>
    /// <param name="state"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Window_make_modal", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Window_make_modal(IntPtr window, [MarshalAs(UnmanagedType.U4)] bool state);
    
    /// <summary>Call the Fl_Window_fullscreen function</summary>
    /// <param name="window">
    /// <inheritdoc cref="Fl_Window_new" path="/returns" />
    /// </param>
    /// <param name="state"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Window_fullscreen", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Window_fullscreen(IntPtr window, [MarshalAs(UnmanagedType.U4)] bool state);
    
    /// <summary>Call the Fl_Window_make_current function</summary>
    /// <param name="window">
    /// <inheritdoc cref="Fl_Window_new" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Window_make_current", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Window_make_current(IntPtr window);
    
    /// <summary>Call the Fl_Window_set_icon function</summary>
    /// <param name="window">
    /// <inheritdoc cref="Fl_Window_new" path="/returns" />
    /// </param>
    /// <param name="imagePointer">
    /// <inheritdoc cref="Fl_Image_new" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Window_set_icon", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Window_set_icon(IntPtr window, IntPtr imagePointer);
    
    /// <summary>Call the Fl_Window_icon function</summary>
    /// <param name="window">
    /// <inheritdoc cref="Fl_Window_new" path="/returns" />
    /// </param>
    /// <returns>
    /// <inheritdoc cref="Fl_Image_new" path="/returns" />
    /// </returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Window_icon", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Window_icon(IntPtr window);
    
    /// <summary>Call the Fl_Window_set_cursor function</summary>
    /// <param name="window">
    /// <inheritdoc cref="Fl_Window_new" path="/returns" />
    /// </param>
    /// <param name="cursor"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Window_set_cursor", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Window_set_cursor(IntPtr window, int cursor);
    
    /// <summary>Call the Fl_Window_shown function</summary>
    /// <param name="window">
    /// <inheritdoc cref="Fl_Window_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Window_shown", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Window_shown(IntPtr window);
    
    /// <summary>Call the Fl_Window_raw_handle function</summary>
    /// <param name="window">
    /// <inheritdoc cref="Fl_Window_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Window_raw_handle", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Window_raw_handle(IntPtr window);
    
    /// <summary>Call the Fl_Window_set_border function</summary>
    /// <param name="window">
    /// <inheritdoc cref="Fl_Window_new" path="/returns" />
    /// </param>
    /// <param name="flag"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Window_set_border", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Window_set_border(IntPtr window, int flag);
    
    /// <summary>Call the Fl_Window_border function</summary>
    /// <param name="window">
    /// <inheritdoc cref="Fl_Window_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Window_border", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Window_border(IntPtr window);
    
    /// <summary>
    /// Get the window region. Will only work on X11
    /// </summary>
    /// <param name="window">
    /// <inheritdoc cref="Fl_Window_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Window_region", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Window_region(IntPtr window);
    
    /// <summary>
    /// Set the window region. Will only work on X11
    /// </summary>
    /// <param name="window">
    /// <inheritdoc cref="Fl_Window_new" path="/returns" />
    /// </param>
    /// <param name="region"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Window_set_region", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Window_set_region(IntPtr window, IntPtr region);
    
    /// <summary>Call the Fl_Window_iconize function</summary>
    /// <param name="window">
    /// <inheritdoc cref="Fl_Window_new" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Window_iconize", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Window_iconize(IntPtr window);
    
    /// <summary>Call the Fl_Window_fullscreen_active function</summary>
    /// <param name="window">
    /// <inheritdoc cref="Fl_Window_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Window_fullscreen_active", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Window_fullscreen_active(IntPtr window);
    
    /// <summary>Call the Fl_Window_free_position function</summary>
    /// <param name="window">
    /// <inheritdoc cref="Fl_Window_new" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Window_free_position", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Window_free_position(IntPtr window);
    
    /// <summary>Call the Fl_Window_decorated_w function</summary>
    /// <param name="window">
    /// <inheritdoc cref="Fl_Window_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Window_decorated_w", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Window_decorated_w(IntPtr window);
    
    /// <summary>Call the Fl_Window_decorated_h function</summary>
    /// <param name="window">
    /// <inheritdoc cref="Fl_Window_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Window_decorated_h", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Window_decorated_h(IntPtr window);
    
    /// <summary>Call the Fl_Window_size_range function</summary>
    /// <param name="window">
    /// <inheritdoc cref="Fl_Window_new" path="/returns" />
    /// </param>
    /// <param name="minimumWidth"></param>
    /// <param name="minimumHeight"></param>
    /// <param name="maximumWidth"></param>
    /// <param name="maximumHeight"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Window_size_range", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Window_size_range(IntPtr window, int minimumWidth, int minimumHeight, int maximumWidth, int maximumHeight);
    
    /// <summary>Call the Fl_Window_hotspot function</summary>
    /// <param name="window">
    /// <inheritdoc cref="Fl_Window_new" path="/returns" />
    /// </param>
    /// <param name="widget"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Window_hotspot", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Window_hotspot(IntPtr window, IntPtr widget);
    
    /// <summary>Call the Fl_Window_set_shape function</summary>
    /// <param name="window">
    /// <inheritdoc cref="Fl_Window_new" path="/returns" />
    /// </param>
    /// <param name="imagePtr"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Window_set_shape", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Window_set_shape(IntPtr window, IntPtr imagePtr);
    
    /// <summary>Call the Fl_Window_shape function</summary>
    /// <param name="window">
    /// <inheritdoc cref="Fl_Window_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Window_shape", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Window_shape(IntPtr window);
    
    /// <summary>Call the Fl_Window_x_root function</summary>
    /// <param name="window">
    /// <inheritdoc cref="Fl_Window_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Window_x_root", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Window_x_root(IntPtr window);
    
    /// <summary>Call the Fl_Window_y_root function</summary>
    /// <param name="window">
    /// <inheritdoc cref="Fl_Window_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Window_y_root", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Window_y_root(IntPtr window);
    
    /// <summary>Call the Fl_Window_set_cursor_image function</summary>
    /// <param name="window">
    /// <inheritdoc cref="Fl_Window_new" path="/returns" />
    /// </param>
    /// <param name="imagePtr"></param>
    /// <param name="hotX"></param>
    /// <param name="hotY"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Window_set_cursor_image", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Window_set_cursor_image(IntPtr window, IntPtr imagePtr, int hotX, int hotY);
    
    /// <summary>Call the Fl_Window_default_cursor function</summary>
    /// <param name="window">
    /// <inheritdoc cref="Fl_Window_new" path="/returns" />
    /// </param>
    /// <param name="cursor"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Window_default_cursor", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Window_default_cursor(IntPtr window, int cursor);
    
    /// <summary>Call the Fl_Window_screen_num function</summary>
    /// <param name="window">
    /// <inheritdoc cref="Fl_Window_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Window_screen_num", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Window_screen_num(IntPtr window);
    
    /// <summary>Call the Fl_Window_set_screen_num function</summary>
    /// <param name="window">
    /// <inheritdoc cref="Fl_Window_new" path="/returns" />
    /// </param>
    /// <param name="screenIndex"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Window_set_screen_num", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Window_set_screen_num(IntPtr window, int screenIndex);
    
    /// <summary>Call the Fl_Window_wait_for_expose function</summary>
    /// <param name="window">
    /// <inheritdoc cref="Fl_Window_new" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Window_wait_for_expose", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Window_wait_for_expose(IntPtr window);
    
    /// <summary>Call the Fl_Window_set_alpha function</summary>
    /// <param name="window">
    /// <inheritdoc cref="Fl_Window_new" path="/returns" />
    /// </param>
    /// <param name="value"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Window_set_alpha", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Window_set_alpha(IntPtr window, char value);
    
    /// <summary>Call the Fl_Window_alpha function</summary>
    /// <param name="window">
    /// <inheritdoc cref="Fl_Window_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Window_alpha", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern char Fl_Window_alpha(IntPtr window);
    
    /// <summary>Call the Fl_Window_force_position function</summary>
    /// <param name="window">
    /// <inheritdoc cref="Fl_Window_new" path="/returns" />
    /// </param>
    /// <param name="flag"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Window_force_position", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Window_force_position(IntPtr window, int flag);
    
    /// <summary>Call the Fl_Window_default_xclass function</summary>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Window_default_xclass", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Window_default_xclass();
    
    /// <summary>Call the Fl_Window_xclass function</summary>
    /// <param name="window">
    /// <inheritdoc cref="Fl_Window_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Window_xclass", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Window_xclass(IntPtr window);
    
    /// <summary>Call the Fl_Window_set_default_xclass function</summary>
    /// <param name="s"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Window_set_default_xclass", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Window_set_default_xclass(IntPtr s);
    
    /// <summary>Call the Fl_Window_set_xclass function</summary>
    /// <param name="window">
    /// <inheritdoc cref="Fl_Window_new" path="/returns" />
    /// </param>
    /// <param name="s"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Window_set_xclass", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Window_set_xclass(IntPtr window, IntPtr s);
    
    /// <summary>Call the Fl_Window_clear_modal_states function</summary>
    /// <param name="window">
    /// <inheritdoc cref="Fl_Window_new" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Window_clear_modal_states", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Window_clear_modal_states(IntPtr window);
    
    /// <summary>Call the Fl_Window_set_override function</summary>
    /// <param name="window">
    /// <inheritdoc cref="Fl_Window_new" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Window_set_override", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Window_set_override(IntPtr window);
    
    /// <summary>Call the Fl_Window_override function</summary>
    /// <param name="window">
    /// <inheritdoc cref="Fl_Window_new" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Window_override", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Window_override(IntPtr window);
    
    /// <summary>Call the Fl_Window_icon_label function</summary>
    /// <param name="window">
    /// <inheritdoc cref="Fl_Window_new" path="/returns" />
    /// </param>
    /// <returns>
    /// <inheritdoc cref="Fl_Window_new" path="/returns" />
    /// </returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Window_icon_label", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Window_icon_label(IntPtr window);
    
    /// <summary>Call the Fl_Window_set_icon_label function</summary>
    /// <param name="window">
    /// <inheritdoc cref="Fl_Window_new" path="/returns" />
    /// </param>
    /// <param name="labelPointer">
    /// <inheritdoc cref="Fl_Widget_new" path="/param[@name='labelPointer']" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Window_set_icon_label", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Window_set_icon_label(IntPtr window, IntPtr labelPointer);
    
    /// <summary>Call the Fl_Window_set_icons function</summary>
    /// <param name="window">
    /// <inheritdoc cref="Fl_Window_new" path="/returns" />
    /// </param>
    /// <param name="imageArrayPtr"></param>
    /// <param name="imageArrayLength"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Window_set_icons", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Window_set_icons(IntPtr window, ref IntPtr[] imageArrayPtr, int imageArrayLength);
    
    /// <summary>Call the Fl_Window_maximize function</summary>
    /// <param name="window">
    /// <inheritdoc cref="Fl_Window_new" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Window_maximize", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Window_maximize(IntPtr window);
    
    /// <summary>Call the Fl_Window_un_maximize function</summary>
    /// <param name="window">
    /// <inheritdoc cref="Fl_Window_new" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Window_un_maximize", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Window_un_maximize(IntPtr window);
    
    /// <summary>Call the Fl_Window_maximize_active function</summary>
    /// <param name="window">
    /// <inheritdoc cref="Fl_Window_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Window_maximize_active", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern uint Fl_Window_maximize_active(IntPtr window);
    
    /// <summary>Call the Fl_Single_Window_new function</summary>
    /// <param name="x"></param>
    /// <param name="y"></param>
    /// <param name="width"></param>
    /// <param name="height"></param>
    /// <param name="titlePointer">
    /// <inheritdoc cref="Fl_Widget_new" path="/param[@name='labelPointer']" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Single_Window_new", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Single_Window_new(int x, int y, int width, int height, IntPtr titlePointer);
    
    /// <summary>Call the Fl_Single_Window_x function</summary>
    /// <param name="widget">
    /// Pointer to <c>Fl_Single_Window</c>
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Single_Window_x", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Single_Window_x(IntPtr widget);
    
    /// <summary>Call the Fl_Single_Window_y function</summary>
    /// <param name="widget">
    /// Pointer to <c>Fl_Single_Window</c>
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Single_Window_y", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Single_Window_y(IntPtr widget);
    
    /// <summary>Call the Fl_Single_Window_width function</summary>
    /// <param name="widget">
    /// Pointer to <c>Fl_Single_Window</c>
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Single_Window_width", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Single_Window_width(IntPtr widget);
    
    /// <summary>Call the Fl_Single_Window_height function</summary>
    /// <param name="widget">
    /// Pointer to <c>Fl_Single_Window</c>
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Single_Window_height", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Single_Window_height(IntPtr widget);
    
    /// <summary>Call the Fl_Single_Window_label function</summary>
    /// <param name="widget">
    /// Pointer to <c>Fl_Single_Window</c>
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Single_Window_label", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Single_Window_label(IntPtr widget);
    
    /// <summary>Call the Fl_Single_Window_set_label function</summary>
    /// <param name="widget"></param>
    /// <param name="labelPointer">
    /// <inheritdoc cref="Fl_Widget_new" path="/param[@name='labelPointer']" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Single_Window_set_label", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Single_Window_set_label(IntPtr widget, IntPtr labelPointer);
    
    /// <summary>Call the Fl_Single_Window_redraw function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Single_Window_new" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Single_Window_redraw", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Single_Window_redraw(IntPtr widget);
    
    /// <summary>Call the Fl_Single_Window_show function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Single_Window_new" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Single_Window_show", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Single_Window_show(IntPtr widget);
    
    /// <summary>Call the Fl_Single_Window_hide function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Single_Window_new" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Single_Window_hide", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Single_Window_hide(IntPtr widget);
    
    /// <summary>Call the Fl_Single_Window_activate function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Single_Window_new" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Single_Window_activate", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Single_Window_activate(IntPtr widget);
    
    /// <summary>Call the Fl_Single_Window_deactivate function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Single_Window_new" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Single_Window_deactivate", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Single_Window_deactivate(IntPtr widget);
    
    /// <summary>Call the Fl_Single_Window_redraw_label function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Single_Window_new" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Single_Window_redraw_label", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Single_Window_redraw_label(IntPtr widget);
    
    /// <summary>Call the Fl_Single_Window_resize function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Single_Window_new" path="/returns" />
    /// </param>
    /// <param name="x"></param>
    /// <param name="y"></param>
    /// <param name="width"></param>
    /// <param name="height"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Single_Window_resize", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Single_Window_resize(IntPtr widget, int x, int y, int width, int height);
    
    /// <summary>Call the Fl_Single_Window_widget_resize function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Single_Window_new" path="/returns" />
    /// </param>
    /// <param name="x"></param>
    /// <param name="y"></param>
    /// <param name="width"></param>
    /// <param name="height"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Single_Window_widget_resize", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Single_Window_widget_resize(IntPtr widget, int x, int y, int width, int height);
    
    /// <summary>Call the Fl_Single_Window_tooltip function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Single_Window_new" path="/returns" />
    /// </param>
    /// <returns>
    /// <inheritdoc cref="Fl_Single_Window_new" path="/param[@name='labelPointer']" />
    /// </returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Single_Window_tooltip", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Single_Window_tooltip(IntPtr widget);
    
    /// <summary>Call the Fl_Single_Window_set_tooltip function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Single_Window_new" path="/returns" />
    /// </param>
    /// <param name="tooltipPointer">
    /// <inheritdoc cref="Fl_Single_Window_new" path="/param[@name='labelPointer']" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Single_Window_set_tooltip", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Single_Window_set_tooltip(IntPtr widget, IntPtr tooltipPointer);
    
    /// <summary>Call the Fl_Single_Window_get_type function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Single_Window_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Single_Window_get_type", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Single_Window_get_type(IntPtr widget);
    
    /// <summary>Call the Fl_Single_Window_set_type function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Single_Window_new" path="/returns" />
    /// </param>
    /// <param name="type"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Single_Window_set_type", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Single_Window_set_type(IntPtr widget, int type);
    
    /// <summary>Call the Fl_Single_Window_color function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Single_Window_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Single_Window_color", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern uint Fl_Single_Window_color(IntPtr widget);
    
    /// <summary>Call the Fl_Single_Window_set_color function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Single_Window_new" path="/returns" />
    /// </param>
    /// <param name="color"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Single_Window_set_color", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Single_Window_set_color(IntPtr widget, uint color);
    
    /// <summary>Call the Fl_Single_Window_measure_label function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Single_Window_new" path="/returns" />
    /// </param>
    /// <param name="width"></param>
    /// <param name="height"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Single_Window_measure_label", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Single_Window_measure_label(IntPtr widget, ref int width, ref int height);
    
    /// <summary>Call the Fl_Single_Window_label_color function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Single_Window_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Single_Window_label_color", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern uint Fl_Single_Window_label_color(IntPtr widget);
    
    /// <summary>Call the Fl_Single_Window_set_label_color function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Single_Window_new" path="/returns" />
    /// </param>
    /// <param name="color">
    /// <inheritdoc cref="Fl_Single_Window_label_color" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Single_Window_set_label_color", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Single_Window_set_label_color(IntPtr widget, uint color);
    
    /// <summary>Call the Fl_Single_Window_label_font function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Single_Window_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Single_Window_label_font", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Single_Window_label_font(IntPtr widget);
    
    /// <summary>Call the Fl_Single_Window_set_label_font function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Single_Window_new" path="/returns" />
    /// </param>
    /// <param name="fontIndex"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Single_Window_set_label_font", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Single_Window_set_label_font(IntPtr widget, int fontIndex);
    
    /// <summary>Call the Fl_Single_Window_label_size function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Single_Window_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Single_Window_label_size", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Single_Window_label_size(IntPtr widget);
    
    /// <summary>Call the Fl_Single_Window_set_label_size function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Single_Window_new" path="/returns" />
    /// </param>
    /// <param name="size">
    /// <inheritdoc cref="Fl_Single_Window_label_size" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Single_Window_set_label_size", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Single_Window_set_label_size(IntPtr widget, int size);
    
    /// <summary>Call the Fl_Single_Window_label_type function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Single_Window_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Single_Window_label_type", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Single_Window_label_type(IntPtr widget);
    
    /// <summary>Call the Fl_Single_Window_set_label_type function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Single_Window_new" path="/returns" />
    /// </param>
    /// <param name="size">
    /// <inheritdoc cref="Fl_Single_Window_label_type" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Single_Window_set_label_type", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Single_Window_set_label_type(IntPtr widget, int size);
    
    /// <summary>Call the Fl_Single_Window_box function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Single_Window_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Single_Window_box", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Single_Window_box(IntPtr widget);
    
    /// <summary>Call the Fl_Single_Window_set_box function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Single_Window_new" path="/returns" />
    /// </param>
    /// <param name="type"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Single_Window_set_box", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Single_Window_set_box(IntPtr widget, int type);
    
    /// <summary>Call the Fl_Single_Window_changed function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Single_Window_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Single_Window_changed", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Single_Window_changed(IntPtr widget);
    
    /// <summary>Call the Fl_Single_Window_set_changed function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Single_Window_new" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Single_Window_set_changed", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Single_Window_set_changed(IntPtr widget);
    
    /// <summary>Call the Fl_Single_Window_clear_changed function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Single_Window_new" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Single_Window_clear_changed", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Single_Window_clear_changed(IntPtr widget);
    
    /// <summary>Call the Fl_Single_Window_align function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Single_Window_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Single_Window_align", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Single_Window_align(IntPtr widget);
    
    /// <summary>Call the Fl_Single_Window_set_align function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Single_Window_new" path="/returns" />
    /// </param>
    /// <param name="type"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Single_Window_set_align", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Single_Window_set_align(IntPtr widget, int type);
    
    /// <summary>Call the Fl_Single_Window_delete function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Single_Window_new" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Single_Window_delete", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Single_Window_delete(IntPtr widget);
    
    /// <summary>Call the Fl_Single_Window_set_image function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Single_Window_new" path="/returns" />
    /// </param>
    /// <param name="imagePointer"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Single_Window_set_image", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Single_Window_set_image(IntPtr widget, IntPtr imagePointer);
    
    /// <summary>Call the Fl_Single_Window_handle function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Single_Window_new" path="/returns" />
    /// </param>
    /// <param name="callback"></param>
    /// <param name="data"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Single_Window_handle", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Single_Window_handle(IntPtr widget, FltkWidgetHandleCallback callback, IntPtr data);
    
    /// <summary>Call the Fl_Single_Window_handle_event function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Single_Window_new" path="/returns" />
    /// </param>
    /// <param name="eventType"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Single_Window_handle_event", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Single_Window_handle_event(IntPtr widget, int eventType);
    
    /// <summary>Call the Fl_Single_Window_draw function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Single_Window_new" path="/returns" />
    /// </param>
    /// <param name="callback"></param>
    /// <param name="data"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Single_Window_draw", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Single_Window_draw(IntPtr widget, FltkWidgetCallback callback, IntPtr data);
    
    /// <summary>Call the Fl_Single_Window_resize_callback function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Single_Window_new" path="/returns" />
    /// </param>
    /// <param name="callback"></param>
    /// <param name="data"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Single_Window_resize_callback", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Single_Window_resize_callback(IntPtr widget, FltkWidgetResizeCallback callback, IntPtr data);
    
    /// <summary>Call the Fl_Single_Window_set_when function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Single_Window_new" path="/returns" />
    /// </param>
    /// <param name="value"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Single_Window_set_when", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Single_Window_set_when(IntPtr widget, int value);
    
    /// <summary>Call the Fl_Single_Window_when function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Single_Window_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Single_Window_when", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Single_Window_when(IntPtr widget);
    
    /// <summary>Call the Fl_Single_Window_image function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Single_Window_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Single_Window_image", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Single_Window_image(IntPtr widget);
    
    /// <summary>Call the Fl_Single_Window_parent function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Single_Window_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Single_Window_parent", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Single_Window_parent(IntPtr widget);
    
    /// <summary>Call the Fl_Single_Window_selection_color function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Single_Window_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Single_Window_selection_color", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern uint Fl_Single_Window_selection_color(IntPtr widget);
    
    /// <summary>Call the Fl_Single_Window_set_selection_color function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Single_Window_new" path="/returns" />
    /// </param>
    /// <param name="color"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Single_Window_set_selection_color", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Single_Window_set_selection_color(IntPtr widget, uint color);
    
    /// <summary>Call the Fl_Single_Window_inside function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Single_Window_new" path="/returns" />
    /// </param>
    /// <param name="other"></param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Single_Window_inside", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Single_Window_inside(IntPtr widget, IntPtr other);
    
    /// <summary>Call the Fl_Single_Window_window function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Single_Window_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Single_Window_window", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Single_Window_window(IntPtr widget);
    
    /// <summary>Call the Fl_Single_Window_top_window function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Single_Window_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Single_Window_top_window", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Single_Window_top_window(IntPtr widget);
    
    /// <summary>Call the Fl_Single_Window_takes_events function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Single_Window_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Single_Window_takes_events", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Single_Window_takes_events(IntPtr widget);
    
    /// <summary>Call the Fl_Single_Window_user_data function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Single_Window_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Single_Window_user_data", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Single_Window_user_data(IntPtr widget);
    
    /// <summary>Call the Fl_Single_Window_take_focus function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Single_Window_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Single_Window_take_focus", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Single_Window_take_focus(IntPtr widget);
    
    /// <summary>Call the Fl_Single_Window_set_visible_focus function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Single_Window_new" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Single_Window_set_visible_focus", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Single_Window_set_visible_focus(IntPtr widget);
    
    /// <summary>Call the Fl_Single_Window_clear_visible_focus function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Single_Window_new" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Single_Window_clear_visible_focus", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Single_Window_clear_visible_focus(IntPtr widget);
    
    /// <summary>Call the Fl_Single_Window_visible_focus function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Single_Window_new" path="/returns" />
    /// </param>
    /// <param name="value"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Single_Window_visible_focus", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Single_Window_visible_focus(IntPtr widget, int value);
    
    /// <summary>Call the Fl_Single_Window_has_visible_focus function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Single_Window_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Single_Window_has_visible_focus", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern uint Fl_Single_Window_has_visible_focus(IntPtr widget);
    
    /// <summary>Call the Fl_Single_Window_set_user_data function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Single_Window_new" path="/returns" />
    /// </param>
    /// <param name="data"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Single_Window_set_user_data", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Single_Window_set_user_data(IntPtr widget, IntPtr data);
    
    /// <summary>Call the Fl_Single_Window_draw_data function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Single_Window_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Single_Window_draw_data", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Single_Window_draw_data(IntPtr widget);
    
    /// <summary>Call the Fl_Single_Window_handle_data function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Single_Window_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Single_Window_handle_data", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Single_Window_handle_data(IntPtr widget);
    
    /// <summary>Call the Fl_Single_Window_set_draw_data function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Single_Window_new" path="/returns" />
    /// </param>
    /// <param name="data"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Single_Window_set_draw_data", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Single_Window_set_draw_data(IntPtr widget, IntPtr data);
    
    /// <summary>Call the Fl_Single_Window_set_handle_data function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Single_Window_new" path="/returns" />
    /// </param>
    /// <param name="data"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Single_Window_set_handle_data", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Single_Window_set_handle_data(IntPtr widget, IntPtr data);
    
    /// <summary>Call the Fl_Single_Window_damage function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Single_Window_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Single_Window_damage", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern char Fl_Single_Window_damage(IntPtr widget);
    
    /// <summary>Call the Fl_Single_Window_set_damage function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Single_Window_new" path="/returns" />
    /// </param>
    /// <param name="flag"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Single_Window_set_damage", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Single_Window_set_damage(IntPtr widget, char flag);
    
    /// <summary>Call the Fl_Single_Window_set_damage_area function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Single_Window_new" path="/returns" />
    /// </param>
    /// <param name="flag"></param>
    /// <param name="x"></param>
    /// <param name="y"></param>
    /// <param name="width"></param>
    /// <param name="height"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Single_Window_set_damage_area", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Single_Window_set_damage_area(IntPtr widget, char flag, int x, int y, int width, int height);
    
    /// <summary>Call the Fl_Single_Window_clear_damage function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Single_Window_new" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Single_Window_clear_damage", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Single_Window_clear_damage(IntPtr widget);
    
    /// <summary>Call the Fl_Single_Window_as_window function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Single_Window_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Single_Window_as_window", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Single_Window_as_window(IntPtr widget);
    
    /// <summary>Call the Fl_Single_Window_as_group function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Single_Window_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Single_Window_as_group", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Single_Window_as_group(IntPtr widget);
    
    /// <summary>Call the Fl_Single_Window_set_deimage function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Single_Window_new" path="/returns" />
    /// </param>
    /// <param name="imagePointer"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Single_Window_set_deimage", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Single_Window_set_deimage(IntPtr widget, IntPtr imagePointer);
    
    /// <summary>Call the Fl_Single_Window_deimage function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Single_Window_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Single_Window_deimage", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Single_Window_deimage(IntPtr widget);
    
    /// <summary>Call the Fl_Single_Window_set_callback function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Single_Window_new" path="/returns" />
    /// </param>
    /// <param name="callback"></param>
    /// <param name="data"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Single_Window_set_callback", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Single_Window_set_callback(IntPtr widget, FltkWidgetCallback callback, IntPtr data);
    
    /// <summary>Call the Fl_Single_Window_set_deleter function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Single_Window_new" path="/returns" />
    /// </param>
    /// <param name="callback"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Single_Window_set_deleter", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Single_Window_set_deleter(IntPtr widget, Action<Action> callback);
    
    /// <summary>Call the Fl_Single_Window_visible function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Single_Window_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Single_Window_visible", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Single_Window_visible(IntPtr widget);
    
    /// <summary>Call the Fl_Single_Window_visible_r function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Single_Window_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Single_Window_visible_r", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Single_Window_visible_r(IntPtr widget);
    
    /// <summary>Call the Fl_Single_Window_active function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Single_Window_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Single_Window_active", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern uint Fl_Single_Window_active(IntPtr widget);
    
    /// <summary>Call the Fl_Single_Window_active_r function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Single_Window_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Single_Window_active_r", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Single_Window_active_r(IntPtr widget);
    
    /// <summary>Call the Fl_Single_Window_callback function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Single_Window_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Single_Window_callback", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern FltkWidgetCallback Fl_Single_Window_callback(IntPtr widget);
    
    /// <summary>Call the Fl_Single_Window_set_deletion_callback function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Single_Window_new" path="/returns" />
    /// </param>
    /// <param name="callback"></param>
    /// <param name="data"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Single_Window_set_deletion_callback", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Single_Window_set_deletion_callback(IntPtr widget, FltkWidgetCallback callback, IntPtr data);
    
    /// <summary>Call the Fl_Single_Window_from_dyn_ptr function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Widget_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Single_Window_from_dyn_ptr", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Single_Window_from_dyn_ptr(IntPtr widget);
    
    /// <summary>Call the Fl_Single_Window_from_derived_dyn_ptr function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Widget_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Single_Window_from_derived_dyn_ptr", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Single_Window_from_derived_dyn_ptr(IntPtr widget);
    
    /// <summary>Call the Fl_Single_Window_super_draw function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Widget_new" path="/returns" />
    /// </param>
    /// <param name="flag"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Single_Window_super_draw", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Single_Window_super_draw(IntPtr widget, int flag);
    
    /// <summary>Call the Fl_Single_Window_super_draw_first function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Widget_new" path="/returns" />
    /// </param>
    /// <param name="flag"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Single_Window_super_draw_first", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Single_Window_super_draw_first(IntPtr widget, int flag);
    
    /// <summary>Call the Fl_Single_Window_super_handle_first function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Widget_new" path="/returns" />
    /// </param>
    /// <param name="flag"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Single_Window_super_handle_first", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Single_Window_super_handle_first(IntPtr widget, int flag);
    
    /// <summary>Call the Fl_Single_Window_begin function</summary>
    /// <param name="group">
    /// <inheritdoc cref="Fl_Single_Window_new" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Single_Window_begin", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Single_Window_begin(IntPtr group);
    
    /// <summary>Call the Fl_Single_Window_end function</summary>
    /// <param name="group">
    /// <inheritdoc cref="Fl_Single_Window_new" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Single_Window_end", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Single_Window_end(IntPtr group);
    
    /// <summary>
    /// Find the index of a widget in this group
    /// </summary>
    /// <param name="group">
    /// <inheritdoc cref="Fl_Single_Window_new" path="/returns" />
    /// </param>
    /// <param name="widget"></param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Single_Window_find", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Single_Window_find(IntPtr group, IntPtr widget);
    
    /// <summary>
    /// Add a widget to this group
    /// </summary>
    /// <param name="group">
    /// <inheritdoc cref="Fl_Single_Window_new" path="/returns" />
    /// </param>
    /// <param name="widget"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Single_Window_add", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Single_Window_add(IntPtr group, IntPtr widget);
    
    /// <summary>
    /// Insert the provided widget into this group at a specific index.
    /// </summary>
    /// <param name="group">
    /// <inheritdoc cref="Fl_Single_Window_new" path="/returns" />
    /// </param>
    /// <param name="widget"></param>
    /// <param name="index"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Single_Window_insert", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Single_Window_insert(IntPtr group, IntPtr widget, int index);
    
    /// <summary>
    /// Remove a widget from the group provided.
    /// </summary>
    /// <param name="group">
    /// <inheritdoc cref="Fl_Single_Window_new" path="/returns" />
    /// </param>
    /// <param name="widget"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Single_Window_remove", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Single_Window_remove(IntPtr group, IntPtr widget);
    
    /// <summary>
    /// Remove a widget (by the index) from the group provided.
    /// </summary>
    /// <param name="group">
    /// <inheritdoc cref="Fl_Single_Window_new" path="/returns" />
    /// </param>
    /// <param name="widgetIndex"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Single_Window_remove_by_index", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Single_Window_remove_by_index(IntPtr group, int widgetIndex);
    
    /// <summary>
    /// Remove all child widgets from this group
    /// </summary>
    /// <param name="group">
    /// <inheritdoc cref="Fl_Single_Window_new" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Single_Window_clear", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Single_Window_clear(IntPtr group);
    
    /// <summary>
    /// Get the amount of child widgets for this group
    /// </summary>
    /// <param name="group">
    /// <inheritdoc cref="Fl_Single_Window_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Single_Window_children", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Single_Window_children(IntPtr group);
    
    /// <summary>Call the Fl_Single_Window_child function</summary>
    /// <param name="group">
    /// <inheritdoc cref="Fl_Single_Window_new" path="/returns" />
    /// </param>
    /// <param name="index"></param>
    /// <returns>
    /// <inheritdoc cref="Fl_Widget_new" path="/returns" />
    /// </returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Single_Window_child", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Single_Window_child(IntPtr group, int index);
    
    /// <summary>Call the Fl_Single_Window_resizable function</summary>
    /// <param name="group">
    /// <inheritdoc cref="Fl_Single_Window_new" path="/returns" />
    /// </param>
    /// <param name="resizableWidgetPointer"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Single_Window_resizable", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Single_Window_resizable(IntPtr group, IntPtr resizableWidgetPointer);
    
    /// <summary>Call the Fl_Single_Window_set_clip_children function</summary>
    /// <param name="group">
    /// <inheritdoc cref="Fl_Single_Window_new" path="/returns" />
    /// </param>
    /// <param name="clipValue"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Single_Window_set_clip_children", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Single_Window_set_clip_children(IntPtr group, int clipValue);
    
    /// <summary>Call the Fl_Single_Window_clip_children function</summary>
    /// <param name="group">
    /// <inheritdoc cref="Fl_Single_Window_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Single_Window_clip_children", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Single_Window_clip_children(IntPtr group);
    
    /// <summary>Call the Fl_Single_Window_init_sizes function</summary>
    /// <param name="group">
    /// <inheritdoc cref="Fl_Single_Window_new" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Single_Window_init_sizes", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Single_Window_init_sizes(IntPtr group);
    
    /// <summary>Call the Fl_Single_Window_draw_child function</summary>
    /// <param name="group">
    /// <inheritdoc cref="Fl_Single_Window_new" path="/returns" />
    /// </param>
    /// <param name="childWidgetPointer"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Single_Window_draw_child", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Single_Window_draw_child(IntPtr group, IntPtr childWidgetPointer);
    
    /// <summary>Call the Fl_Single_Window_update_child function</summary>
    /// <param name="group">
    /// <inheritdoc cref="Fl_Single_Window_new" path="/returns" />
    /// </param>
    /// <param name="childWidgetPointer"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Single_Window_update_child", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Single_Window_update_child(IntPtr group, IntPtr childWidgetPointer);
    
    /// <summary>Call the Fl_Single_Window_draw_outside_label function</summary>
    /// <param name="group">
    /// <inheritdoc cref="Fl_Single_Window_new" path="/returns" />
    /// </param>
    /// <param name="childWidgetPointer"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Single_Window_draw_outside_label", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Single_Window_draw_outside_label(IntPtr group, IntPtr childWidgetPointer);
    
    /// <summary>Call the Fl_Single_Window_draw_children function</summary>
    /// <param name="group">
    /// <inheritdoc cref="Fl_Single_Window_new" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Single_Window_draw_children", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Single_Window_draw_children(IntPtr group);
    
    /// <summary>Call the Fl_Single_Window_make_modal function</summary>
    /// <param name="window">
    /// <inheritdoc cref="Fl_Single_Window_new" path="/returns" />
    /// </param>
    /// <param name="state"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Single_Window_make_modal", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Single_Window_make_modal(IntPtr window, [MarshalAs(UnmanagedType.U4)] bool state);
    
    /// <summary>Call the Fl_Single_Window_fullscreen function</summary>
    /// <param name="window">
    /// <inheritdoc cref="Fl_Single_Window_new" path="/returns" />
    /// </param>
    /// <param name="state"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Single_Window_fullscreen", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Single_Window_fullscreen(IntPtr window, [MarshalAs(UnmanagedType.U4)] bool state);
    
    /// <summary>Call the Fl_Single_Window_make_current function</summary>
    /// <param name="window">
    /// <inheritdoc cref="Fl_Single_Window_new" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Single_Window_make_current", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Single_Window_make_current(IntPtr window);
    
    /// <summary>Call the Fl_Single_Window_set_icon function</summary>
    /// <param name="window">
    /// <inheritdoc cref="Fl_Single_Window_new" path="/returns" />
    /// </param>
    /// <param name="imagePointer">
    /// <inheritdoc cref="Fl_Image_new" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Single_Window_set_icon", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Single_Window_set_icon(IntPtr window, IntPtr imagePointer);
    
    /// <summary>Call the Fl_Single_Window_icon function</summary>
    /// <param name="window">
    /// <inheritdoc cref="Fl_Single_Window_new" path="/returns" />
    /// </param>
    /// <returns>
    /// <inheritdoc cref="Fl_Image_new" path="/returns" />
    /// </returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Single_Window_icon", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Single_Window_icon(IntPtr window);
    
    /// <summary>Call the Fl_Single_Window_set_cursor function</summary>
    /// <param name="window">
    /// <inheritdoc cref="Fl_Single_Window_new" path="/returns" />
    /// </param>
    /// <param name="cursor"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Single_Window_set_cursor", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Single_Window_set_cursor(IntPtr window, int cursor);
    
    /// <summary>Call the Fl_Single_Window_shown function</summary>
    /// <param name="window">
    /// <inheritdoc cref="Fl_Single_Window_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Single_Window_shown", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Single_Window_shown(IntPtr window);
    
    /// <summary>Call the Fl_Single_Window_raw_handle function</summary>
    /// <param name="window">
    /// <inheritdoc cref="Fl_Single_Window_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Single_Window_raw_handle", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Single_Window_raw_handle(IntPtr window);
    
    /// <summary>Call the Fl_Single_Window_set_border function</summary>
    /// <param name="window">
    /// <inheritdoc cref="Fl_Single_Window_new" path="/returns" />
    /// </param>
    /// <param name="flag"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Single_Window_set_border", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Single_Window_set_border(IntPtr window, int flag);
    
    /// <summary>Call the Fl_Single_Window_border function</summary>
    /// <param name="window">
    /// <inheritdoc cref="Fl_Single_Window_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Single_Window_border", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Single_Window_border(IntPtr window);
    
    /// <summary>
    /// Get the window region. Will only work on X11
    /// </summary>
    /// <param name="window">
    /// <inheritdoc cref="Fl_Single_Window_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Single_Window_region", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Single_Window_region(IntPtr window);
    
    /// <summary>
    /// Set the window region. Will only work on X11
    /// </summary>
    /// <param name="window">
    /// <inheritdoc cref="Fl_Single_Window_new" path="/returns" />
    /// </param>
    /// <param name="region"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Single_Window_set_region", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Single_Window_set_region(IntPtr window, IntPtr region);
    
    /// <summary>Call the Fl_Single_Window_iconize function</summary>
    /// <param name="window">
    /// <inheritdoc cref="Fl_Single_Window_new" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Single_Window_iconize", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Single_Window_iconize(IntPtr window);
    
    /// <summary>Call the Fl_Single_Window_fullscreen_active function</summary>
    /// <param name="window">
    /// <inheritdoc cref="Fl_Single_Window_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Single_Window_fullscreen_active", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Single_Window_fullscreen_active(IntPtr window);
    
    /// <summary>Call the Fl_Single_Window_free_position function</summary>
    /// <param name="window">
    /// <inheritdoc cref="Fl_Single_Window_new" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Single_Window_free_position", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Single_Window_free_position(IntPtr window);
    
    /// <summary>Call the Fl_Single_Window_decorated_w function</summary>
    /// <param name="window">
    /// <inheritdoc cref="Fl_Single_Window_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Single_Window_decorated_w", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Single_Window_decorated_w(IntPtr window);
    
    /// <summary>Call the Fl_Single_Window_decorated_h function</summary>
    /// <param name="window">
    /// <inheritdoc cref="Fl_Single_Window_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Single_Window_decorated_h", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Single_Window_decorated_h(IntPtr window);
    
    /// <summary>Call the Fl_Single_Window_size_range function</summary>
    /// <param name="window">
    /// <inheritdoc cref="Fl_Single_Window_new" path="/returns" />
    /// </param>
    /// <param name="minimumWidth"></param>
    /// <param name="minimumHeight"></param>
    /// <param name="maximumWidth"></param>
    /// <param name="maximumHeight"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Single_Window_size_range", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Single_Window_size_range(IntPtr window, int minimumWidth, int minimumHeight, int maximumWidth, int maximumHeight);
    
    /// <summary>Call the Fl_Single_Window_hotspot function</summary>
    /// <param name="window">
    /// <inheritdoc cref="Fl_Single_Window_new" path="/returns" />
    /// </param>
    /// <param name="widget"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Single_Window_hotspot", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Single_Window_hotspot(IntPtr window, IntPtr widget);
    
    /// <summary>Call the Fl_Single_Window_set_shape function</summary>
    /// <param name="window">
    /// <inheritdoc cref="Fl_Single_Window_new" path="/returns" />
    /// </param>
    /// <param name="imagePtr"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Single_Window_set_shape", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Single_Window_set_shape(IntPtr window, IntPtr imagePtr);
    
    /// <summary>Call the Fl_Single_Window_shape function</summary>
    /// <param name="window">
    /// <inheritdoc cref="Fl_Single_Window_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Single_Window_shape", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Single_Window_shape(IntPtr window);
    
    /// <summary>Call the Fl_Single_Window_x_root function</summary>
    /// <param name="window">
    /// <inheritdoc cref="Fl_Single_Window_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Single_Window_x_root", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Single_Window_x_root(IntPtr window);
    
    /// <summary>Call the Fl_Single_Window_y_root function</summary>
    /// <param name="window">
    /// <inheritdoc cref="Fl_Single_Window_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Single_Window_y_root", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Single_Window_y_root(IntPtr window);
    
    /// <summary>Call the Fl_Single_Window_set_cursor_image function</summary>
    /// <param name="window">
    /// <inheritdoc cref="Fl_Single_Window_new" path="/returns" />
    /// </param>
    /// <param name="imagePtr"></param>
    /// <param name="hotX"></param>
    /// <param name="hotY"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Single_Window_set_cursor_image", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Single_Window_set_cursor_image(IntPtr window, IntPtr imagePtr, int hotX, int hotY);
    
    /// <summary>Call the Fl_Single_Window_default_cursor function</summary>
    /// <param name="window">
    /// <inheritdoc cref="Fl_Single_Window_new" path="/returns" />
    /// </param>
    /// <param name="cursor"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Single_Window_default_cursor", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Single_Window_default_cursor(IntPtr window, int cursor);
    
    /// <summary>Call the Fl_Single_Window_screen_num function</summary>
    /// <param name="window">
    /// <inheritdoc cref="Fl_Single_Window_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Single_Window_screen_num", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Single_Window_screen_num(IntPtr window);
    
    /// <summary>Call the Fl_Single_Window_set_screen_num function</summary>
    /// <param name="window">
    /// <inheritdoc cref="Fl_Single_Window_new" path="/returns" />
    /// </param>
    /// <param name="screenIndex"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Single_Window_set_screen_num", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Single_Window_set_screen_num(IntPtr window, int screenIndex);
    
    /// <summary>Call the Fl_Single_Window_wait_for_expose function</summary>
    /// <param name="window">
    /// <inheritdoc cref="Fl_Single_Window_new" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Single_Window_wait_for_expose", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Single_Window_wait_for_expose(IntPtr window);
    
    /// <summary>Call the Fl_Single_Window_set_alpha function</summary>
    /// <param name="window">
    /// <inheritdoc cref="Fl_Single_Window_new" path="/returns" />
    /// </param>
    /// <param name="value"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Single_Window_set_alpha", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Single_Window_set_alpha(IntPtr window, char value);
    
    /// <summary>Call the Fl_Single_Window_alpha function</summary>
    /// <param name="window">
    /// <inheritdoc cref="Fl_Single_Window_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Single_Window_alpha", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern char Fl_Single_Window_alpha(IntPtr window);
    
    /// <summary>Call the Fl_Single_Window_force_position function</summary>
    /// <param name="window">
    /// <inheritdoc cref="Fl_Single_Window_new" path="/returns" />
    /// </param>
    /// <param name="flag"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Single_Window_force_position", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Single_Window_force_position(IntPtr window, int flag);
    
    /// <summary>Call the Fl_Single_Window_default_xclass function</summary>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Single_Window_default_xclass", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Single_Window_default_xclass();
    
    /// <summary>Call the Fl_Single_Window_xclass function</summary>
    /// <param name="window">
    /// <inheritdoc cref="Fl_Single_Window_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Single_Window_xclass", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Single_Window_xclass(IntPtr window);
    
    /// <summary>Call the Fl_Single_Window_set_default_xclass function</summary>
    /// <param name="s"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Single_Window_set_default_xclass", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Single_Window_set_default_xclass(IntPtr s);
    
    /// <summary>Call the Fl_Single_Window_set_xclass function</summary>
    /// <param name="window">
    /// <inheritdoc cref="Fl_Single_Window_new" path="/returns" />
    /// </param>
    /// <param name="s"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Single_Window_set_xclass", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Single_Window_set_xclass(IntPtr window, IntPtr s);
    
    /// <summary>Call the Fl_Single_Window_clear_modal_states function</summary>
    /// <param name="window">
    /// <inheritdoc cref="Fl_Single_Window_new" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Single_Window_clear_modal_states", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Single_Window_clear_modal_states(IntPtr window);
    
    /// <summary>Call the Fl_Single_Window_set_override function</summary>
    /// <param name="window">
    /// <inheritdoc cref="Fl_Single_Window_new" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Single_Window_set_override", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Single_Window_set_override(IntPtr window);
    
    /// <summary>Call the Fl_Single_Window_override function</summary>
    /// <param name="window">
    /// <inheritdoc cref="Fl_Single_Window_new" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Single_Window_override", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Single_Window_override(IntPtr window);
    
    /// <summary>Call the Fl_Single_Window_icon_label function</summary>
    /// <param name="window">
    /// <inheritdoc cref="Fl_Single_Window_new" path="/returns" />
    /// </param>
    /// <returns>
    /// <inheritdoc cref="Fl_Single_Window_new" path="/returns" />
    /// </returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Single_Window_icon_label", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Single_Window_icon_label(IntPtr window);
    
    /// <summary>Call the Fl_Single_Window_set_icon_label function</summary>
    /// <param name="window">
    /// <inheritdoc cref="Fl_Single_Window_new" path="/returns" />
    /// </param>
    /// <param name="labelPointer">
    /// <inheritdoc cref="Fl_Widget_new" path="/param[@name='labelPointer']" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Single_Window_set_icon_label", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Single_Window_set_icon_label(IntPtr window, IntPtr labelPointer);
    
    /// <summary>Call the Fl_Single_Window_set_icons function</summary>
    /// <param name="window">
    /// <inheritdoc cref="Fl_Single_Window_new" path="/returns" />
    /// </param>
    /// <param name="imageArrayPtr"></param>
    /// <param name="imageArrayLength"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Single_Window_set_icons", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Single_Window_set_icons(IntPtr window, ref IntPtr[] imageArrayPtr, int imageArrayLength);
    
    /// <summary>Call the Fl_Single_Window_maximize function</summary>
    /// <param name="window">
    /// <inheritdoc cref="Fl_Single_Window_new" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Single_Window_maximize", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Single_Window_maximize(IntPtr window);
    
    /// <summary>Call the Fl_Single_Window_un_maximize function</summary>
    /// <param name="window">
    /// <inheritdoc cref="Fl_Single_Window_new" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Single_Window_un_maximize", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Single_Window_un_maximize(IntPtr window);
    
    /// <summary>Call the Fl_Single_Window_maximize_active function</summary>
    /// <param name="window">
    /// <inheritdoc cref="Fl_Single_Window_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Single_Window_maximize_active", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern uint Fl_Single_Window_maximize_active(IntPtr window);
    
    /// <summary>Call the Fl_Double_Window_new function</summary>
    /// <param name="x"></param>
    /// <param name="y"></param>
    /// <param name="width"></param>
    /// <param name="height"></param>
    /// <param name="titlePointer">
    /// <inheritdoc cref="Fl_Widget_new" path="/param[@name='labelPointer']" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Double_Window_new", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Double_Window_new(int x, int y, int width, int height, IntPtr titlePointer);
    
    /// <summary>Call the Fl_Double_Window_x function</summary>
    /// <param name="widget">
    /// Pointer to <c>Fl_Double_Window</c>
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Double_Window_x", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Double_Window_x(IntPtr widget);
    
    /// <summary>Call the Fl_Double_Window_y function</summary>
    /// <param name="widget">
    /// Pointer to <c>Fl_Double_Window</c>
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Double_Window_y", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Double_Window_y(IntPtr widget);
    
    /// <summary>Call the Fl_Double_Window_width function</summary>
    /// <param name="widget">
    /// Pointer to <c>Fl_Double_Window</c>
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Double_Window_width", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Double_Window_width(IntPtr widget);
    
    /// <summary>Call the Fl_Double_Window_height function</summary>
    /// <param name="widget">
    /// Pointer to <c>Fl_Double_Window</c>
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Double_Window_height", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Double_Window_height(IntPtr widget);
    
    /// <summary>Call the Fl_Double_Window_label function</summary>
    /// <param name="widget">
    /// Pointer to <c>Fl_Double_Window</c>
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Double_Window_label", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Double_Window_label(IntPtr widget);
    
    /// <summary>Call the Fl_Double_Window_set_label function</summary>
    /// <param name="widget"></param>
    /// <param name="labelPointer">
    /// <inheritdoc cref="Fl_Widget_new" path="/param[@name='labelPointer']" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Double_Window_set_label", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Double_Window_set_label(IntPtr widget, IntPtr labelPointer);
    
    /// <summary>Call the Fl_Double_Window_redraw function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Double_Window_new" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Double_Window_redraw", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Double_Window_redraw(IntPtr widget);
    
    /// <summary>Call the Fl_Double_Window_show function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Double_Window_new" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Double_Window_show", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Double_Window_show(IntPtr widget);
    
    /// <summary>Call the Fl_Double_Window_hide function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Double_Window_new" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Double_Window_hide", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Double_Window_hide(IntPtr widget);
    
    /// <summary>Call the Fl_Double_Window_activate function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Double_Window_new" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Double_Window_activate", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Double_Window_activate(IntPtr widget);
    
    /// <summary>Call the Fl_Double_Window_deactivate function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Double_Window_new" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Double_Window_deactivate", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Double_Window_deactivate(IntPtr widget);
    
    /// <summary>Call the Fl_Double_Window_redraw_label function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Double_Window_new" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Double_Window_redraw_label", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Double_Window_redraw_label(IntPtr widget);
    
    /// <summary>Call the Fl_Double_Window_resize function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Double_Window_new" path="/returns" />
    /// </param>
    /// <param name="x"></param>
    /// <param name="y"></param>
    /// <param name="width"></param>
    /// <param name="height"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Double_Window_resize", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Double_Window_resize(IntPtr widget, int x, int y, int width, int height);
    
    /// <summary>Call the Fl_Double_Window_widget_resize function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Double_Window_new" path="/returns" />
    /// </param>
    /// <param name="x"></param>
    /// <param name="y"></param>
    /// <param name="width"></param>
    /// <param name="height"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Double_Window_widget_resize", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Double_Window_widget_resize(IntPtr widget, int x, int y, int width, int height);
    
    /// <summary>Call the Fl_Double_Window_tooltip function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Double_Window_new" path="/returns" />
    /// </param>
    /// <returns>
    /// <inheritdoc cref="Fl_Double_Window_new" path="/param[@name='labelPointer']" />
    /// </returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Double_Window_tooltip", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Double_Window_tooltip(IntPtr widget);
    
    /// <summary>Call the Fl_Double_Window_set_tooltip function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Double_Window_new" path="/returns" />
    /// </param>
    /// <param name="tooltipPointer">
    /// <inheritdoc cref="Fl_Double_Window_new" path="/param[@name='labelPointer']" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Double_Window_set_tooltip", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Double_Window_set_tooltip(IntPtr widget, IntPtr tooltipPointer);
    
    /// <summary>Call the Fl_Double_Window_get_type function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Double_Window_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Double_Window_get_type", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Double_Window_get_type(IntPtr widget);
    
    /// <summary>Call the Fl_Double_Window_set_type function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Double_Window_new" path="/returns" />
    /// </param>
    /// <param name="type"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Double_Window_set_type", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Double_Window_set_type(IntPtr widget, int type);
    
    /// <summary>Call the Fl_Double_Window_color function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Double_Window_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Double_Window_color", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern uint Fl_Double_Window_color(IntPtr widget);
    
    /// <summary>Call the Fl_Double_Window_set_color function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Double_Window_new" path="/returns" />
    /// </param>
    /// <param name="color"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Double_Window_set_color", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Double_Window_set_color(IntPtr widget, uint color);
    
    /// <summary>Call the Fl_Double_Window_measure_label function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Double_Window_new" path="/returns" />
    /// </param>
    /// <param name="width"></param>
    /// <param name="height"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Double_Window_measure_label", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Double_Window_measure_label(IntPtr widget, ref int width, ref int height);
    
    /// <summary>Call the Fl_Double_Window_label_color function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Double_Window_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Double_Window_label_color", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern uint Fl_Double_Window_label_color(IntPtr widget);
    
    /// <summary>Call the Fl_Double_Window_set_label_color function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Double_Window_new" path="/returns" />
    /// </param>
    /// <param name="color">
    /// <inheritdoc cref="Fl_Double_Window_label_color" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Double_Window_set_label_color", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Double_Window_set_label_color(IntPtr widget, uint color);
    
    /// <summary>Call the Fl_Double_Window_label_font function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Double_Window_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Double_Window_label_font", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Double_Window_label_font(IntPtr widget);
    
    /// <summary>Call the Fl_Double_Window_set_label_font function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Double_Window_new" path="/returns" />
    /// </param>
    /// <param name="fontIndex"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Double_Window_set_label_font", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Double_Window_set_label_font(IntPtr widget, int fontIndex);
    
    /// <summary>Call the Fl_Double_Window_label_size function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Double_Window_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Double_Window_label_size", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Double_Window_label_size(IntPtr widget);
    
    /// <summary>Call the Fl_Double_Window_set_label_size function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Double_Window_new" path="/returns" />
    /// </param>
    /// <param name="size">
    /// <inheritdoc cref="Fl_Double_Window_label_size" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Double_Window_set_label_size", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Double_Window_set_label_size(IntPtr widget, int size);
    
    /// <summary>Call the Fl_Double_Window_label_type function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Double_Window_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Double_Window_label_type", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Double_Window_label_type(IntPtr widget);
    
    /// <summary>Call the Fl_Double_Window_set_label_type function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Double_Window_new" path="/returns" />
    /// </param>
    /// <param name="size">
    /// <inheritdoc cref="Fl_Double_Window_label_type" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Double_Window_set_label_type", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Double_Window_set_label_type(IntPtr widget, int size);
    
    /// <summary>Call the Fl_Double_Window_box function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Double_Window_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Double_Window_box", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Double_Window_box(IntPtr widget);
    
    /// <summary>Call the Fl_Double_Window_set_box function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Double_Window_new" path="/returns" />
    /// </param>
    /// <param name="type"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Double_Window_set_box", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Double_Window_set_box(IntPtr widget, int type);
    
    /// <summary>Call the Fl_Double_Window_changed function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Double_Window_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Double_Window_changed", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Double_Window_changed(IntPtr widget);
    
    /// <summary>Call the Fl_Double_Window_set_changed function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Double_Window_new" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Double_Window_set_changed", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Double_Window_set_changed(IntPtr widget);
    
    /// <summary>Call the Fl_Double_Window_clear_changed function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Double_Window_new" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Double_Window_clear_changed", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Double_Window_clear_changed(IntPtr widget);
    
    /// <summary>Call the Fl_Double_Window_align function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Double_Window_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Double_Window_align", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Double_Window_align(IntPtr widget);
    
    /// <summary>Call the Fl_Double_Window_set_align function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Double_Window_new" path="/returns" />
    /// </param>
    /// <param name="type"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Double_Window_set_align", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Double_Window_set_align(IntPtr widget, int type);
    
    /// <summary>Call the Fl_Double_Window_delete function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Double_Window_new" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Double_Window_delete", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Double_Window_delete(IntPtr widget);
    
    /// <summary>Call the Fl_Double_Window_set_image function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Double_Window_new" path="/returns" />
    /// </param>
    /// <param name="imagePointer"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Double_Window_set_image", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Double_Window_set_image(IntPtr widget, IntPtr imagePointer);
    
    /// <summary>Call the Fl_Double_Window_handle function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Double_Window_new" path="/returns" />
    /// </param>
    /// <param name="callback"></param>
    /// <param name="data"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Double_Window_handle", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Double_Window_handle(IntPtr widget, FltkWidgetHandleCallback callback, IntPtr data);
    
    /// <summary>Call the Fl_Double_Window_handle_event function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Double_Window_new" path="/returns" />
    /// </param>
    /// <param name="eventType"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Double_Window_handle_event", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Double_Window_handle_event(IntPtr widget, int eventType);
    
    /// <summary>Call the Fl_Double_Window_draw function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Double_Window_new" path="/returns" />
    /// </param>
    /// <param name="callback"></param>
    /// <param name="data"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Double_Window_draw", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Double_Window_draw(IntPtr widget, FltkWidgetCallback callback, IntPtr data);
    
    /// <summary>Call the Fl_Double_Window_resize_callback function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Double_Window_new" path="/returns" />
    /// </param>
    /// <param name="callback"></param>
    /// <param name="data"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Double_Window_resize_callback", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Double_Window_resize_callback(IntPtr widget, FltkWidgetResizeCallback callback, IntPtr data);
    
    /// <summary>Call the Fl_Double_Window_set_when function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Double_Window_new" path="/returns" />
    /// </param>
    /// <param name="value"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Double_Window_set_when", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Double_Window_set_when(IntPtr widget, int value);
    
    /// <summary>Call the Fl_Double_Window_when function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Double_Window_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Double_Window_when", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Double_Window_when(IntPtr widget);
    
    /// <summary>Call the Fl_Double_Window_image function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Double_Window_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Double_Window_image", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Double_Window_image(IntPtr widget);
    
    /// <summary>Call the Fl_Double_Window_parent function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Double_Window_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Double_Window_parent", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Double_Window_parent(IntPtr widget);
    
    /// <summary>Call the Fl_Double_Window_selection_color function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Double_Window_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Double_Window_selection_color", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern uint Fl_Double_Window_selection_color(IntPtr widget);
    
    /// <summary>Call the Fl_Double_Window_set_selection_color function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Double_Window_new" path="/returns" />
    /// </param>
    /// <param name="color"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Double_Window_set_selection_color", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Double_Window_set_selection_color(IntPtr widget, uint color);
    
    /// <summary>Call the Fl_Double_Window_inside function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Double_Window_new" path="/returns" />
    /// </param>
    /// <param name="other"></param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Double_Window_inside", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Double_Window_inside(IntPtr widget, IntPtr other);
    
    /// <summary>Call the Fl_Double_Window_window function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Double_Window_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Double_Window_window", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Double_Window_window(IntPtr widget);
    
    /// <summary>Call the Fl_Double_Window_top_window function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Double_Window_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Double_Window_top_window", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Double_Window_top_window(IntPtr widget);
    
    /// <summary>Call the Fl_Double_Window_takes_events function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Double_Window_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Double_Window_takes_events", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Double_Window_takes_events(IntPtr widget);
    
    /// <summary>Call the Fl_Double_Window_user_data function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Double_Window_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Double_Window_user_data", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Double_Window_user_data(IntPtr widget);
    
    /// <summary>Call the Fl_Double_Window_take_focus function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Double_Window_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Double_Window_take_focus", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Double_Window_take_focus(IntPtr widget);
    
    /// <summary>Call the Fl_Double_Window_set_visible_focus function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Double_Window_new" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Double_Window_set_visible_focus", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Double_Window_set_visible_focus(IntPtr widget);
    
    /// <summary>Call the Fl_Double_Window_clear_visible_focus function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Double_Window_new" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Double_Window_clear_visible_focus", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Double_Window_clear_visible_focus(IntPtr widget);
    
    /// <summary>Call the Fl_Double_Window_visible_focus function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Double_Window_new" path="/returns" />
    /// </param>
    /// <param name="value"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Double_Window_visible_focus", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Double_Window_visible_focus(IntPtr widget, int value);
    
    /// <summary>Call the Fl_Double_Window_has_visible_focus function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Double_Window_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Double_Window_has_visible_focus", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern uint Fl_Double_Window_has_visible_focus(IntPtr widget);
    
    /// <summary>Call the Fl_Double_Window_set_user_data function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Double_Window_new" path="/returns" />
    /// </param>
    /// <param name="data"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Double_Window_set_user_data", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Double_Window_set_user_data(IntPtr widget, IntPtr data);
    
    /// <summary>Call the Fl_Double_Window_draw_data function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Double_Window_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Double_Window_draw_data", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Double_Window_draw_data(IntPtr widget);
    
    /// <summary>Call the Fl_Double_Window_handle_data function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Double_Window_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Double_Window_handle_data", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Double_Window_handle_data(IntPtr widget);
    
    /// <summary>Call the Fl_Double_Window_set_draw_data function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Double_Window_new" path="/returns" />
    /// </param>
    /// <param name="data"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Double_Window_set_draw_data", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Double_Window_set_draw_data(IntPtr widget, IntPtr data);
    
    /// <summary>Call the Fl_Double_Window_set_handle_data function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Double_Window_new" path="/returns" />
    /// </param>
    /// <param name="data"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Double_Window_set_handle_data", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Double_Window_set_handle_data(IntPtr widget, IntPtr data);
    
    /// <summary>Call the Fl_Double_Window_damage function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Double_Window_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Double_Window_damage", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern char Fl_Double_Window_damage(IntPtr widget);
    
    /// <summary>Call the Fl_Double_Window_set_damage function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Double_Window_new" path="/returns" />
    /// </param>
    /// <param name="flag"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Double_Window_set_damage", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Double_Window_set_damage(IntPtr widget, char flag);
    
    /// <summary>Call the Fl_Double_Window_set_damage_area function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Double_Window_new" path="/returns" />
    /// </param>
    /// <param name="flag"></param>
    /// <param name="x"></param>
    /// <param name="y"></param>
    /// <param name="width"></param>
    /// <param name="height"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Double_Window_set_damage_area", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Double_Window_set_damage_area(IntPtr widget, char flag, int x, int y, int width, int height);
    
    /// <summary>Call the Fl_Double_Window_clear_damage function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Double_Window_new" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Double_Window_clear_damage", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Double_Window_clear_damage(IntPtr widget);
    
    /// <summary>Call the Fl_Double_Window_as_window function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Double_Window_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Double_Window_as_window", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Double_Window_as_window(IntPtr widget);
    
    /// <summary>Call the Fl_Double_Window_as_group function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Double_Window_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Double_Window_as_group", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Double_Window_as_group(IntPtr widget);
    
    /// <summary>Call the Fl_Double_Window_set_deimage function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Double_Window_new" path="/returns" />
    /// </param>
    /// <param name="imagePointer"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Double_Window_set_deimage", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Double_Window_set_deimage(IntPtr widget, IntPtr imagePointer);
    
    /// <summary>Call the Fl_Double_Window_deimage function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Double_Window_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Double_Window_deimage", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Double_Window_deimage(IntPtr widget);
    
    /// <summary>Call the Fl_Double_Window_set_callback function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Double_Window_new" path="/returns" />
    /// </param>
    /// <param name="callback"></param>
    /// <param name="data"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Double_Window_set_callback", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Double_Window_set_callback(IntPtr widget, FltkWidgetCallback callback, IntPtr data);
    
    /// <summary>Call the Fl_Double_Window_set_deleter function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Double_Window_new" path="/returns" />
    /// </param>
    /// <param name="callback"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Double_Window_set_deleter", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Double_Window_set_deleter(IntPtr widget, Action<Action> callback);
    
    /// <summary>Call the Fl_Double_Window_visible function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Double_Window_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Double_Window_visible", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Double_Window_visible(IntPtr widget);
    
    /// <summary>Call the Fl_Double_Window_visible_r function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Double_Window_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Double_Window_visible_r", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Double_Window_visible_r(IntPtr widget);
    
    /// <summary>Call the Fl_Double_Window_active function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Double_Window_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Double_Window_active", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern uint Fl_Double_Window_active(IntPtr widget);
    
    /// <summary>Call the Fl_Double_Window_active_r function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Double_Window_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Double_Window_active_r", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Double_Window_active_r(IntPtr widget);
    
    /// <summary>Call the Fl_Double_Window_callback function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Double_Window_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Double_Window_callback", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern FltkWidgetCallback Fl_Double_Window_callback(IntPtr widget);
    
    /// <summary>Call the Fl_Double_Window_set_deletion_callback function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Double_Window_new" path="/returns" />
    /// </param>
    /// <param name="callback"></param>
    /// <param name="data"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Double_Window_set_deletion_callback", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Double_Window_set_deletion_callback(IntPtr widget, FltkWidgetCallback callback, IntPtr data);
    
    /// <summary>Call the Fl_Double_Window_from_dyn_ptr function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Widget_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Double_Window_from_dyn_ptr", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Double_Window_from_dyn_ptr(IntPtr widget);
    
    /// <summary>Call the Fl_Double_Window_from_derived_dyn_ptr function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Widget_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Double_Window_from_derived_dyn_ptr", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Double_Window_from_derived_dyn_ptr(IntPtr widget);
    
    /// <summary>Call the Fl_Double_Window_super_draw function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Widget_new" path="/returns" />
    /// </param>
    /// <param name="flag"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Double_Window_super_draw", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Double_Window_super_draw(IntPtr widget, int flag);
    
    /// <summary>Call the Fl_Double_Window_super_draw_first function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Widget_new" path="/returns" />
    /// </param>
    /// <param name="flag"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Double_Window_super_draw_first", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Double_Window_super_draw_first(IntPtr widget, int flag);
    
    /// <summary>Call the Fl_Double_Window_super_handle_first function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Widget_new" path="/returns" />
    /// </param>
    /// <param name="flag"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Double_Window_super_handle_first", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Double_Window_super_handle_first(IntPtr widget, int flag);
    
    /// <summary>Call the Fl_Double_Window_begin function</summary>
    /// <param name="group">
    /// <inheritdoc cref="Fl_Double_Window_new" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Double_Window_begin", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Double_Window_begin(IntPtr group);
    
    /// <summary>Call the Fl_Double_Window_end function</summary>
    /// <param name="group">
    /// <inheritdoc cref="Fl_Double_Window_new" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Double_Window_end", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Double_Window_end(IntPtr group);
    
    /// <summary>
    /// Find the index of a widget in this group
    /// </summary>
    /// <param name="group">
    /// <inheritdoc cref="Fl_Double_Window_new" path="/returns" />
    /// </param>
    /// <param name="widget"></param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Double_Window_find", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Double_Window_find(IntPtr group, IntPtr widget);
    
    /// <summary>
    /// Add a widget to this group
    /// </summary>
    /// <param name="group">
    /// <inheritdoc cref="Fl_Double_Window_new" path="/returns" />
    /// </param>
    /// <param name="widget"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Double_Window_add", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Double_Window_add(IntPtr group, IntPtr widget);
    
    /// <summary>
    /// Insert the provided widget into this group at a specific index.
    /// </summary>
    /// <param name="group">
    /// <inheritdoc cref="Fl_Double_Window_new" path="/returns" />
    /// </param>
    /// <param name="widget"></param>
    /// <param name="index"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Double_Window_insert", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Double_Window_insert(IntPtr group, IntPtr widget, int index);
    
    /// <summary>
    /// Remove a widget from the group provided.
    /// </summary>
    /// <param name="group">
    /// <inheritdoc cref="Fl_Double_Window_new" path="/returns" />
    /// </param>
    /// <param name="widget"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Double_Window_remove", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Double_Window_remove(IntPtr group, IntPtr widget);
    
    /// <summary>
    /// Remove a widget (by the index) from the group provided.
    /// </summary>
    /// <param name="group">
    /// <inheritdoc cref="Fl_Double_Window_new" path="/returns" />
    /// </param>
    /// <param name="widgetIndex"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Double_Window_remove_by_index", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Double_Window_remove_by_index(IntPtr group, int widgetIndex);
    
    /// <summary>
    /// Remove all child widgets from this group
    /// </summary>
    /// <param name="group">
    /// <inheritdoc cref="Fl_Double_Window_new" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Double_Window_clear", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Double_Window_clear(IntPtr group);
    
    /// <summary>
    /// Get the amount of child widgets for this group
    /// </summary>
    /// <param name="group">
    /// <inheritdoc cref="Fl_Double_Window_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Double_Window_children", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Double_Window_children(IntPtr group);
    
    /// <summary>Call the Fl_Double_Window_child function</summary>
    /// <param name="group">
    /// <inheritdoc cref="Fl_Double_Window_new" path="/returns" />
    /// </param>
    /// <param name="index"></param>
    /// <returns>
    /// <inheritdoc cref="Fl_Widget_new" path="/returns" />
    /// </returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Double_Window_child", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Double_Window_child(IntPtr group, int index);
    
    /// <summary>Call the Fl_Double_Window_resizable function</summary>
    /// <param name="group">
    /// <inheritdoc cref="Fl_Double_Window_new" path="/returns" />
    /// </param>
    /// <param name="resizableWidgetPointer"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Double_Window_resizable", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Double_Window_resizable(IntPtr group, IntPtr resizableWidgetPointer);
    
    /// <summary>Call the Fl_Double_Window_set_clip_children function</summary>
    /// <param name="group">
    /// <inheritdoc cref="Fl_Double_Window_new" path="/returns" />
    /// </param>
    /// <param name="clipValue"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Double_Window_set_clip_children", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Double_Window_set_clip_children(IntPtr group, int clipValue);
    
    /// <summary>Call the Fl_Double_Window_clip_children function</summary>
    /// <param name="group">
    /// <inheritdoc cref="Fl_Double_Window_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Double_Window_clip_children", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Double_Window_clip_children(IntPtr group);
    
    /// <summary>Call the Fl_Double_Window_init_sizes function</summary>
    /// <param name="group">
    /// <inheritdoc cref="Fl_Double_Window_new" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Double_Window_init_sizes", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Double_Window_init_sizes(IntPtr group);
    
    /// <summary>Call the Fl_Double_Window_draw_child function</summary>
    /// <param name="group">
    /// <inheritdoc cref="Fl_Double_Window_new" path="/returns" />
    /// </param>
    /// <param name="childWidgetPointer"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Double_Window_draw_child", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Double_Window_draw_child(IntPtr group, IntPtr childWidgetPointer);
    
    /// <summary>Call the Fl_Double_Window_update_child function</summary>
    /// <param name="group">
    /// <inheritdoc cref="Fl_Double_Window_new" path="/returns" />
    /// </param>
    /// <param name="childWidgetPointer"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Double_Window_update_child", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Double_Window_update_child(IntPtr group, IntPtr childWidgetPointer);
    
    /// <summary>Call the Fl_Double_Window_draw_outside_label function</summary>
    /// <param name="group">
    /// <inheritdoc cref="Fl_Double_Window_new" path="/returns" />
    /// </param>
    /// <param name="childWidgetPointer"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Double_Window_draw_outside_label", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Double_Window_draw_outside_label(IntPtr group, IntPtr childWidgetPointer);
    
    /// <summary>Call the Fl_Double_Window_draw_children function</summary>
    /// <param name="group">
    /// <inheritdoc cref="Fl_Double_Window_new" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Double_Window_draw_children", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Double_Window_draw_children(IntPtr group);
    
    /// <summary>Call the Fl_Double_Window_make_modal function</summary>
    /// <param name="window">
    /// <inheritdoc cref="Fl_Double_Window_new" path="/returns" />
    /// </param>
    /// <param name="state"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Double_Window_make_modal", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Double_Window_make_modal(IntPtr window, [MarshalAs(UnmanagedType.U4)] bool state);
    
    /// <summary>Call the Fl_Double_Window_fullscreen function</summary>
    /// <param name="window">
    /// <inheritdoc cref="Fl_Double_Window_new" path="/returns" />
    /// </param>
    /// <param name="state"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Double_Window_fullscreen", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Double_Window_fullscreen(IntPtr window, [MarshalAs(UnmanagedType.U4)] bool state);
    
    /// <summary>Call the Fl_Double_Window_make_current function</summary>
    /// <param name="window">
    /// <inheritdoc cref="Fl_Double_Window_new" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Double_Window_make_current", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Double_Window_make_current(IntPtr window);
    
    /// <summary>Call the Fl_Double_Window_set_icon function</summary>
    /// <param name="window">
    /// <inheritdoc cref="Fl_Double_Window_new" path="/returns" />
    /// </param>
    /// <param name="imagePointer">
    /// <inheritdoc cref="Fl_Image_new" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Double_Window_set_icon", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Double_Window_set_icon(IntPtr window, IntPtr imagePointer);
    
    /// <summary>Call the Fl_Double_Window_icon function</summary>
    /// <param name="window">
    /// <inheritdoc cref="Fl_Double_Window_new" path="/returns" />
    /// </param>
    /// <returns>
    /// <inheritdoc cref="Fl_Image_new" path="/returns" />
    /// </returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Double_Window_icon", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Double_Window_icon(IntPtr window);
    
    /// <summary>Call the Fl_Double_Window_set_cursor function</summary>
    /// <param name="window">
    /// <inheritdoc cref="Fl_Double_Window_new" path="/returns" />
    /// </param>
    /// <param name="cursor"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Double_Window_set_cursor", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Double_Window_set_cursor(IntPtr window, int cursor);
    
    /// <summary>Call the Fl_Double_Window_shown function</summary>
    /// <param name="window">
    /// <inheritdoc cref="Fl_Double_Window_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Double_Window_shown", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Double_Window_shown(IntPtr window);
    
    /// <summary>Call the Fl_Double_Window_raw_handle function</summary>
    /// <param name="window">
    /// <inheritdoc cref="Fl_Double_Window_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Double_Window_raw_handle", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Double_Window_raw_handle(IntPtr window);
    
    /// <summary>Call the Fl_Double_Window_set_border function</summary>
    /// <param name="window">
    /// <inheritdoc cref="Fl_Double_Window_new" path="/returns" />
    /// </param>
    /// <param name="flag"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Double_Window_set_border", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Double_Window_set_border(IntPtr window, int flag);
    
    /// <summary>Call the Fl_Double_Window_border function</summary>
    /// <param name="window">
    /// <inheritdoc cref="Fl_Double_Window_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Double_Window_border", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Double_Window_border(IntPtr window);
    
    /// <summary>
    /// Get the window region. Will only work on X11
    /// </summary>
    /// <param name="window">
    /// <inheritdoc cref="Fl_Double_Window_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Double_Window_region", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Double_Window_region(IntPtr window);
    
    /// <summary>
    /// Set the window region. Will only work on X11
    /// </summary>
    /// <param name="window">
    /// <inheritdoc cref="Fl_Double_Window_new" path="/returns" />
    /// </param>
    /// <param name="region"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Double_Window_set_region", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Double_Window_set_region(IntPtr window, IntPtr region);
    
    /// <summary>Call the Fl_Double_Window_iconize function</summary>
    /// <param name="window">
    /// <inheritdoc cref="Fl_Double_Window_new" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Double_Window_iconize", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Double_Window_iconize(IntPtr window);
    
    /// <summary>Call the Fl_Double_Window_fullscreen_active function</summary>
    /// <param name="window">
    /// <inheritdoc cref="Fl_Double_Window_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Double_Window_fullscreen_active", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Double_Window_fullscreen_active(IntPtr window);
    
    /// <summary>Call the Fl_Double_Window_free_position function</summary>
    /// <param name="window">
    /// <inheritdoc cref="Fl_Double_Window_new" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Double_Window_free_position", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Double_Window_free_position(IntPtr window);
    
    /// <summary>Call the Fl_Double_Window_decorated_w function</summary>
    /// <param name="window">
    /// <inheritdoc cref="Fl_Double_Window_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Double_Window_decorated_w", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Double_Window_decorated_w(IntPtr window);
    
    /// <summary>Call the Fl_Double_Window_decorated_h function</summary>
    /// <param name="window">
    /// <inheritdoc cref="Fl_Double_Window_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Double_Window_decorated_h", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Double_Window_decorated_h(IntPtr window);
    
    /// <summary>Call the Fl_Double_Window_size_range function</summary>
    /// <param name="window">
    /// <inheritdoc cref="Fl_Double_Window_new" path="/returns" />
    /// </param>
    /// <param name="minimumWidth"></param>
    /// <param name="minimumHeight"></param>
    /// <param name="maximumWidth"></param>
    /// <param name="maximumHeight"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Double_Window_size_range", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Double_Window_size_range(IntPtr window, int minimumWidth, int minimumHeight, int maximumWidth, int maximumHeight);
    
    /// <summary>Call the Fl_Double_Window_hotspot function</summary>
    /// <param name="window">
    /// <inheritdoc cref="Fl_Double_Window_new" path="/returns" />
    /// </param>
    /// <param name="widget"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Double_Window_hotspot", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Double_Window_hotspot(IntPtr window, IntPtr widget);
    
    /// <summary>Call the Fl_Double_Window_set_shape function</summary>
    /// <param name="window">
    /// <inheritdoc cref="Fl_Double_Window_new" path="/returns" />
    /// </param>
    /// <param name="imagePtr"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Double_Window_set_shape", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Double_Window_set_shape(IntPtr window, IntPtr imagePtr);
    
    /// <summary>Call the Fl_Double_Window_shape function</summary>
    /// <param name="window">
    /// <inheritdoc cref="Fl_Double_Window_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Double_Window_shape", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Double_Window_shape(IntPtr window);
    
    /// <summary>Call the Fl_Double_Window_x_root function</summary>
    /// <param name="window">
    /// <inheritdoc cref="Fl_Double_Window_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Double_Window_x_root", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Double_Window_x_root(IntPtr window);
    
    /// <summary>Call the Fl_Double_Window_y_root function</summary>
    /// <param name="window">
    /// <inheritdoc cref="Fl_Double_Window_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Double_Window_y_root", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Double_Window_y_root(IntPtr window);
    
    /// <summary>Call the Fl_Double_Window_set_cursor_image function</summary>
    /// <param name="window">
    /// <inheritdoc cref="Fl_Double_Window_new" path="/returns" />
    /// </param>
    /// <param name="imagePtr"></param>
    /// <param name="hotX"></param>
    /// <param name="hotY"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Double_Window_set_cursor_image", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Double_Window_set_cursor_image(IntPtr window, IntPtr imagePtr, int hotX, int hotY);
    
    /// <summary>Call the Fl_Double_Window_default_cursor function</summary>
    /// <param name="window">
    /// <inheritdoc cref="Fl_Double_Window_new" path="/returns" />
    /// </param>
    /// <param name="cursor"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Double_Window_default_cursor", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Double_Window_default_cursor(IntPtr window, int cursor);
    
    /// <summary>Call the Fl_Double_Window_screen_num function</summary>
    /// <param name="window">
    /// <inheritdoc cref="Fl_Double_Window_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Double_Window_screen_num", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Double_Window_screen_num(IntPtr window);
    
    /// <summary>Call the Fl_Double_Window_set_screen_num function</summary>
    /// <param name="window">
    /// <inheritdoc cref="Fl_Double_Window_new" path="/returns" />
    /// </param>
    /// <param name="screenIndex"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Double_Window_set_screen_num", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Double_Window_set_screen_num(IntPtr window, int screenIndex);
    
    /// <summary>Call the Fl_Double_Window_wait_for_expose function</summary>
    /// <param name="window">
    /// <inheritdoc cref="Fl_Double_Window_new" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Double_Window_wait_for_expose", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Double_Window_wait_for_expose(IntPtr window);
    
    /// <summary>Call the Fl_Double_Window_set_alpha function</summary>
    /// <param name="window">
    /// <inheritdoc cref="Fl_Double_Window_new" path="/returns" />
    /// </param>
    /// <param name="value"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Double_Window_set_alpha", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Double_Window_set_alpha(IntPtr window, char value);
    
    /// <summary>Call the Fl_Double_Window_alpha function</summary>
    /// <param name="window">
    /// <inheritdoc cref="Fl_Double_Window_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Double_Window_alpha", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern char Fl_Double_Window_alpha(IntPtr window);
    
    /// <summary>Call the Fl_Double_Window_force_position function</summary>
    /// <param name="window">
    /// <inheritdoc cref="Fl_Double_Window_new" path="/returns" />
    /// </param>
    /// <param name="flag"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Double_Window_force_position", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Double_Window_force_position(IntPtr window, int flag);
    
    /// <summary>Call the Fl_Double_Window_default_xclass function</summary>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Double_Window_default_xclass", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Double_Window_default_xclass();
    
    /// <summary>Call the Fl_Double_Window_xclass function</summary>
    /// <param name="window">
    /// <inheritdoc cref="Fl_Double_Window_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Double_Window_xclass", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Double_Window_xclass(IntPtr window);
    
    /// <summary>Call the Fl_Double_Window_set_default_xclass function</summary>
    /// <param name="s"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Double_Window_set_default_xclass", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Double_Window_set_default_xclass(IntPtr s);
    
    /// <summary>Call the Fl_Double_Window_set_xclass function</summary>
    /// <param name="window">
    /// <inheritdoc cref="Fl_Double_Window_new" path="/returns" />
    /// </param>
    /// <param name="s"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Double_Window_set_xclass", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Double_Window_set_xclass(IntPtr window, IntPtr s);
    
    /// <summary>Call the Fl_Double_Window_clear_modal_states function</summary>
    /// <param name="window">
    /// <inheritdoc cref="Fl_Double_Window_new" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Double_Window_clear_modal_states", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Double_Window_clear_modal_states(IntPtr window);
    
    /// <summary>Call the Fl_Double_Window_set_override function</summary>
    /// <param name="window">
    /// <inheritdoc cref="Fl_Double_Window_new" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Double_Window_set_override", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Double_Window_set_override(IntPtr window);
    
    /// <summary>Call the Fl_Double_Window_override function</summary>
    /// <param name="window">
    /// <inheritdoc cref="Fl_Double_Window_new" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Double_Window_override", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Double_Window_override(IntPtr window);
    
    /// <summary>Call the Fl_Double_Window_icon_label function</summary>
    /// <param name="window">
    /// <inheritdoc cref="Fl_Double_Window_new" path="/returns" />
    /// </param>
    /// <returns>
    /// <inheritdoc cref="Fl_Double_Window_new" path="/returns" />
    /// </returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Double_Window_icon_label", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Double_Window_icon_label(IntPtr window);
    
    /// <summary>Call the Fl_Double_Window_set_icon_label function</summary>
    /// <param name="window">
    /// <inheritdoc cref="Fl_Double_Window_new" path="/returns" />
    /// </param>
    /// <param name="labelPointer">
    /// <inheritdoc cref="Fl_Widget_new" path="/param[@name='labelPointer']" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Double_Window_set_icon_label", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Double_Window_set_icon_label(IntPtr window, IntPtr labelPointer);
    
    /// <summary>Call the Fl_Double_Window_set_icons function</summary>
    /// <param name="window">
    /// <inheritdoc cref="Fl_Double_Window_new" path="/returns" />
    /// </param>
    /// <param name="imageArrayPtr"></param>
    /// <param name="imageArrayLength"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Double_Window_set_icons", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Double_Window_set_icons(IntPtr window, ref IntPtr[] imageArrayPtr, int imageArrayLength);
    
    /// <summary>Call the Fl_Double_Window_maximize function</summary>
    /// <param name="window">
    /// <inheritdoc cref="Fl_Double_Window_new" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Double_Window_maximize", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Double_Window_maximize(IntPtr window);
    
    /// <summary>Call the Fl_Double_Window_un_maximize function</summary>
    /// <param name="window">
    /// <inheritdoc cref="Fl_Double_Window_new" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Double_Window_un_maximize", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Double_Window_un_maximize(IntPtr window);
    
    /// <summary>Call the Fl_Double_Window_maximize_active function</summary>
    /// <param name="window">
    /// <inheritdoc cref="Fl_Double_Window_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Double_Window_maximize_active", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern uint Fl_Double_Window_maximize_active(IntPtr window);
    
    /// <summary>Call the Fl_Double_Window_flush function</summary>
    /// <param name="window"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Double_Window_flush", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Double_Window_flush(IntPtr window);
    
    /// <summary>Call the Fl_Menu_Window_new function</summary>
    /// <param name="x"></param>
    /// <param name="y"></param>
    /// <param name="width"></param>
    /// <param name="height"></param>
    /// <param name="titlePointer">
    /// <inheritdoc cref="Fl_Widget_new" path="/param[@name='labelPointer']" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Menu_Window_new", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Menu_Window_new(int x, int y, int width, int height, IntPtr titlePointer);
    
    /// <summary>Call the Fl_Menu_Window_x function</summary>
    /// <param name="widget">
    /// Pointer to <c>Fl_Menu_Window</c>
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Menu_Window_x", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Menu_Window_x(IntPtr widget);
    
    /// <summary>Call the Fl_Menu_Window_y function</summary>
    /// <param name="widget">
    /// Pointer to <c>Fl_Menu_Window</c>
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Menu_Window_y", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Menu_Window_y(IntPtr widget);
    
    /// <summary>Call the Fl_Menu_Window_width function</summary>
    /// <param name="widget">
    /// Pointer to <c>Fl_Menu_Window</c>
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Menu_Window_width", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Menu_Window_width(IntPtr widget);
    
    /// <summary>Call the Fl_Menu_Window_height function</summary>
    /// <param name="widget">
    /// Pointer to <c>Fl_Menu_Window</c>
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Menu_Window_height", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Menu_Window_height(IntPtr widget);
    
    /// <summary>Call the Fl_Menu_Window_label function</summary>
    /// <param name="widget">
    /// Pointer to <c>Fl_Menu_Window</c>
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Menu_Window_label", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Menu_Window_label(IntPtr widget);
    
    /// <summary>Call the Fl_Menu_Window_set_label function</summary>
    /// <param name="widget"></param>
    /// <param name="labelPointer">
    /// <inheritdoc cref="Fl_Widget_new" path="/param[@name='labelPointer']" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Menu_Window_set_label", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Menu_Window_set_label(IntPtr widget, IntPtr labelPointer);
    
    /// <summary>Call the Fl_Menu_Window_redraw function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Menu_Window_new" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Menu_Window_redraw", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Menu_Window_redraw(IntPtr widget);
    
    /// <summary>Call the Fl_Menu_Window_show function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Menu_Window_new" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Menu_Window_show", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Menu_Window_show(IntPtr widget);
    
    /// <summary>Call the Fl_Menu_Window_hide function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Menu_Window_new" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Menu_Window_hide", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Menu_Window_hide(IntPtr widget);
    
    /// <summary>Call the Fl_Menu_Window_activate function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Menu_Window_new" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Menu_Window_activate", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Menu_Window_activate(IntPtr widget);
    
    /// <summary>Call the Fl_Menu_Window_deactivate function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Menu_Window_new" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Menu_Window_deactivate", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Menu_Window_deactivate(IntPtr widget);
    
    /// <summary>Call the Fl_Menu_Window_redraw_label function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Menu_Window_new" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Menu_Window_redraw_label", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Menu_Window_redraw_label(IntPtr widget);
    
    /// <summary>Call the Fl_Menu_Window_resize function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Menu_Window_new" path="/returns" />
    /// </param>
    /// <param name="x"></param>
    /// <param name="y"></param>
    /// <param name="width"></param>
    /// <param name="height"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Menu_Window_resize", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Menu_Window_resize(IntPtr widget, int x, int y, int width, int height);
    
    /// <summary>Call the Fl_Menu_Window_widget_resize function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Menu_Window_new" path="/returns" />
    /// </param>
    /// <param name="x"></param>
    /// <param name="y"></param>
    /// <param name="width"></param>
    /// <param name="height"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Menu_Window_widget_resize", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Menu_Window_widget_resize(IntPtr widget, int x, int y, int width, int height);
    
    /// <summary>Call the Fl_Menu_Window_tooltip function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Menu_Window_new" path="/returns" />
    /// </param>
    /// <returns>
    /// <inheritdoc cref="Fl_Menu_Window_new" path="/param[@name='labelPointer']" />
    /// </returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Menu_Window_tooltip", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Menu_Window_tooltip(IntPtr widget);
    
    /// <summary>Call the Fl_Menu_Window_set_tooltip function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Menu_Window_new" path="/returns" />
    /// </param>
    /// <param name="tooltipPointer">
    /// <inheritdoc cref="Fl_Menu_Window_new" path="/param[@name='labelPointer']" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Menu_Window_set_tooltip", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Menu_Window_set_tooltip(IntPtr widget, IntPtr tooltipPointer);
    
    /// <summary>Call the Fl_Menu_Window_get_type function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Menu_Window_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Menu_Window_get_type", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Menu_Window_get_type(IntPtr widget);
    
    /// <summary>Call the Fl_Menu_Window_set_type function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Menu_Window_new" path="/returns" />
    /// </param>
    /// <param name="type"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Menu_Window_set_type", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Menu_Window_set_type(IntPtr widget, int type);
    
    /// <summary>Call the Fl_Menu_Window_color function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Menu_Window_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Menu_Window_color", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern uint Fl_Menu_Window_color(IntPtr widget);
    
    /// <summary>Call the Fl_Menu_Window_set_color function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Menu_Window_new" path="/returns" />
    /// </param>
    /// <param name="color"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Menu_Window_set_color", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Menu_Window_set_color(IntPtr widget, uint color);
    
    /// <summary>Call the Fl_Menu_Window_measure_label function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Menu_Window_new" path="/returns" />
    /// </param>
    /// <param name="width"></param>
    /// <param name="height"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Menu_Window_measure_label", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Menu_Window_measure_label(IntPtr widget, ref int width, ref int height);
    
    /// <summary>Call the Fl_Menu_Window_label_color function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Menu_Window_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Menu_Window_label_color", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern uint Fl_Menu_Window_label_color(IntPtr widget);
    
    /// <summary>Call the Fl_Menu_Window_set_label_color function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Menu_Window_new" path="/returns" />
    /// </param>
    /// <param name="color">
    /// <inheritdoc cref="Fl_Menu_Window_label_color" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Menu_Window_set_label_color", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Menu_Window_set_label_color(IntPtr widget, uint color);
    
    /// <summary>Call the Fl_Menu_Window_label_font function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Menu_Window_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Menu_Window_label_font", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Menu_Window_label_font(IntPtr widget);
    
    /// <summary>Call the Fl_Menu_Window_set_label_font function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Menu_Window_new" path="/returns" />
    /// </param>
    /// <param name="fontIndex"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Menu_Window_set_label_font", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Menu_Window_set_label_font(IntPtr widget, int fontIndex);
    
    /// <summary>Call the Fl_Menu_Window_label_size function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Menu_Window_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Menu_Window_label_size", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Menu_Window_label_size(IntPtr widget);
    
    /// <summary>Call the Fl_Menu_Window_set_label_size function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Menu_Window_new" path="/returns" />
    /// </param>
    /// <param name="size">
    /// <inheritdoc cref="Fl_Menu_Window_label_size" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Menu_Window_set_label_size", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Menu_Window_set_label_size(IntPtr widget, int size);
    
    /// <summary>Call the Fl_Menu_Window_label_type function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Menu_Window_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Menu_Window_label_type", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Menu_Window_label_type(IntPtr widget);
    
    /// <summary>Call the Fl_Menu_Window_set_label_type function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Menu_Window_new" path="/returns" />
    /// </param>
    /// <param name="size">
    /// <inheritdoc cref="Fl_Menu_Window_label_type" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Menu_Window_set_label_type", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Menu_Window_set_label_type(IntPtr widget, int size);
    
    /// <summary>Call the Fl_Menu_Window_box function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Menu_Window_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Menu_Window_box", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Menu_Window_box(IntPtr widget);
    
    /// <summary>Call the Fl_Menu_Window_set_box function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Menu_Window_new" path="/returns" />
    /// </param>
    /// <param name="type"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Menu_Window_set_box", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Menu_Window_set_box(IntPtr widget, int type);
    
    /// <summary>Call the Fl_Menu_Window_changed function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Menu_Window_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Menu_Window_changed", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Menu_Window_changed(IntPtr widget);
    
    /// <summary>Call the Fl_Menu_Window_set_changed function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Menu_Window_new" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Menu_Window_set_changed", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Menu_Window_set_changed(IntPtr widget);
    
    /// <summary>Call the Fl_Menu_Window_clear_changed function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Menu_Window_new" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Menu_Window_clear_changed", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Menu_Window_clear_changed(IntPtr widget);
    
    /// <summary>Call the Fl_Menu_Window_align function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Menu_Window_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Menu_Window_align", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Menu_Window_align(IntPtr widget);
    
    /// <summary>Call the Fl_Menu_Window_set_align function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Menu_Window_new" path="/returns" />
    /// </param>
    /// <param name="type"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Menu_Window_set_align", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Menu_Window_set_align(IntPtr widget, int type);
    
    /// <summary>Call the Fl_Menu_Window_delete function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Menu_Window_new" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Menu_Window_delete", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Menu_Window_delete(IntPtr widget);
    
    /// <summary>Call the Fl_Menu_Window_set_image function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Menu_Window_new" path="/returns" />
    /// </param>
    /// <param name="imagePointer"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Menu_Window_set_image", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Menu_Window_set_image(IntPtr widget, IntPtr imagePointer);
    
    /// <summary>Call the Fl_Menu_Window_handle function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Menu_Window_new" path="/returns" />
    /// </param>
    /// <param name="callback"></param>
    /// <param name="data"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Menu_Window_handle", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Menu_Window_handle(IntPtr widget, FltkWidgetHandleCallback callback, IntPtr data);
    
    /// <summary>Call the Fl_Menu_Window_handle_event function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Menu_Window_new" path="/returns" />
    /// </param>
    /// <param name="eventType"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Menu_Window_handle_event", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Menu_Window_handle_event(IntPtr widget, int eventType);
    
    /// <summary>Call the Fl_Menu_Window_draw function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Menu_Window_new" path="/returns" />
    /// </param>
    /// <param name="callback"></param>
    /// <param name="data"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Menu_Window_draw", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Menu_Window_draw(IntPtr widget, FltkWidgetCallback callback, IntPtr data);
    
    /// <summary>Call the Fl_Menu_Window_resize_callback function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Menu_Window_new" path="/returns" />
    /// </param>
    /// <param name="callback"></param>
    /// <param name="data"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Menu_Window_resize_callback", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Menu_Window_resize_callback(IntPtr widget, FltkWidgetResizeCallback callback, IntPtr data);
    
    /// <summary>Call the Fl_Menu_Window_set_when function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Menu_Window_new" path="/returns" />
    /// </param>
    /// <param name="value"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Menu_Window_set_when", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Menu_Window_set_when(IntPtr widget, int value);
    
    /// <summary>Call the Fl_Menu_Window_when function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Menu_Window_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Menu_Window_when", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Menu_Window_when(IntPtr widget);
    
    /// <summary>Call the Fl_Menu_Window_image function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Menu_Window_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Menu_Window_image", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Menu_Window_image(IntPtr widget);
    
    /// <summary>Call the Fl_Menu_Window_parent function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Menu_Window_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Menu_Window_parent", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Menu_Window_parent(IntPtr widget);
    
    /// <summary>Call the Fl_Menu_Window_selection_color function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Menu_Window_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Menu_Window_selection_color", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern uint Fl_Menu_Window_selection_color(IntPtr widget);
    
    /// <summary>Call the Fl_Menu_Window_set_selection_color function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Menu_Window_new" path="/returns" />
    /// </param>
    /// <param name="color"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Menu_Window_set_selection_color", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Menu_Window_set_selection_color(IntPtr widget, uint color);
    
    /// <summary>Call the Fl_Menu_Window_inside function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Menu_Window_new" path="/returns" />
    /// </param>
    /// <param name="other"></param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Menu_Window_inside", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Menu_Window_inside(IntPtr widget, IntPtr other);
    
    /// <summary>Call the Fl_Menu_Window_window function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Menu_Window_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Menu_Window_window", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Menu_Window_window(IntPtr widget);
    
    /// <summary>Call the Fl_Menu_Window_top_window function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Menu_Window_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Menu_Window_top_window", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Menu_Window_top_window(IntPtr widget);
    
    /// <summary>Call the Fl_Menu_Window_takes_events function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Menu_Window_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Menu_Window_takes_events", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Menu_Window_takes_events(IntPtr widget);
    
    /// <summary>Call the Fl_Menu_Window_user_data function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Menu_Window_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Menu_Window_user_data", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Menu_Window_user_data(IntPtr widget);
    
    /// <summary>Call the Fl_Menu_Window_take_focus function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Menu_Window_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Menu_Window_take_focus", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Menu_Window_take_focus(IntPtr widget);
    
    /// <summary>Call the Fl_Menu_Window_set_visible_focus function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Menu_Window_new" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Menu_Window_set_visible_focus", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Menu_Window_set_visible_focus(IntPtr widget);
    
    /// <summary>Call the Fl_Menu_Window_clear_visible_focus function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Menu_Window_new" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Menu_Window_clear_visible_focus", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Menu_Window_clear_visible_focus(IntPtr widget);
    
    /// <summary>Call the Fl_Menu_Window_visible_focus function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Menu_Window_new" path="/returns" />
    /// </param>
    /// <param name="value"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Menu_Window_visible_focus", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Menu_Window_visible_focus(IntPtr widget, int value);
    
    /// <summary>Call the Fl_Menu_Window_has_visible_focus function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Menu_Window_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Menu_Window_has_visible_focus", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern uint Fl_Menu_Window_has_visible_focus(IntPtr widget);
    
    /// <summary>Call the Fl_Menu_Window_set_user_data function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Menu_Window_new" path="/returns" />
    /// </param>
    /// <param name="data"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Menu_Window_set_user_data", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Menu_Window_set_user_data(IntPtr widget, IntPtr data);
    
    /// <summary>Call the Fl_Menu_Window_draw_data function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Menu_Window_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Menu_Window_draw_data", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Menu_Window_draw_data(IntPtr widget);
    
    /// <summary>Call the Fl_Menu_Window_handle_data function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Menu_Window_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Menu_Window_handle_data", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Menu_Window_handle_data(IntPtr widget);
    
    /// <summary>Call the Fl_Menu_Window_set_draw_data function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Menu_Window_new" path="/returns" />
    /// </param>
    /// <param name="data"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Menu_Window_set_draw_data", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Menu_Window_set_draw_data(IntPtr widget, IntPtr data);
    
    /// <summary>Call the Fl_Menu_Window_set_handle_data function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Menu_Window_new" path="/returns" />
    /// </param>
    /// <param name="data"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Menu_Window_set_handle_data", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Menu_Window_set_handle_data(IntPtr widget, IntPtr data);
    
    /// <summary>Call the Fl_Menu_Window_damage function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Menu_Window_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Menu_Window_damage", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern char Fl_Menu_Window_damage(IntPtr widget);
    
    /// <summary>Call the Fl_Menu_Window_set_damage function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Menu_Window_new" path="/returns" />
    /// </param>
    /// <param name="flag"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Menu_Window_set_damage", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Menu_Window_set_damage(IntPtr widget, char flag);
    
    /// <summary>Call the Fl_Menu_Window_set_damage_area function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Menu_Window_new" path="/returns" />
    /// </param>
    /// <param name="flag"></param>
    /// <param name="x"></param>
    /// <param name="y"></param>
    /// <param name="width"></param>
    /// <param name="height"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Menu_Window_set_damage_area", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Menu_Window_set_damage_area(IntPtr widget, char flag, int x, int y, int width, int height);
    
    /// <summary>Call the Fl_Menu_Window_clear_damage function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Menu_Window_new" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Menu_Window_clear_damage", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Menu_Window_clear_damage(IntPtr widget);
    
    /// <summary>Call the Fl_Menu_Window_as_window function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Menu_Window_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Menu_Window_as_window", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Menu_Window_as_window(IntPtr widget);
    
    /// <summary>Call the Fl_Menu_Window_as_group function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Menu_Window_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Menu_Window_as_group", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Menu_Window_as_group(IntPtr widget);
    
    /// <summary>Call the Fl_Menu_Window_set_deimage function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Menu_Window_new" path="/returns" />
    /// </param>
    /// <param name="imagePointer"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Menu_Window_set_deimage", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Menu_Window_set_deimage(IntPtr widget, IntPtr imagePointer);
    
    /// <summary>Call the Fl_Menu_Window_deimage function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Menu_Window_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Menu_Window_deimage", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Menu_Window_deimage(IntPtr widget);
    
    /// <summary>Call the Fl_Menu_Window_set_callback function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Menu_Window_new" path="/returns" />
    /// </param>
    /// <param name="callback"></param>
    /// <param name="data"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Menu_Window_set_callback", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Menu_Window_set_callback(IntPtr widget, FltkWidgetCallback callback, IntPtr data);
    
    /// <summary>Call the Fl_Menu_Window_set_deleter function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Menu_Window_new" path="/returns" />
    /// </param>
    /// <param name="callback"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Menu_Window_set_deleter", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Menu_Window_set_deleter(IntPtr widget, Action<Action> callback);
    
    /// <summary>Call the Fl_Menu_Window_visible function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Menu_Window_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Menu_Window_visible", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Menu_Window_visible(IntPtr widget);
    
    /// <summary>Call the Fl_Menu_Window_visible_r function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Menu_Window_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Menu_Window_visible_r", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Menu_Window_visible_r(IntPtr widget);
    
    /// <summary>Call the Fl_Menu_Window_active function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Menu_Window_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Menu_Window_active", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern uint Fl_Menu_Window_active(IntPtr widget);
    
    /// <summary>Call the Fl_Menu_Window_active_r function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Menu_Window_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Menu_Window_active_r", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Menu_Window_active_r(IntPtr widget);
    
    /// <summary>Call the Fl_Menu_Window_callback function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Menu_Window_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Menu_Window_callback", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern FltkWidgetCallback Fl_Menu_Window_callback(IntPtr widget);
    
    /// <summary>Call the Fl_Menu_Window_set_deletion_callback function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Menu_Window_new" path="/returns" />
    /// </param>
    /// <param name="callback"></param>
    /// <param name="data"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Menu_Window_set_deletion_callback", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Menu_Window_set_deletion_callback(IntPtr widget, FltkWidgetCallback callback, IntPtr data);
    
    /// <summary>Call the Fl_Menu_Window_from_dyn_ptr function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Widget_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Menu_Window_from_dyn_ptr", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Menu_Window_from_dyn_ptr(IntPtr widget);
    
    /// <summary>Call the Fl_Menu_Window_from_derived_dyn_ptr function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Widget_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Menu_Window_from_derived_dyn_ptr", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Menu_Window_from_derived_dyn_ptr(IntPtr widget);
    
    /// <summary>Call the Fl_Menu_Window_super_draw function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Widget_new" path="/returns" />
    /// </param>
    /// <param name="flag"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Menu_Window_super_draw", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Menu_Window_super_draw(IntPtr widget, int flag);
    
    /// <summary>Call the Fl_Menu_Window_super_draw_first function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Widget_new" path="/returns" />
    /// </param>
    /// <param name="flag"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Menu_Window_super_draw_first", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Menu_Window_super_draw_first(IntPtr widget, int flag);
    
    /// <summary>Call the Fl_Menu_Window_super_handle_first function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Widget_new" path="/returns" />
    /// </param>
    /// <param name="flag"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Menu_Window_super_handle_first", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Menu_Window_super_handle_first(IntPtr widget, int flag);
    
    /// <summary>Call the Fl_Menu_Window_begin function</summary>
    /// <param name="group">
    /// <inheritdoc cref="Fl_Menu_Window_new" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Menu_Window_begin", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Menu_Window_begin(IntPtr group);
    
    /// <summary>Call the Fl_Menu_Window_end function</summary>
    /// <param name="group">
    /// <inheritdoc cref="Fl_Menu_Window_new" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Menu_Window_end", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Menu_Window_end(IntPtr group);
    
    /// <summary>
    /// Find the index of a widget in this group
    /// </summary>
    /// <param name="group">
    /// <inheritdoc cref="Fl_Menu_Window_new" path="/returns" />
    /// </param>
    /// <param name="widget"></param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Menu_Window_find", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Menu_Window_find(IntPtr group, IntPtr widget);
    
    /// <summary>
    /// Add a widget to this group
    /// </summary>
    /// <param name="group">
    /// <inheritdoc cref="Fl_Menu_Window_new" path="/returns" />
    /// </param>
    /// <param name="widget"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Menu_Window_add", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Menu_Window_add(IntPtr group, IntPtr widget);
    
    /// <summary>
    /// Insert the provided widget into this group at a specific index.
    /// </summary>
    /// <param name="group">
    /// <inheritdoc cref="Fl_Menu_Window_new" path="/returns" />
    /// </param>
    /// <param name="widget"></param>
    /// <param name="index"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Menu_Window_insert", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Menu_Window_insert(IntPtr group, IntPtr widget, int index);
    
    /// <summary>
    /// Remove a widget from the group provided.
    /// </summary>
    /// <param name="group">
    /// <inheritdoc cref="Fl_Menu_Window_new" path="/returns" />
    /// </param>
    /// <param name="widget"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Menu_Window_remove", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Menu_Window_remove(IntPtr group, IntPtr widget);
    
    /// <summary>
    /// Remove a widget (by the index) from the group provided.
    /// </summary>
    /// <param name="group">
    /// <inheritdoc cref="Fl_Menu_Window_new" path="/returns" />
    /// </param>
    /// <param name="widgetIndex"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Menu_Window_remove_by_index", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Menu_Window_remove_by_index(IntPtr group, int widgetIndex);
    
    /// <summary>
    /// Remove all child widgets from this group
    /// </summary>
    /// <param name="group">
    /// <inheritdoc cref="Fl_Menu_Window_new" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Menu_Window_clear", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Menu_Window_clear(IntPtr group);
    
    /// <summary>
    /// Get the amount of child widgets for this group
    /// </summary>
    /// <param name="group">
    /// <inheritdoc cref="Fl_Menu_Window_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Menu_Window_children", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Menu_Window_children(IntPtr group);
    
    /// <summary>Call the Fl_Menu_Window_child function</summary>
    /// <param name="group">
    /// <inheritdoc cref="Fl_Menu_Window_new" path="/returns" />
    /// </param>
    /// <param name="index"></param>
    /// <returns>
    /// <inheritdoc cref="Fl_Widget_new" path="/returns" />
    /// </returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Menu_Window_child", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Menu_Window_child(IntPtr group, int index);
    
    /// <summary>Call the Fl_Menu_Window_resizable function</summary>
    /// <param name="group">
    /// <inheritdoc cref="Fl_Menu_Window_new" path="/returns" />
    /// </param>
    /// <param name="resizableWidgetPointer"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Menu_Window_resizable", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Menu_Window_resizable(IntPtr group, IntPtr resizableWidgetPointer);
    
    /// <summary>Call the Fl_Menu_Window_set_clip_children function</summary>
    /// <param name="group">
    /// <inheritdoc cref="Fl_Menu_Window_new" path="/returns" />
    /// </param>
    /// <param name="clipValue"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Menu_Window_set_clip_children", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Menu_Window_set_clip_children(IntPtr group, int clipValue);
    
    /// <summary>Call the Fl_Menu_Window_clip_children function</summary>
    /// <param name="group">
    /// <inheritdoc cref="Fl_Menu_Window_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Menu_Window_clip_children", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Menu_Window_clip_children(IntPtr group);
    
    /// <summary>Call the Fl_Menu_Window_init_sizes function</summary>
    /// <param name="group">
    /// <inheritdoc cref="Fl_Menu_Window_new" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Menu_Window_init_sizes", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Menu_Window_init_sizes(IntPtr group);
    
    /// <summary>Call the Fl_Menu_Window_draw_child function</summary>
    /// <param name="group">
    /// <inheritdoc cref="Fl_Menu_Window_new" path="/returns" />
    /// </param>
    /// <param name="childWidgetPointer"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Menu_Window_draw_child", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Menu_Window_draw_child(IntPtr group, IntPtr childWidgetPointer);
    
    /// <summary>Call the Fl_Menu_Window_update_child function</summary>
    /// <param name="group">
    /// <inheritdoc cref="Fl_Menu_Window_new" path="/returns" />
    /// </param>
    /// <param name="childWidgetPointer"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Menu_Window_update_child", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Menu_Window_update_child(IntPtr group, IntPtr childWidgetPointer);
    
    /// <summary>Call the Fl_Menu_Window_draw_outside_label function</summary>
    /// <param name="group">
    /// <inheritdoc cref="Fl_Menu_Window_new" path="/returns" />
    /// </param>
    /// <param name="childWidgetPointer"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Menu_Window_draw_outside_label", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Menu_Window_draw_outside_label(IntPtr group, IntPtr childWidgetPointer);
    
    /// <summary>Call the Fl_Menu_Window_draw_children function</summary>
    /// <param name="group">
    /// <inheritdoc cref="Fl_Menu_Window_new" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Menu_Window_draw_children", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Menu_Window_draw_children(IntPtr group);
    
    /// <summary>Call the Fl_Menu_Window_make_modal function</summary>
    /// <param name="window">
    /// <inheritdoc cref="Fl_Menu_Window_new" path="/returns" />
    /// </param>
    /// <param name="state"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Menu_Window_make_modal", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Menu_Window_make_modal(IntPtr window, [MarshalAs(UnmanagedType.U4)] bool state);
    
    /// <summary>Call the Fl_Menu_Window_fullscreen function</summary>
    /// <param name="window">
    /// <inheritdoc cref="Fl_Menu_Window_new" path="/returns" />
    /// </param>
    /// <param name="state"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Menu_Window_fullscreen", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Menu_Window_fullscreen(IntPtr window, [MarshalAs(UnmanagedType.U4)] bool state);
    
    /// <summary>Call the Fl_Menu_Window_make_current function</summary>
    /// <param name="window">
    /// <inheritdoc cref="Fl_Menu_Window_new" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Menu_Window_make_current", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Menu_Window_make_current(IntPtr window);
    
    /// <summary>Call the Fl_Menu_Window_set_icon function</summary>
    /// <param name="window">
    /// <inheritdoc cref="Fl_Menu_Window_new" path="/returns" />
    /// </param>
    /// <param name="imagePointer">
    /// <inheritdoc cref="Fl_Image_new" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Menu_Window_set_icon", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Menu_Window_set_icon(IntPtr window, IntPtr imagePointer);
    
    /// <summary>Call the Fl_Menu_Window_icon function</summary>
    /// <param name="window">
    /// <inheritdoc cref="Fl_Menu_Window_new" path="/returns" />
    /// </param>
    /// <returns>
    /// <inheritdoc cref="Fl_Image_new" path="/returns" />
    /// </returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Menu_Window_icon", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Menu_Window_icon(IntPtr window);
    
    /// <summary>Call the Fl_Menu_Window_set_cursor function</summary>
    /// <param name="window">
    /// <inheritdoc cref="Fl_Menu_Window_new" path="/returns" />
    /// </param>
    /// <param name="cursor"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Menu_Window_set_cursor", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Menu_Window_set_cursor(IntPtr window, int cursor);
    
    /// <summary>Call the Fl_Menu_Window_shown function</summary>
    /// <param name="window">
    /// <inheritdoc cref="Fl_Menu_Window_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Menu_Window_shown", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Menu_Window_shown(IntPtr window);
    
    /// <summary>Call the Fl_Menu_Window_raw_handle function</summary>
    /// <param name="window">
    /// <inheritdoc cref="Fl_Menu_Window_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Menu_Window_raw_handle", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Menu_Window_raw_handle(IntPtr window);
    
    /// <summary>Call the Fl_Menu_Window_set_border function</summary>
    /// <param name="window">
    /// <inheritdoc cref="Fl_Menu_Window_new" path="/returns" />
    /// </param>
    /// <param name="flag"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Menu_Window_set_border", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Menu_Window_set_border(IntPtr window, int flag);
    
    /// <summary>Call the Fl_Menu_Window_border function</summary>
    /// <param name="window">
    /// <inheritdoc cref="Fl_Menu_Window_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Menu_Window_border", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Menu_Window_border(IntPtr window);
    
    /// <summary>
    /// Get the window region. Will only work on X11
    /// </summary>
    /// <param name="window">
    /// <inheritdoc cref="Fl_Menu_Window_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Menu_Window_region", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Menu_Window_region(IntPtr window);
    
    /// <summary>
    /// Set the window region. Will only work on X11
    /// </summary>
    /// <param name="window">
    /// <inheritdoc cref="Fl_Menu_Window_new" path="/returns" />
    /// </param>
    /// <param name="region"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Menu_Window_set_region", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Menu_Window_set_region(IntPtr window, IntPtr region);
    
    /// <summary>Call the Fl_Menu_Window_iconize function</summary>
    /// <param name="window">
    /// <inheritdoc cref="Fl_Menu_Window_new" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Menu_Window_iconize", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Menu_Window_iconize(IntPtr window);
    
    /// <summary>Call the Fl_Menu_Window_fullscreen_active function</summary>
    /// <param name="window">
    /// <inheritdoc cref="Fl_Menu_Window_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Menu_Window_fullscreen_active", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Menu_Window_fullscreen_active(IntPtr window);
    
    /// <summary>Call the Fl_Menu_Window_free_position function</summary>
    /// <param name="window">
    /// <inheritdoc cref="Fl_Menu_Window_new" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Menu_Window_free_position", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Menu_Window_free_position(IntPtr window);
    
    /// <summary>Call the Fl_Menu_Window_decorated_w function</summary>
    /// <param name="window">
    /// <inheritdoc cref="Fl_Menu_Window_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Menu_Window_decorated_w", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Menu_Window_decorated_w(IntPtr window);
    
    /// <summary>Call the Fl_Menu_Window_decorated_h function</summary>
    /// <param name="window">
    /// <inheritdoc cref="Fl_Menu_Window_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Menu_Window_decorated_h", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Menu_Window_decorated_h(IntPtr window);
    
    /// <summary>Call the Fl_Menu_Window_size_range function</summary>
    /// <param name="window">
    /// <inheritdoc cref="Fl_Menu_Window_new" path="/returns" />
    /// </param>
    /// <param name="minimumWidth"></param>
    /// <param name="minimumHeight"></param>
    /// <param name="maximumWidth"></param>
    /// <param name="maximumHeight"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Menu_Window_size_range", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Menu_Window_size_range(IntPtr window, int minimumWidth, int minimumHeight, int maximumWidth, int maximumHeight);
    
    /// <summary>Call the Fl_Menu_Window_hotspot function</summary>
    /// <param name="window">
    /// <inheritdoc cref="Fl_Menu_Window_new" path="/returns" />
    /// </param>
    /// <param name="widget"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Menu_Window_hotspot", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Menu_Window_hotspot(IntPtr window, IntPtr widget);
    
    /// <summary>Call the Fl_Menu_Window_set_shape function</summary>
    /// <param name="window">
    /// <inheritdoc cref="Fl_Menu_Window_new" path="/returns" />
    /// </param>
    /// <param name="imagePtr"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Menu_Window_set_shape", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Menu_Window_set_shape(IntPtr window, IntPtr imagePtr);
    
    /// <summary>Call the Fl_Menu_Window_shape function</summary>
    /// <param name="window">
    /// <inheritdoc cref="Fl_Menu_Window_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Menu_Window_shape", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Menu_Window_shape(IntPtr window);
    
    /// <summary>Call the Fl_Menu_Window_x_root function</summary>
    /// <param name="window">
    /// <inheritdoc cref="Fl_Menu_Window_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Menu_Window_x_root", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Menu_Window_x_root(IntPtr window);
    
    /// <summary>Call the Fl_Menu_Window_y_root function</summary>
    /// <param name="window">
    /// <inheritdoc cref="Fl_Menu_Window_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Menu_Window_y_root", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Menu_Window_y_root(IntPtr window);
    
    /// <summary>Call the Fl_Menu_Window_set_cursor_image function</summary>
    /// <param name="window">
    /// <inheritdoc cref="Fl_Menu_Window_new" path="/returns" />
    /// </param>
    /// <param name="imagePtr"></param>
    /// <param name="hotX"></param>
    /// <param name="hotY"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Menu_Window_set_cursor_image", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Menu_Window_set_cursor_image(IntPtr window, IntPtr imagePtr, int hotX, int hotY);
    
    /// <summary>Call the Fl_Menu_Window_default_cursor function</summary>
    /// <param name="window">
    /// <inheritdoc cref="Fl_Menu_Window_new" path="/returns" />
    /// </param>
    /// <param name="cursor"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Menu_Window_default_cursor", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Menu_Window_default_cursor(IntPtr window, int cursor);
    
    /// <summary>Call the Fl_Menu_Window_screen_num function</summary>
    /// <param name="window">
    /// <inheritdoc cref="Fl_Menu_Window_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Menu_Window_screen_num", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Menu_Window_screen_num(IntPtr window);
    
    /// <summary>Call the Fl_Menu_Window_set_screen_num function</summary>
    /// <param name="window">
    /// <inheritdoc cref="Fl_Menu_Window_new" path="/returns" />
    /// </param>
    /// <param name="screenIndex"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Menu_Window_set_screen_num", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Menu_Window_set_screen_num(IntPtr window, int screenIndex);
    
    /// <summary>Call the Fl_Menu_Window_wait_for_expose function</summary>
    /// <param name="window">
    /// <inheritdoc cref="Fl_Menu_Window_new" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Menu_Window_wait_for_expose", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Menu_Window_wait_for_expose(IntPtr window);
    
    /// <summary>Call the Fl_Menu_Window_set_alpha function</summary>
    /// <param name="window">
    /// <inheritdoc cref="Fl_Menu_Window_new" path="/returns" />
    /// </param>
    /// <param name="value"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Menu_Window_set_alpha", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Menu_Window_set_alpha(IntPtr window, char value);
    
    /// <summary>Call the Fl_Menu_Window_alpha function</summary>
    /// <param name="window">
    /// <inheritdoc cref="Fl_Menu_Window_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Menu_Window_alpha", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern char Fl_Menu_Window_alpha(IntPtr window);
    
    /// <summary>Call the Fl_Menu_Window_force_position function</summary>
    /// <param name="window">
    /// <inheritdoc cref="Fl_Menu_Window_new" path="/returns" />
    /// </param>
    /// <param name="flag"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Menu_Window_force_position", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Menu_Window_force_position(IntPtr window, int flag);
    
    /// <summary>Call the Fl_Menu_Window_default_xclass function</summary>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Menu_Window_default_xclass", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Menu_Window_default_xclass();
    
    /// <summary>Call the Fl_Menu_Window_xclass function</summary>
    /// <param name="window">
    /// <inheritdoc cref="Fl_Menu_Window_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Menu_Window_xclass", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Menu_Window_xclass(IntPtr window);
    
    /// <summary>Call the Fl_Menu_Window_set_default_xclass function</summary>
    /// <param name="s"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Menu_Window_set_default_xclass", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Menu_Window_set_default_xclass(IntPtr s);
    
    /// <summary>Call the Fl_Menu_Window_set_xclass function</summary>
    /// <param name="window">
    /// <inheritdoc cref="Fl_Menu_Window_new" path="/returns" />
    /// </param>
    /// <param name="s"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Menu_Window_set_xclass", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Menu_Window_set_xclass(IntPtr window, IntPtr s);
    
    /// <summary>Call the Fl_Menu_Window_clear_modal_states function</summary>
    /// <param name="window">
    /// <inheritdoc cref="Fl_Menu_Window_new" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Menu_Window_clear_modal_states", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Menu_Window_clear_modal_states(IntPtr window);
    
    /// <summary>Call the Fl_Menu_Window_set_override function</summary>
    /// <param name="window">
    /// <inheritdoc cref="Fl_Menu_Window_new" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Menu_Window_set_override", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Menu_Window_set_override(IntPtr window);
    
    /// <summary>Call the Fl_Menu_Window_override function</summary>
    /// <param name="window">
    /// <inheritdoc cref="Fl_Menu_Window_new" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Menu_Window_override", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Menu_Window_override(IntPtr window);
    
    /// <summary>Call the Fl_Menu_Window_icon_label function</summary>
    /// <param name="window">
    /// <inheritdoc cref="Fl_Menu_Window_new" path="/returns" />
    /// </param>
    /// <returns>
    /// <inheritdoc cref="Fl_Menu_Window_new" path="/returns" />
    /// </returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Menu_Window_icon_label", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Menu_Window_icon_label(IntPtr window);
    
    /// <summary>Call the Fl_Menu_Window_set_icon_label function</summary>
    /// <param name="window">
    /// <inheritdoc cref="Fl_Menu_Window_new" path="/returns" />
    /// </param>
    /// <param name="labelPointer">
    /// <inheritdoc cref="Fl_Widget_new" path="/param[@name='labelPointer']" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Menu_Window_set_icon_label", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Menu_Window_set_icon_label(IntPtr window, IntPtr labelPointer);
    
    /// <summary>Call the Fl_Menu_Window_set_icons function</summary>
    /// <param name="window">
    /// <inheritdoc cref="Fl_Menu_Window_new" path="/returns" />
    /// </param>
    /// <param name="imageArrayPtr"></param>
    /// <param name="imageArrayLength"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Menu_Window_set_icons", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Menu_Window_set_icons(IntPtr window, ref IntPtr[] imageArrayPtr, int imageArrayLength);
    
    /// <summary>Call the Fl_Menu_Window_maximize function</summary>
    /// <param name="window">
    /// <inheritdoc cref="Fl_Menu_Window_new" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Menu_Window_maximize", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Menu_Window_maximize(IntPtr window);
    
    /// <summary>Call the Fl_Menu_Window_un_maximize function</summary>
    /// <param name="window">
    /// <inheritdoc cref="Fl_Menu_Window_new" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Menu_Window_un_maximize", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Menu_Window_un_maximize(IntPtr window);
    
    /// <summary>Call the Fl_Menu_Window_maximize_active function</summary>
    /// <param name="window">
    /// <inheritdoc cref="Fl_Menu_Window_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Menu_Window_maximize_active", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern uint Fl_Menu_Window_maximize_active(IntPtr window);
    
    /// <summary>Call the Fl_Overlay_Window_new function</summary>
    /// <param name="x"></param>
    /// <param name="y"></param>
    /// <param name="width"></param>
    /// <param name="height"></param>
    /// <param name="titlePointer">
    /// <inheritdoc cref="Fl_Widget_new" path="/param[@name='labelPointer']" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Overlay_Window_new", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Overlay_Window_new(int x, int y, int width, int height, IntPtr titlePointer);
    
    /// <summary>Call the Fl_Overlay_Window_x function</summary>
    /// <param name="widget">
    /// Pointer to <c>Fl_Overlay_Window</c>
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Overlay_Window_x", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Overlay_Window_x(IntPtr widget);
    
    /// <summary>Call the Fl_Overlay_Window_y function</summary>
    /// <param name="widget">
    /// Pointer to <c>Fl_Overlay_Window</c>
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Overlay_Window_y", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Overlay_Window_y(IntPtr widget);
    
    /// <summary>Call the Fl_Overlay_Window_width function</summary>
    /// <param name="widget">
    /// Pointer to <c>Fl_Overlay_Window</c>
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Overlay_Window_width", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Overlay_Window_width(IntPtr widget);
    
    /// <summary>Call the Fl_Overlay_Window_height function</summary>
    /// <param name="widget">
    /// Pointer to <c>Fl_Overlay_Window</c>
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Overlay_Window_height", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Overlay_Window_height(IntPtr widget);
    
    /// <summary>Call the Fl_Overlay_Window_label function</summary>
    /// <param name="widget">
    /// Pointer to <c>Fl_Overlay_Window</c>
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Overlay_Window_label", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Overlay_Window_label(IntPtr widget);
    
    /// <summary>Call the Fl_Overlay_Window_set_label function</summary>
    /// <param name="widget"></param>
    /// <param name="labelPointer">
    /// <inheritdoc cref="Fl_Widget_new" path="/param[@name='labelPointer']" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Overlay_Window_set_label", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Overlay_Window_set_label(IntPtr widget, IntPtr labelPointer);
    
    /// <summary>Call the Fl_Overlay_Window_redraw function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Overlay_Window_new" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Overlay_Window_redraw", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Overlay_Window_redraw(IntPtr widget);
    
    /// <summary>Call the Fl_Overlay_Window_show function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Overlay_Window_new" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Overlay_Window_show", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Overlay_Window_show(IntPtr widget);
    
    /// <summary>Call the Fl_Overlay_Window_hide function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Overlay_Window_new" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Overlay_Window_hide", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Overlay_Window_hide(IntPtr widget);
    
    /// <summary>Call the Fl_Overlay_Window_activate function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Overlay_Window_new" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Overlay_Window_activate", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Overlay_Window_activate(IntPtr widget);
    
    /// <summary>Call the Fl_Overlay_Window_deactivate function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Overlay_Window_new" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Overlay_Window_deactivate", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Overlay_Window_deactivate(IntPtr widget);
    
    /// <summary>Call the Fl_Overlay_Window_redraw_label function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Overlay_Window_new" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Overlay_Window_redraw_label", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Overlay_Window_redraw_label(IntPtr widget);
    
    /// <summary>Call the Fl_Overlay_Window_resize function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Overlay_Window_new" path="/returns" />
    /// </param>
    /// <param name="x"></param>
    /// <param name="y"></param>
    /// <param name="width"></param>
    /// <param name="height"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Overlay_Window_resize", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Overlay_Window_resize(IntPtr widget, int x, int y, int width, int height);
    
    /// <summary>Call the Fl_Overlay_Window_widget_resize function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Overlay_Window_new" path="/returns" />
    /// </param>
    /// <param name="x"></param>
    /// <param name="y"></param>
    /// <param name="width"></param>
    /// <param name="height"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Overlay_Window_widget_resize", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Overlay_Window_widget_resize(IntPtr widget, int x, int y, int width, int height);
    
    /// <summary>Call the Fl_Overlay_Window_tooltip function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Overlay_Window_new" path="/returns" />
    /// </param>
    /// <returns>
    /// <inheritdoc cref="Fl_Overlay_Window_new" path="/param[@name='labelPointer']" />
    /// </returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Overlay_Window_tooltip", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Overlay_Window_tooltip(IntPtr widget);
    
    /// <summary>Call the Fl_Overlay_Window_set_tooltip function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Overlay_Window_new" path="/returns" />
    /// </param>
    /// <param name="tooltipPointer">
    /// <inheritdoc cref="Fl_Overlay_Window_new" path="/param[@name='labelPointer']" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Overlay_Window_set_tooltip", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Overlay_Window_set_tooltip(IntPtr widget, IntPtr tooltipPointer);
    
    /// <summary>Call the Fl_Overlay_Window_get_type function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Overlay_Window_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Overlay_Window_get_type", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Overlay_Window_get_type(IntPtr widget);
    
    /// <summary>Call the Fl_Overlay_Window_set_type function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Overlay_Window_new" path="/returns" />
    /// </param>
    /// <param name="type"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Overlay_Window_set_type", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Overlay_Window_set_type(IntPtr widget, int type);
    
    /// <summary>Call the Fl_Overlay_Window_color function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Overlay_Window_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Overlay_Window_color", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern uint Fl_Overlay_Window_color(IntPtr widget);
    
    /// <summary>Call the Fl_Overlay_Window_set_color function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Overlay_Window_new" path="/returns" />
    /// </param>
    /// <param name="color"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Overlay_Window_set_color", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Overlay_Window_set_color(IntPtr widget, uint color);
    
    /// <summary>Call the Fl_Overlay_Window_measure_label function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Overlay_Window_new" path="/returns" />
    /// </param>
    /// <param name="width"></param>
    /// <param name="height"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Overlay_Window_measure_label", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Overlay_Window_measure_label(IntPtr widget, ref int width, ref int height);
    
    /// <summary>Call the Fl_Overlay_Window_label_color function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Overlay_Window_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Overlay_Window_label_color", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern uint Fl_Overlay_Window_label_color(IntPtr widget);
    
    /// <summary>Call the Fl_Overlay_Window_set_label_color function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Overlay_Window_new" path="/returns" />
    /// </param>
    /// <param name="color">
    /// <inheritdoc cref="Fl_Overlay_Window_label_color" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Overlay_Window_set_label_color", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Overlay_Window_set_label_color(IntPtr widget, uint color);
    
    /// <summary>Call the Fl_Overlay_Window_label_font function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Overlay_Window_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Overlay_Window_label_font", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Overlay_Window_label_font(IntPtr widget);
    
    /// <summary>Call the Fl_Overlay_Window_set_label_font function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Overlay_Window_new" path="/returns" />
    /// </param>
    /// <param name="fontIndex"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Overlay_Window_set_label_font", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Overlay_Window_set_label_font(IntPtr widget, int fontIndex);
    
    /// <summary>Call the Fl_Overlay_Window_label_size function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Overlay_Window_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Overlay_Window_label_size", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Overlay_Window_label_size(IntPtr widget);
    
    /// <summary>Call the Fl_Overlay_Window_set_label_size function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Overlay_Window_new" path="/returns" />
    /// </param>
    /// <param name="size">
    /// <inheritdoc cref="Fl_Overlay_Window_label_size" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Overlay_Window_set_label_size", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Overlay_Window_set_label_size(IntPtr widget, int size);
    
    /// <summary>Call the Fl_Overlay_Window_label_type function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Overlay_Window_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Overlay_Window_label_type", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Overlay_Window_label_type(IntPtr widget);
    
    /// <summary>Call the Fl_Overlay_Window_set_label_type function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Overlay_Window_new" path="/returns" />
    /// </param>
    /// <param name="size">
    /// <inheritdoc cref="Fl_Overlay_Window_label_type" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Overlay_Window_set_label_type", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Overlay_Window_set_label_type(IntPtr widget, int size);
    
    /// <summary>Call the Fl_Overlay_Window_box function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Overlay_Window_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Overlay_Window_box", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Overlay_Window_box(IntPtr widget);
    
    /// <summary>Call the Fl_Overlay_Window_set_box function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Overlay_Window_new" path="/returns" />
    /// </param>
    /// <param name="type"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Overlay_Window_set_box", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Overlay_Window_set_box(IntPtr widget, int type);
    
    /// <summary>Call the Fl_Overlay_Window_changed function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Overlay_Window_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Overlay_Window_changed", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Overlay_Window_changed(IntPtr widget);
    
    /// <summary>Call the Fl_Overlay_Window_set_changed function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Overlay_Window_new" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Overlay_Window_set_changed", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Overlay_Window_set_changed(IntPtr widget);
    
    /// <summary>Call the Fl_Overlay_Window_clear_changed function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Overlay_Window_new" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Overlay_Window_clear_changed", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Overlay_Window_clear_changed(IntPtr widget);
    
    /// <summary>Call the Fl_Overlay_Window_align function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Overlay_Window_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Overlay_Window_align", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Overlay_Window_align(IntPtr widget);
    
    /// <summary>Call the Fl_Overlay_Window_set_align function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Overlay_Window_new" path="/returns" />
    /// </param>
    /// <param name="type"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Overlay_Window_set_align", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Overlay_Window_set_align(IntPtr widget, int type);
    
    /// <summary>Call the Fl_Overlay_Window_delete function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Overlay_Window_new" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Overlay_Window_delete", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Overlay_Window_delete(IntPtr widget);
    
    /// <summary>Call the Fl_Overlay_Window_set_image function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Overlay_Window_new" path="/returns" />
    /// </param>
    /// <param name="imagePointer"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Overlay_Window_set_image", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Overlay_Window_set_image(IntPtr widget, IntPtr imagePointer);
    
    /// <summary>Call the Fl_Overlay_Window_handle function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Overlay_Window_new" path="/returns" />
    /// </param>
    /// <param name="callback"></param>
    /// <param name="data"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Overlay_Window_handle", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Overlay_Window_handle(IntPtr widget, FltkWidgetHandleCallback callback, IntPtr data);
    
    /// <summary>Call the Fl_Overlay_Window_handle_event function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Overlay_Window_new" path="/returns" />
    /// </param>
    /// <param name="eventType"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Overlay_Window_handle_event", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Overlay_Window_handle_event(IntPtr widget, int eventType);
    
    /// <summary>Call the Fl_Overlay_Window_draw function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Overlay_Window_new" path="/returns" />
    /// </param>
    /// <param name="callback"></param>
    /// <param name="data"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Overlay_Window_draw", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Overlay_Window_draw(IntPtr widget, FltkWidgetCallback callback, IntPtr data);
    
    /// <summary>Call the Fl_Overlay_Window_resize_callback function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Overlay_Window_new" path="/returns" />
    /// </param>
    /// <param name="callback"></param>
    /// <param name="data"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Overlay_Window_resize_callback", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Overlay_Window_resize_callback(IntPtr widget, FltkWidgetResizeCallback callback, IntPtr data);
    
    /// <summary>Call the Fl_Overlay_Window_set_when function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Overlay_Window_new" path="/returns" />
    /// </param>
    /// <param name="value"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Overlay_Window_set_when", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Overlay_Window_set_when(IntPtr widget, int value);
    
    /// <summary>Call the Fl_Overlay_Window_when function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Overlay_Window_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Overlay_Window_when", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Overlay_Window_when(IntPtr widget);
    
    /// <summary>Call the Fl_Overlay_Window_image function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Overlay_Window_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Overlay_Window_image", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Overlay_Window_image(IntPtr widget);
    
    /// <summary>Call the Fl_Overlay_Window_parent function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Overlay_Window_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Overlay_Window_parent", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Overlay_Window_parent(IntPtr widget);
    
    /// <summary>Call the Fl_Overlay_Window_selection_color function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Overlay_Window_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Overlay_Window_selection_color", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern uint Fl_Overlay_Window_selection_color(IntPtr widget);
    
    /// <summary>Call the Fl_Overlay_Window_set_selection_color function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Overlay_Window_new" path="/returns" />
    /// </param>
    /// <param name="color"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Overlay_Window_set_selection_color", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Overlay_Window_set_selection_color(IntPtr widget, uint color);
    
    /// <summary>Call the Fl_Overlay_Window_inside function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Overlay_Window_new" path="/returns" />
    /// </param>
    /// <param name="other"></param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Overlay_Window_inside", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Overlay_Window_inside(IntPtr widget, IntPtr other);
    
    /// <summary>Call the Fl_Overlay_Window_window function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Overlay_Window_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Overlay_Window_window", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Overlay_Window_window(IntPtr widget);
    
    /// <summary>Call the Fl_Overlay_Window_top_window function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Overlay_Window_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Overlay_Window_top_window", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Overlay_Window_top_window(IntPtr widget);
    
    /// <summary>Call the Fl_Overlay_Window_takes_events function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Overlay_Window_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Overlay_Window_takes_events", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Overlay_Window_takes_events(IntPtr widget);
    
    /// <summary>Call the Fl_Overlay_Window_user_data function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Overlay_Window_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Overlay_Window_user_data", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Overlay_Window_user_data(IntPtr widget);
    
    /// <summary>Call the Fl_Overlay_Window_take_focus function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Overlay_Window_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Overlay_Window_take_focus", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Overlay_Window_take_focus(IntPtr widget);
    
    /// <summary>Call the Fl_Overlay_Window_set_visible_focus function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Overlay_Window_new" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Overlay_Window_set_visible_focus", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Overlay_Window_set_visible_focus(IntPtr widget);
    
    /// <summary>Call the Fl_Overlay_Window_clear_visible_focus function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Overlay_Window_new" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Overlay_Window_clear_visible_focus", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Overlay_Window_clear_visible_focus(IntPtr widget);
    
    /// <summary>Call the Fl_Overlay_Window_visible_focus function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Overlay_Window_new" path="/returns" />
    /// </param>
    /// <param name="value"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Overlay_Window_visible_focus", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Overlay_Window_visible_focus(IntPtr widget, int value);
    
    /// <summary>Call the Fl_Overlay_Window_has_visible_focus function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Overlay_Window_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Overlay_Window_has_visible_focus", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern uint Fl_Overlay_Window_has_visible_focus(IntPtr widget);
    
    /// <summary>Call the Fl_Overlay_Window_set_user_data function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Overlay_Window_new" path="/returns" />
    /// </param>
    /// <param name="data"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Overlay_Window_set_user_data", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Overlay_Window_set_user_data(IntPtr widget, IntPtr data);
    
    /// <summary>Call the Fl_Overlay_Window_draw_data function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Overlay_Window_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Overlay_Window_draw_data", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Overlay_Window_draw_data(IntPtr widget);
    
    /// <summary>Call the Fl_Overlay_Window_handle_data function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Overlay_Window_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Overlay_Window_handle_data", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Overlay_Window_handle_data(IntPtr widget);
    
    /// <summary>Call the Fl_Overlay_Window_set_draw_data function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Overlay_Window_new" path="/returns" />
    /// </param>
    /// <param name="data"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Overlay_Window_set_draw_data", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Overlay_Window_set_draw_data(IntPtr widget, IntPtr data);
    
    /// <summary>Call the Fl_Overlay_Window_set_handle_data function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Overlay_Window_new" path="/returns" />
    /// </param>
    /// <param name="data"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Overlay_Window_set_handle_data", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Overlay_Window_set_handle_data(IntPtr widget, IntPtr data);
    
    /// <summary>Call the Fl_Overlay_Window_damage function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Overlay_Window_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Overlay_Window_damage", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern char Fl_Overlay_Window_damage(IntPtr widget);
    
    /// <summary>Call the Fl_Overlay_Window_set_damage function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Overlay_Window_new" path="/returns" />
    /// </param>
    /// <param name="flag"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Overlay_Window_set_damage", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Overlay_Window_set_damage(IntPtr widget, char flag);
    
    /// <summary>Call the Fl_Overlay_Window_set_damage_area function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Overlay_Window_new" path="/returns" />
    /// </param>
    /// <param name="flag"></param>
    /// <param name="x"></param>
    /// <param name="y"></param>
    /// <param name="width"></param>
    /// <param name="height"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Overlay_Window_set_damage_area", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Overlay_Window_set_damage_area(IntPtr widget, char flag, int x, int y, int width, int height);
    
    /// <summary>Call the Fl_Overlay_Window_clear_damage function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Overlay_Window_new" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Overlay_Window_clear_damage", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Overlay_Window_clear_damage(IntPtr widget);
    
    /// <summary>Call the Fl_Overlay_Window_as_window function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Overlay_Window_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Overlay_Window_as_window", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Overlay_Window_as_window(IntPtr widget);
    
    /// <summary>Call the Fl_Overlay_Window_as_group function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Overlay_Window_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Overlay_Window_as_group", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Overlay_Window_as_group(IntPtr widget);
    
    /// <summary>Call the Fl_Overlay_Window_set_deimage function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Overlay_Window_new" path="/returns" />
    /// </param>
    /// <param name="imagePointer"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Overlay_Window_set_deimage", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Overlay_Window_set_deimage(IntPtr widget, IntPtr imagePointer);
    
    /// <summary>Call the Fl_Overlay_Window_deimage function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Overlay_Window_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Overlay_Window_deimage", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Overlay_Window_deimage(IntPtr widget);
    
    /// <summary>Call the Fl_Overlay_Window_set_callback function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Overlay_Window_new" path="/returns" />
    /// </param>
    /// <param name="callback"></param>
    /// <param name="data"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Overlay_Window_set_callback", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Overlay_Window_set_callback(IntPtr widget, FltkWidgetCallback callback, IntPtr data);
    
    /// <summary>Call the Fl_Overlay_Window_set_deleter function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Overlay_Window_new" path="/returns" />
    /// </param>
    /// <param name="callback"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Overlay_Window_set_deleter", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Overlay_Window_set_deleter(IntPtr widget, Action<Action> callback);
    
    /// <summary>Call the Fl_Overlay_Window_visible function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Overlay_Window_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Overlay_Window_visible", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Overlay_Window_visible(IntPtr widget);
    
    /// <summary>Call the Fl_Overlay_Window_visible_r function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Overlay_Window_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Overlay_Window_visible_r", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Overlay_Window_visible_r(IntPtr widget);
    
    /// <summary>Call the Fl_Overlay_Window_active function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Overlay_Window_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Overlay_Window_active", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern uint Fl_Overlay_Window_active(IntPtr widget);
    
    /// <summary>Call the Fl_Overlay_Window_active_r function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Overlay_Window_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Overlay_Window_active_r", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Overlay_Window_active_r(IntPtr widget);
    
    /// <summary>Call the Fl_Overlay_Window_callback function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Overlay_Window_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Overlay_Window_callback", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern FltkWidgetCallback Fl_Overlay_Window_callback(IntPtr widget);
    
    /// <summary>Call the Fl_Overlay_Window_set_deletion_callback function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Overlay_Window_new" path="/returns" />
    /// </param>
    /// <param name="callback"></param>
    /// <param name="data"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Overlay_Window_set_deletion_callback", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Overlay_Window_set_deletion_callback(IntPtr widget, FltkWidgetCallback callback, IntPtr data);
    
    /// <summary>Call the Fl_Overlay_Window_from_dyn_ptr function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Widget_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Overlay_Window_from_dyn_ptr", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Overlay_Window_from_dyn_ptr(IntPtr widget);
    
    /// <summary>Call the Fl_Overlay_Window_from_derived_dyn_ptr function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Widget_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Overlay_Window_from_derived_dyn_ptr", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Overlay_Window_from_derived_dyn_ptr(IntPtr widget);
    
    /// <summary>Call the Fl_Overlay_Window_super_draw function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Widget_new" path="/returns" />
    /// </param>
    /// <param name="flag"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Overlay_Window_super_draw", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Overlay_Window_super_draw(IntPtr widget, int flag);
    
    /// <summary>Call the Fl_Overlay_Window_super_draw_first function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Widget_new" path="/returns" />
    /// </param>
    /// <param name="flag"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Overlay_Window_super_draw_first", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Overlay_Window_super_draw_first(IntPtr widget, int flag);
    
    /// <summary>Call the Fl_Overlay_Window_super_handle_first function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Widget_new" path="/returns" />
    /// </param>
    /// <param name="flag"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Overlay_Window_super_handle_first", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Overlay_Window_super_handle_first(IntPtr widget, int flag);
    
    /// <summary>Call the Fl_Overlay_Window_begin function</summary>
    /// <param name="group">
    /// <inheritdoc cref="Fl_Overlay_Window_new" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Overlay_Window_begin", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Overlay_Window_begin(IntPtr group);
    
    /// <summary>Call the Fl_Overlay_Window_end function</summary>
    /// <param name="group">
    /// <inheritdoc cref="Fl_Overlay_Window_new" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Overlay_Window_end", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Overlay_Window_end(IntPtr group);
    
    /// <summary>
    /// Find the index of a widget in this group
    /// </summary>
    /// <param name="group">
    /// <inheritdoc cref="Fl_Overlay_Window_new" path="/returns" />
    /// </param>
    /// <param name="widget"></param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Overlay_Window_find", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Overlay_Window_find(IntPtr group, IntPtr widget);
    
    /// <summary>
    /// Add a widget to this group
    /// </summary>
    /// <param name="group">
    /// <inheritdoc cref="Fl_Overlay_Window_new" path="/returns" />
    /// </param>
    /// <param name="widget"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Overlay_Window_add", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Overlay_Window_add(IntPtr group, IntPtr widget);
    
    /// <summary>
    /// Insert the provided widget into this group at a specific index.
    /// </summary>
    /// <param name="group">
    /// <inheritdoc cref="Fl_Overlay_Window_new" path="/returns" />
    /// </param>
    /// <param name="widget"></param>
    /// <param name="index"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Overlay_Window_insert", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Overlay_Window_insert(IntPtr group, IntPtr widget, int index);
    
    /// <summary>
    /// Remove a widget from the group provided.
    /// </summary>
    /// <param name="group">
    /// <inheritdoc cref="Fl_Overlay_Window_new" path="/returns" />
    /// </param>
    /// <param name="widget"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Overlay_Window_remove", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Overlay_Window_remove(IntPtr group, IntPtr widget);
    
    /// <summary>
    /// Remove a widget (by the index) from the group provided.
    /// </summary>
    /// <param name="group">
    /// <inheritdoc cref="Fl_Overlay_Window_new" path="/returns" />
    /// </param>
    /// <param name="widgetIndex"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Overlay_Window_remove_by_index", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Overlay_Window_remove_by_index(IntPtr group, int widgetIndex);
    
    /// <summary>
    /// Remove all child widgets from this group
    /// </summary>
    /// <param name="group">
    /// <inheritdoc cref="Fl_Overlay_Window_new" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Overlay_Window_clear", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Overlay_Window_clear(IntPtr group);
    
    /// <summary>
    /// Get the amount of child widgets for this group
    /// </summary>
    /// <param name="group">
    /// <inheritdoc cref="Fl_Overlay_Window_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Overlay_Window_children", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Overlay_Window_children(IntPtr group);
    
    /// <summary>Call the Fl_Overlay_Window_child function</summary>
    /// <param name="group">
    /// <inheritdoc cref="Fl_Overlay_Window_new" path="/returns" />
    /// </param>
    /// <param name="index"></param>
    /// <returns>
    /// <inheritdoc cref="Fl_Widget_new" path="/returns" />
    /// </returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Overlay_Window_child", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Overlay_Window_child(IntPtr group, int index);
    
    /// <summary>Call the Fl_Overlay_Window_resizable function</summary>
    /// <param name="group">
    /// <inheritdoc cref="Fl_Overlay_Window_new" path="/returns" />
    /// </param>
    /// <param name="resizableWidgetPointer"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Overlay_Window_resizable", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Overlay_Window_resizable(IntPtr group, IntPtr resizableWidgetPointer);
    
    /// <summary>Call the Fl_Overlay_Window_set_clip_children function</summary>
    /// <param name="group">
    /// <inheritdoc cref="Fl_Overlay_Window_new" path="/returns" />
    /// </param>
    /// <param name="clipValue"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Overlay_Window_set_clip_children", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Overlay_Window_set_clip_children(IntPtr group, int clipValue);
    
    /// <summary>Call the Fl_Overlay_Window_clip_children function</summary>
    /// <param name="group">
    /// <inheritdoc cref="Fl_Overlay_Window_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Overlay_Window_clip_children", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Overlay_Window_clip_children(IntPtr group);
    
    /// <summary>Call the Fl_Overlay_Window_init_sizes function</summary>
    /// <param name="group">
    /// <inheritdoc cref="Fl_Overlay_Window_new" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Overlay_Window_init_sizes", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Overlay_Window_init_sizes(IntPtr group);
    
    /// <summary>Call the Fl_Overlay_Window_draw_child function</summary>
    /// <param name="group">
    /// <inheritdoc cref="Fl_Overlay_Window_new" path="/returns" />
    /// </param>
    /// <param name="childWidgetPointer"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Overlay_Window_draw_child", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Overlay_Window_draw_child(IntPtr group, IntPtr childWidgetPointer);
    
    /// <summary>Call the Fl_Overlay_Window_update_child function</summary>
    /// <param name="group">
    /// <inheritdoc cref="Fl_Overlay_Window_new" path="/returns" />
    /// </param>
    /// <param name="childWidgetPointer"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Overlay_Window_update_child", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Overlay_Window_update_child(IntPtr group, IntPtr childWidgetPointer);
    
    /// <summary>Call the Fl_Overlay_Window_draw_outside_label function</summary>
    /// <param name="group">
    /// <inheritdoc cref="Fl_Overlay_Window_new" path="/returns" />
    /// </param>
    /// <param name="childWidgetPointer"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Overlay_Window_draw_outside_label", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Overlay_Window_draw_outside_label(IntPtr group, IntPtr childWidgetPointer);
    
    /// <summary>Call the Fl_Overlay_Window_draw_children function</summary>
    /// <param name="group">
    /// <inheritdoc cref="Fl_Overlay_Window_new" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Overlay_Window_draw_children", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Overlay_Window_draw_children(IntPtr group);
    
    /// <summary>Call the Fl_Overlay_Window_make_modal function</summary>
    /// <param name="window">
    /// <inheritdoc cref="Fl_Overlay_Window_new" path="/returns" />
    /// </param>
    /// <param name="state"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Overlay_Window_make_modal", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Overlay_Window_make_modal(IntPtr window, [MarshalAs(UnmanagedType.U4)] bool state);
    
    /// <summary>Call the Fl_Overlay_Window_fullscreen function</summary>
    /// <param name="window">
    /// <inheritdoc cref="Fl_Overlay_Window_new" path="/returns" />
    /// </param>
    /// <param name="state"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Overlay_Window_fullscreen", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Overlay_Window_fullscreen(IntPtr window, [MarshalAs(UnmanagedType.U4)] bool state);
    
    /// <summary>Call the Fl_Overlay_Window_make_current function</summary>
    /// <param name="window">
    /// <inheritdoc cref="Fl_Overlay_Window_new" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Overlay_Window_make_current", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Overlay_Window_make_current(IntPtr window);
    
    /// <summary>Call the Fl_Overlay_Window_set_icon function</summary>
    /// <param name="window">
    /// <inheritdoc cref="Fl_Overlay_Window_new" path="/returns" />
    /// </param>
    /// <param name="imagePointer">
    /// <inheritdoc cref="Fl_Image_new" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Overlay_Window_set_icon", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Overlay_Window_set_icon(IntPtr window, IntPtr imagePointer);
    
    /// <summary>Call the Fl_Overlay_Window_icon function</summary>
    /// <param name="window">
    /// <inheritdoc cref="Fl_Overlay_Window_new" path="/returns" />
    /// </param>
    /// <returns>
    /// <inheritdoc cref="Fl_Image_new" path="/returns" />
    /// </returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Overlay_Window_icon", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Overlay_Window_icon(IntPtr window);
    
    /// <summary>Call the Fl_Overlay_Window_set_cursor function</summary>
    /// <param name="window">
    /// <inheritdoc cref="Fl_Overlay_Window_new" path="/returns" />
    /// </param>
    /// <param name="cursor"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Overlay_Window_set_cursor", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Overlay_Window_set_cursor(IntPtr window, int cursor);
    
    /// <summary>Call the Fl_Overlay_Window_shown function</summary>
    /// <param name="window">
    /// <inheritdoc cref="Fl_Overlay_Window_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Overlay_Window_shown", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Overlay_Window_shown(IntPtr window);
    
    /// <summary>Call the Fl_Overlay_Window_raw_handle function</summary>
    /// <param name="window">
    /// <inheritdoc cref="Fl_Overlay_Window_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Overlay_Window_raw_handle", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Overlay_Window_raw_handle(IntPtr window);
    
    /// <summary>Call the Fl_Overlay_Window_set_border function</summary>
    /// <param name="window">
    /// <inheritdoc cref="Fl_Overlay_Window_new" path="/returns" />
    /// </param>
    /// <param name="flag"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Overlay_Window_set_border", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Overlay_Window_set_border(IntPtr window, int flag);
    
    /// <summary>Call the Fl_Overlay_Window_border function</summary>
    /// <param name="window">
    /// <inheritdoc cref="Fl_Overlay_Window_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Overlay_Window_border", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Overlay_Window_border(IntPtr window);
    
    /// <summary>
    /// Get the window region. Will only work on X11
    /// </summary>
    /// <param name="window">
    /// <inheritdoc cref="Fl_Overlay_Window_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Overlay_Window_region", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Overlay_Window_region(IntPtr window);
    
    /// <summary>
    /// Set the window region. Will only work on X11
    /// </summary>
    /// <param name="window">
    /// <inheritdoc cref="Fl_Overlay_Window_new" path="/returns" />
    /// </param>
    /// <param name="region"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Overlay_Window_set_region", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Overlay_Window_set_region(IntPtr window, IntPtr region);
    
    /// <summary>Call the Fl_Overlay_Window_iconize function</summary>
    /// <param name="window">
    /// <inheritdoc cref="Fl_Overlay_Window_new" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Overlay_Window_iconize", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Overlay_Window_iconize(IntPtr window);
    
    /// <summary>Call the Fl_Overlay_Window_fullscreen_active function</summary>
    /// <param name="window">
    /// <inheritdoc cref="Fl_Overlay_Window_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Overlay_Window_fullscreen_active", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Overlay_Window_fullscreen_active(IntPtr window);
    
    /// <summary>Call the Fl_Overlay_Window_free_position function</summary>
    /// <param name="window">
    /// <inheritdoc cref="Fl_Overlay_Window_new" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Overlay_Window_free_position", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Overlay_Window_free_position(IntPtr window);
    
    /// <summary>Call the Fl_Overlay_Window_decorated_w function</summary>
    /// <param name="window">
    /// <inheritdoc cref="Fl_Overlay_Window_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Overlay_Window_decorated_w", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Overlay_Window_decorated_w(IntPtr window);
    
    /// <summary>Call the Fl_Overlay_Window_decorated_h function</summary>
    /// <param name="window">
    /// <inheritdoc cref="Fl_Overlay_Window_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Overlay_Window_decorated_h", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Overlay_Window_decorated_h(IntPtr window);
    
    /// <summary>Call the Fl_Overlay_Window_size_range function</summary>
    /// <param name="window">
    /// <inheritdoc cref="Fl_Overlay_Window_new" path="/returns" />
    /// </param>
    /// <param name="minimumWidth"></param>
    /// <param name="minimumHeight"></param>
    /// <param name="maximumWidth"></param>
    /// <param name="maximumHeight"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Overlay_Window_size_range", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Overlay_Window_size_range(IntPtr window, int minimumWidth, int minimumHeight, int maximumWidth, int maximumHeight);
    
    /// <summary>Call the Fl_Overlay_Window_hotspot function</summary>
    /// <param name="window">
    /// <inheritdoc cref="Fl_Overlay_Window_new" path="/returns" />
    /// </param>
    /// <param name="widget"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Overlay_Window_hotspot", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Overlay_Window_hotspot(IntPtr window, IntPtr widget);
    
    /// <summary>Call the Fl_Overlay_Window_set_shape function</summary>
    /// <param name="window">
    /// <inheritdoc cref="Fl_Overlay_Window_new" path="/returns" />
    /// </param>
    /// <param name="imagePtr"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Overlay_Window_set_shape", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Overlay_Window_set_shape(IntPtr window, IntPtr imagePtr);
    
    /// <summary>Call the Fl_Overlay_Window_shape function</summary>
    /// <param name="window">
    /// <inheritdoc cref="Fl_Overlay_Window_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Overlay_Window_shape", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Overlay_Window_shape(IntPtr window);
    
    /// <summary>Call the Fl_Overlay_Window_x_root function</summary>
    /// <param name="window">
    /// <inheritdoc cref="Fl_Overlay_Window_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Overlay_Window_x_root", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Overlay_Window_x_root(IntPtr window);
    
    /// <summary>Call the Fl_Overlay_Window_y_root function</summary>
    /// <param name="window">
    /// <inheritdoc cref="Fl_Overlay_Window_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Overlay_Window_y_root", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Overlay_Window_y_root(IntPtr window);
    
    /// <summary>Call the Fl_Overlay_Window_set_cursor_image function</summary>
    /// <param name="window">
    /// <inheritdoc cref="Fl_Overlay_Window_new" path="/returns" />
    /// </param>
    /// <param name="imagePtr"></param>
    /// <param name="hotX"></param>
    /// <param name="hotY"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Overlay_Window_set_cursor_image", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Overlay_Window_set_cursor_image(IntPtr window, IntPtr imagePtr, int hotX, int hotY);
    
    /// <summary>Call the Fl_Overlay_Window_default_cursor function</summary>
    /// <param name="window">
    /// <inheritdoc cref="Fl_Overlay_Window_new" path="/returns" />
    /// </param>
    /// <param name="cursor"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Overlay_Window_default_cursor", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Overlay_Window_default_cursor(IntPtr window, int cursor);
    
    /// <summary>Call the Fl_Overlay_Window_screen_num function</summary>
    /// <param name="window">
    /// <inheritdoc cref="Fl_Overlay_Window_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Overlay_Window_screen_num", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Overlay_Window_screen_num(IntPtr window);
    
    /// <summary>Call the Fl_Overlay_Window_set_screen_num function</summary>
    /// <param name="window">
    /// <inheritdoc cref="Fl_Overlay_Window_new" path="/returns" />
    /// </param>
    /// <param name="screenIndex"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Overlay_Window_set_screen_num", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Overlay_Window_set_screen_num(IntPtr window, int screenIndex);
    
    /// <summary>Call the Fl_Overlay_Window_wait_for_expose function</summary>
    /// <param name="window">
    /// <inheritdoc cref="Fl_Overlay_Window_new" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Overlay_Window_wait_for_expose", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Overlay_Window_wait_for_expose(IntPtr window);
    
    /// <summary>Call the Fl_Overlay_Window_set_alpha function</summary>
    /// <param name="window">
    /// <inheritdoc cref="Fl_Overlay_Window_new" path="/returns" />
    /// </param>
    /// <param name="value"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Overlay_Window_set_alpha", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Overlay_Window_set_alpha(IntPtr window, char value);
    
    /// <summary>Call the Fl_Overlay_Window_alpha function</summary>
    /// <param name="window">
    /// <inheritdoc cref="Fl_Overlay_Window_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Overlay_Window_alpha", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern char Fl_Overlay_Window_alpha(IntPtr window);
    
    /// <summary>Call the Fl_Overlay_Window_force_position function</summary>
    /// <param name="window">
    /// <inheritdoc cref="Fl_Overlay_Window_new" path="/returns" />
    /// </param>
    /// <param name="flag"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Overlay_Window_force_position", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Overlay_Window_force_position(IntPtr window, int flag);
    
    /// <summary>Call the Fl_Overlay_Window_default_xclass function</summary>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Overlay_Window_default_xclass", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Overlay_Window_default_xclass();
    
    /// <summary>Call the Fl_Overlay_Window_xclass function</summary>
    /// <param name="window">
    /// <inheritdoc cref="Fl_Overlay_Window_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Overlay_Window_xclass", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Overlay_Window_xclass(IntPtr window);
    
    /// <summary>Call the Fl_Overlay_Window_set_default_xclass function</summary>
    /// <param name="s"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Overlay_Window_set_default_xclass", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Overlay_Window_set_default_xclass(IntPtr s);
    
    /// <summary>Call the Fl_Overlay_Window_set_xclass function</summary>
    /// <param name="window">
    /// <inheritdoc cref="Fl_Overlay_Window_new" path="/returns" />
    /// </param>
    /// <param name="s"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Overlay_Window_set_xclass", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Overlay_Window_set_xclass(IntPtr window, IntPtr s);
    
    /// <summary>Call the Fl_Overlay_Window_clear_modal_states function</summary>
    /// <param name="window">
    /// <inheritdoc cref="Fl_Overlay_Window_new" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Overlay_Window_clear_modal_states", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Overlay_Window_clear_modal_states(IntPtr window);
    
    /// <summary>Call the Fl_Overlay_Window_set_override function</summary>
    /// <param name="window">
    /// <inheritdoc cref="Fl_Overlay_Window_new" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Overlay_Window_set_override", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Overlay_Window_set_override(IntPtr window);
    
    /// <summary>Call the Fl_Overlay_Window_override function</summary>
    /// <param name="window">
    /// <inheritdoc cref="Fl_Overlay_Window_new" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Overlay_Window_override", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Overlay_Window_override(IntPtr window);
    
    /// <summary>Call the Fl_Overlay_Window_icon_label function</summary>
    /// <param name="window">
    /// <inheritdoc cref="Fl_Overlay_Window_new" path="/returns" />
    /// </param>
    /// <returns>
    /// <inheritdoc cref="Fl_Overlay_Window_new" path="/returns" />
    /// </returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Overlay_Window_icon_label", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Overlay_Window_icon_label(IntPtr window);
    
    /// <summary>Call the Fl_Overlay_Window_set_icon_label function</summary>
    /// <param name="window">
    /// <inheritdoc cref="Fl_Overlay_Window_new" path="/returns" />
    /// </param>
    /// <param name="labelPointer">
    /// <inheritdoc cref="Fl_Widget_new" path="/param[@name='labelPointer']" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Overlay_Window_set_icon_label", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Overlay_Window_set_icon_label(IntPtr window, IntPtr labelPointer);
    
    /// <summary>Call the Fl_Overlay_Window_set_icons function</summary>
    /// <param name="window">
    /// <inheritdoc cref="Fl_Overlay_Window_new" path="/returns" />
    /// </param>
    /// <param name="imageArrayPtr"></param>
    /// <param name="imageArrayLength"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Overlay_Window_set_icons", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Overlay_Window_set_icons(IntPtr window, ref IntPtr[] imageArrayPtr, int imageArrayLength);
    
    /// <summary>Call the Fl_Overlay_Window_maximize function</summary>
    /// <param name="window">
    /// <inheritdoc cref="Fl_Overlay_Window_new" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Overlay_Window_maximize", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Overlay_Window_maximize(IntPtr window);
    
    /// <summary>Call the Fl_Overlay_Window_un_maximize function</summary>
    /// <param name="window">
    /// <inheritdoc cref="Fl_Overlay_Window_new" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Overlay_Window_un_maximize", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Overlay_Window_un_maximize(IntPtr window);
    
    /// <summary>Call the Fl_Overlay_Window_maximize_active function</summary>
    /// <param name="window">
    /// <inheritdoc cref="Fl_Overlay_Window_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Overlay_Window_maximize_active", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern uint Fl_Overlay_Window_maximize_active(IntPtr window);
    
    /// <summary>Call the Fl_Overlay_Window_draw_overlay function</summary>
    /// <param name="self"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Overlay_Window_draw_overlay", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Overlay_Window_draw_overlay(IntPtr self);
    
    /// <summary>Call the Fl_Button_new function</summary>
    /// <param name="x"></param>
    /// <param name="y"></param>
    /// <param name="width"></param>
    /// <param name="height"></param>
    /// <param name="labelPointer"></param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Button_new", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Button_new(int x, int y, int width, int height, IntPtr labelPointer);
    
    /// <summary>Call the Fl_Button_x function</summary>
    /// <param name="widget">
    /// Pointer to <c>Fl_Button</c>
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Button_x", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Button_x(IntPtr widget);
    
    /// <summary>Call the Fl_Button_y function</summary>
    /// <param name="widget">
    /// Pointer to <c>Fl_Button</c>
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Button_y", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Button_y(IntPtr widget);
    
    /// <summary>Call the Fl_Button_width function</summary>
    /// <param name="widget">
    /// Pointer to <c>Fl_Button</c>
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Button_width", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Button_width(IntPtr widget);
    
    /// <summary>Call the Fl_Button_height function</summary>
    /// <param name="widget">
    /// Pointer to <c>Fl_Button</c>
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Button_height", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Button_height(IntPtr widget);
    
    /// <summary>Call the Fl_Button_label function</summary>
    /// <param name="widget">
    /// Pointer to <c>Fl_Button</c>
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Button_label", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Button_label(IntPtr widget);
    
    /// <summary>Call the Fl_Button_set_label function</summary>
    /// <param name="widget"></param>
    /// <param name="labelPointer">
    /// <inheritdoc cref="Fl_Widget_new" path="/param[@name='labelPointer']" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Button_set_label", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Button_set_label(IntPtr widget, IntPtr labelPointer);
    
    /// <summary>Call the Fl_Button_redraw function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Button_new" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Button_redraw", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Button_redraw(IntPtr widget);
    
    /// <summary>Call the Fl_Button_show function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Button_new" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Button_show", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Button_show(IntPtr widget);
    
    /// <summary>Call the Fl_Button_hide function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Button_new" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Button_hide", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Button_hide(IntPtr widget);
    
    /// <summary>Call the Fl_Button_activate function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Button_new" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Button_activate", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Button_activate(IntPtr widget);
    
    /// <summary>Call the Fl_Button_deactivate function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Button_new" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Button_deactivate", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Button_deactivate(IntPtr widget);
    
    /// <summary>Call the Fl_Button_redraw_label function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Button_new" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Button_redraw_label", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Button_redraw_label(IntPtr widget);
    
    /// <summary>Call the Fl_Button_resize function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Button_new" path="/returns" />
    /// </param>
    /// <param name="x"></param>
    /// <param name="y"></param>
    /// <param name="width"></param>
    /// <param name="height"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Button_resize", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Button_resize(IntPtr widget, int x, int y, int width, int height);
    
    /// <summary>Call the Fl_Button_widget_resize function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Button_new" path="/returns" />
    /// </param>
    /// <param name="x"></param>
    /// <param name="y"></param>
    /// <param name="width"></param>
    /// <param name="height"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Button_widget_resize", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Button_widget_resize(IntPtr widget, int x, int y, int width, int height);
    
    /// <summary>Call the Fl_Button_tooltip function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Button_new" path="/returns" />
    /// </param>
    /// <returns>
    /// <inheritdoc cref="Fl_Button_new" path="/param[@name='labelPointer']" />
    /// </returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Button_tooltip", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Button_tooltip(IntPtr widget);
    
    /// <summary>Call the Fl_Button_set_tooltip function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Button_new" path="/returns" />
    /// </param>
    /// <param name="tooltipPointer">
    /// <inheritdoc cref="Fl_Button_new" path="/param[@name='labelPointer']" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Button_set_tooltip", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Button_set_tooltip(IntPtr widget, IntPtr tooltipPointer);
    
    /// <summary>Call the Fl_Button_get_type function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Button_get_type", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Button_get_type(IntPtr widget);
    
    /// <summary>Call the Fl_Button_set_type function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Button_new" path="/returns" />
    /// </param>
    /// <param name="type"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Button_set_type", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Button_set_type(IntPtr widget, int type);
    
    /// <summary>Call the Fl_Button_color function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Button_color", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern uint Fl_Button_color(IntPtr widget);
    
    /// <summary>Call the Fl_Button_set_color function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Button_new" path="/returns" />
    /// </param>
    /// <param name="color"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Button_set_color", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Button_set_color(IntPtr widget, uint color);
    
    /// <summary>Call the Fl_Button_measure_label function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Button_new" path="/returns" />
    /// </param>
    /// <param name="width"></param>
    /// <param name="height"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Button_measure_label", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Button_measure_label(IntPtr widget, ref int width, ref int height);
    
    /// <summary>Call the Fl_Button_label_color function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Button_label_color", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern uint Fl_Button_label_color(IntPtr widget);
    
    /// <summary>Call the Fl_Button_set_label_color function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Button_new" path="/returns" />
    /// </param>
    /// <param name="color">
    /// <inheritdoc cref="Fl_Button_label_color" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Button_set_label_color", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Button_set_label_color(IntPtr widget, uint color);
    
    /// <summary>Call the Fl_Button_label_font function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Button_label_font", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Button_label_font(IntPtr widget);
    
    /// <summary>Call the Fl_Button_set_label_font function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Button_new" path="/returns" />
    /// </param>
    /// <param name="fontIndex"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Button_set_label_font", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Button_set_label_font(IntPtr widget, int fontIndex);
    
    /// <summary>Call the Fl_Button_label_size function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Button_label_size", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Button_label_size(IntPtr widget);
    
    /// <summary>Call the Fl_Button_set_label_size function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Button_new" path="/returns" />
    /// </param>
    /// <param name="size">
    /// <inheritdoc cref="Fl_Button_label_size" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Button_set_label_size", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Button_set_label_size(IntPtr widget, int size);
    
    /// <summary>Call the Fl_Button_label_type function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Button_label_type", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Button_label_type(IntPtr widget);
    
    /// <summary>Call the Fl_Button_set_label_type function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Button_new" path="/returns" />
    /// </param>
    /// <param name="size">
    /// <inheritdoc cref="Fl_Button_label_type" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Button_set_label_type", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Button_set_label_type(IntPtr widget, int size);
    
    /// <summary>Call the Fl_Button_box function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Button_box", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Button_box(IntPtr widget);
    
    /// <summary>Call the Fl_Button_set_box function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Button_new" path="/returns" />
    /// </param>
    /// <param name="type"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Button_set_box", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Button_set_box(IntPtr widget, int type);
    
    /// <summary>Call the Fl_Button_changed function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Button_changed", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Button_changed(IntPtr widget);
    
    /// <summary>Call the Fl_Button_set_changed function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Button_new" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Button_set_changed", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Button_set_changed(IntPtr widget);
    
    /// <summary>Call the Fl_Button_clear_changed function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Button_new" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Button_clear_changed", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Button_clear_changed(IntPtr widget);
    
    /// <summary>Call the Fl_Button_align function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Button_align", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Button_align(IntPtr widget);
    
    /// <summary>Call the Fl_Button_set_align function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Button_new" path="/returns" />
    /// </param>
    /// <param name="type"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Button_set_align", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Button_set_align(IntPtr widget, int type);
    
    /// <summary>Call the Fl_Button_delete function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Button_new" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Button_delete", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Button_delete(IntPtr widget);
    
    /// <summary>Call the Fl_Button_set_image function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Button_new" path="/returns" />
    /// </param>
    /// <param name="imagePointer"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Button_set_image", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Button_set_image(IntPtr widget, IntPtr imagePointer);
    
    /// <summary>Call the Fl_Button_handle function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Button_new" path="/returns" />
    /// </param>
    /// <param name="callback"></param>
    /// <param name="data"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Button_handle", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Button_handle(IntPtr widget, FltkWidgetHandleCallback callback, IntPtr data);
    
    /// <summary>Call the Fl_Button_handle_event function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Button_new" path="/returns" />
    /// </param>
    /// <param name="eventType"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Button_handle_event", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Button_handle_event(IntPtr widget, int eventType);
    
    /// <summary>Call the Fl_Button_draw function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Button_new" path="/returns" />
    /// </param>
    /// <param name="callback"></param>
    /// <param name="data"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Button_draw", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Button_draw(IntPtr widget, FltkWidgetCallback callback, IntPtr data);
    
    /// <summary>Call the Fl_Button_resize_callback function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Button_new" path="/returns" />
    /// </param>
    /// <param name="callback"></param>
    /// <param name="data"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Button_resize_callback", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Button_resize_callback(IntPtr widget, FltkWidgetResizeCallback callback, IntPtr data);
    
    /// <summary>Call the Fl_Button_set_when function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Button_new" path="/returns" />
    /// </param>
    /// <param name="value"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Button_set_when", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Button_set_when(IntPtr widget, int value);
    
    /// <summary>Call the Fl_Button_when function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Button_when", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Button_when(IntPtr widget);
    
    /// <summary>Call the Fl_Button_image function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Button_image", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Button_image(IntPtr widget);
    
    /// <summary>Call the Fl_Button_parent function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Button_parent", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Button_parent(IntPtr widget);
    
    /// <summary>Call the Fl_Button_selection_color function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Button_selection_color", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern uint Fl_Button_selection_color(IntPtr widget);
    
    /// <summary>Call the Fl_Button_set_selection_color function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Button_new" path="/returns" />
    /// </param>
    /// <param name="color"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Button_set_selection_color", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Button_set_selection_color(IntPtr widget, uint color);
    
    /// <summary>Call the Fl_Button_inside function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Button_new" path="/returns" />
    /// </param>
    /// <param name="other"></param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Button_inside", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Button_inside(IntPtr widget, IntPtr other);
    
    /// <summary>Call the Fl_Button_window function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Button_window", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Button_window(IntPtr widget);
    
    /// <summary>Call the Fl_Button_top_window function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Button_top_window", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Button_top_window(IntPtr widget);
    
    /// <summary>Call the Fl_Button_takes_events function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Button_takes_events", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Button_takes_events(IntPtr widget);
    
    /// <summary>Call the Fl_Button_user_data function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Button_user_data", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Button_user_data(IntPtr widget);
    
    /// <summary>Call the Fl_Button_take_focus function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Button_take_focus", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Button_take_focus(IntPtr widget);
    
    /// <summary>Call the Fl_Button_set_visible_focus function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Button_new" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Button_set_visible_focus", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Button_set_visible_focus(IntPtr widget);
    
    /// <summary>Call the Fl_Button_clear_visible_focus function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Button_new" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Button_clear_visible_focus", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Button_clear_visible_focus(IntPtr widget);
    
    /// <summary>Call the Fl_Button_visible_focus function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Button_new" path="/returns" />
    /// </param>
    /// <param name="value"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Button_visible_focus", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Button_visible_focus(IntPtr widget, int value);
    
    /// <summary>Call the Fl_Button_has_visible_focus function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Button_has_visible_focus", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern uint Fl_Button_has_visible_focus(IntPtr widget);
    
    /// <summary>Call the Fl_Button_set_user_data function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Button_new" path="/returns" />
    /// </param>
    /// <param name="data"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Button_set_user_data", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Button_set_user_data(IntPtr widget, IntPtr data);
    
    /// <summary>Call the Fl_Button_draw_data function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Button_draw_data", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Button_draw_data(IntPtr widget);
    
    /// <summary>Call the Fl_Button_handle_data function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Button_handle_data", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Button_handle_data(IntPtr widget);
    
    /// <summary>Call the Fl_Button_set_draw_data function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Button_new" path="/returns" />
    /// </param>
    /// <param name="data"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Button_set_draw_data", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Button_set_draw_data(IntPtr widget, IntPtr data);
    
    /// <summary>Call the Fl_Button_set_handle_data function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Button_new" path="/returns" />
    /// </param>
    /// <param name="data"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Button_set_handle_data", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Button_set_handle_data(IntPtr widget, IntPtr data);
    
    /// <summary>Call the Fl_Button_damage function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Button_damage", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern char Fl_Button_damage(IntPtr widget);
    
    /// <summary>Call the Fl_Button_set_damage function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Button_new" path="/returns" />
    /// </param>
    /// <param name="flag"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Button_set_damage", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Button_set_damage(IntPtr widget, char flag);
    
    /// <summary>Call the Fl_Button_set_damage_area function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Button_new" path="/returns" />
    /// </param>
    /// <param name="flag"></param>
    /// <param name="x"></param>
    /// <param name="y"></param>
    /// <param name="width"></param>
    /// <param name="height"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Button_set_damage_area", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Button_set_damage_area(IntPtr widget, char flag, int x, int y, int width, int height);
    
    /// <summary>Call the Fl_Button_clear_damage function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Button_new" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Button_clear_damage", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Button_clear_damage(IntPtr widget);
    
    /// <summary>Call the Fl_Button_as_window function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Button_as_window", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Button_as_window(IntPtr widget);
    
    /// <summary>Call the Fl_Button_as_group function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Button_as_group", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Button_as_group(IntPtr widget);
    
    /// <summary>Call the Fl_Button_set_deimage function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Button_new" path="/returns" />
    /// </param>
    /// <param name="imagePointer"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Button_set_deimage", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Button_set_deimage(IntPtr widget, IntPtr imagePointer);
    
    /// <summary>Call the Fl_Button_deimage function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Button_deimage", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Button_deimage(IntPtr widget);
    
    /// <summary>Call the Fl_Button_set_callback function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Button_new" path="/returns" />
    /// </param>
    /// <param name="callback"></param>
    /// <param name="data"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Button_set_callback", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Button_set_callback(IntPtr widget, FltkWidgetCallback callback, IntPtr data);
    
    /// <summary>Call the Fl_Button_set_deleter function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Button_new" path="/returns" />
    /// </param>
    /// <param name="callback"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Button_set_deleter", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Button_set_deleter(IntPtr widget, Action<Action> callback);
    
    /// <summary>Call the Fl_Button_visible function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Button_visible", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Button_visible(IntPtr widget);
    
    /// <summary>Call the Fl_Button_visible_r function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Button_visible_r", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Button_visible_r(IntPtr widget);
    
    /// <summary>Call the Fl_Button_active function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Button_active", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern uint Fl_Button_active(IntPtr widget);
    
    /// <summary>Call the Fl_Button_active_r function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Button_active_r", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Button_active_r(IntPtr widget);
    
    /// <summary>Call the Fl_Button_callback function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Button_callback", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern FltkWidgetCallback Fl_Button_callback(IntPtr widget);
    
    /// <summary>Call the Fl_Button_set_deletion_callback function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Button_new" path="/returns" />
    /// </param>
    /// <param name="callback"></param>
    /// <param name="data"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Button_set_deletion_callback", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Button_set_deletion_callback(IntPtr widget, FltkWidgetCallback callback, IntPtr data);
    
    /// <summary>Call the Fl_Button_from_dyn_ptr function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Widget_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Button_from_dyn_ptr", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Button_from_dyn_ptr(IntPtr widget);
    
    /// <summary>Call the Fl_Button_from_derived_dyn_ptr function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Widget_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Button_from_derived_dyn_ptr", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Button_from_derived_dyn_ptr(IntPtr widget);
    
    /// <summary>Call the Fl_Button_super_draw function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Widget_new" path="/returns" />
    /// </param>
    /// <param name="flag"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Button_super_draw", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Button_super_draw(IntPtr widget, int flag);
    
    /// <summary>Call the Fl_Button_super_draw_first function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Widget_new" path="/returns" />
    /// </param>
    /// <param name="flag"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Button_super_draw_first", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Button_super_draw_first(IntPtr widget, int flag);
    
    /// <summary>Call the Fl_Button_super_handle_first function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Widget_new" path="/returns" />
    /// </param>
    /// <param name="flag"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Button_super_handle_first", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Button_super_handle_first(IntPtr widget, int flag);
    
    /// <summary>Call the Fl_Button_shortcut function</summary>
    /// <param name="self">
    /// <inheritdoc cref="Fl_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Button_shortcut", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Button_shortcut(IntPtr self);
    
    /// <summary>Call the Fl_Button_set_shortcut function</summary>
    /// <param name="self">
    /// <inheritdoc cref="Fl_Button_new" path="/returns" />
    /// </param>
    /// <param name="shortcut"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Button_set_shortcut", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Button_set_shortcut(IntPtr self, int shortcut);
    
    /// <summary>Call the Fl_Button_clear function</summary>
    /// <param name="self">
    /// <inheritdoc cref="Fl_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Button_clear", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Button_clear(IntPtr self);
    
    /// <summary>Call the Fl_Button_value function</summary>
    /// <param name="self">
    /// <inheritdoc cref="Fl_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Button_value", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Button_value(IntPtr self);
    
    /// <summary>Call the Fl_Button_set_value function</summary>
    /// <param name="self">
    /// <inheritdoc cref="Fl_Button_new" path="/returns" />
    /// </param>
    /// <param name="flag"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Button_set_value", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Button_set_value(IntPtr self, int flag);
    
    /// <summary>Call the Fl_Button_set_down_box function</summary>
    /// <param name="self">
    /// <inheritdoc cref="Fl_Button_new" path="/returns" />
    /// </param>
    /// <param name="flag"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Button_set_down_box", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Button_set_down_box(IntPtr self, int flag);
    
    /// <summary>Call the Fl_Button_down_box function</summary>
    /// <param name="self">
    /// <inheritdoc cref="Fl_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Button_down_box", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Button_down_box(IntPtr self);
    
    /// <summary>Call the Fl_Button_set_compact function</summary>
    /// <param name="self">
    /// <inheritdoc cref="Fl_Button_new" path="/returns" />
    /// </param>
    /// <param name="value"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Button_set_compact", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Button_set_compact(IntPtr self, char value);
    
    /// <summary>Call the Fl_Button_compact function</summary>
    /// <param name="self">
    /// <inheritdoc cref="Fl_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Button_compact", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern char Fl_Button_compact(IntPtr self);
    
    /// <summary>Call the Fl_Check_Button_new function</summary>
    /// <param name="x"></param>
    /// <param name="y"></param>
    /// <param name="width"></param>
    /// <param name="height"></param>
    /// <param name="labelPointer"></param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Check_Button_new", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Check_Button_new(int x, int y, int width, int height, IntPtr labelPointer);
    
    /// <summary>Call the Fl_Check_Button_x function</summary>
    /// <param name="widget">
    /// Pointer to <c>Fl_Check_Button</c>
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Check_Button_x", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Check_Button_x(IntPtr widget);
    
    /// <summary>Call the Fl_Check_Button_y function</summary>
    /// <param name="widget">
    /// Pointer to <c>Fl_Check_Button</c>
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Check_Button_y", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Check_Button_y(IntPtr widget);
    
    /// <summary>Call the Fl_Check_Button_width function</summary>
    /// <param name="widget">
    /// Pointer to <c>Fl_Check_Button</c>
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Check_Button_width", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Check_Button_width(IntPtr widget);
    
    /// <summary>Call the Fl_Check_Button_height function</summary>
    /// <param name="widget">
    /// Pointer to <c>Fl_Check_Button</c>
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Check_Button_height", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Check_Button_height(IntPtr widget);
    
    /// <summary>Call the Fl_Check_Button_label function</summary>
    /// <param name="widget">
    /// Pointer to <c>Fl_Check_Button</c>
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Check_Button_label", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Check_Button_label(IntPtr widget);
    
    /// <summary>Call the Fl_Check_Button_set_label function</summary>
    /// <param name="widget"></param>
    /// <param name="labelPointer">
    /// <inheritdoc cref="Fl_Widget_new" path="/param[@name='labelPointer']" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Check_Button_set_label", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Check_Button_set_label(IntPtr widget, IntPtr labelPointer);
    
    /// <summary>Call the Fl_Check_Button_redraw function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Check_Button_new" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Check_Button_redraw", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Check_Button_redraw(IntPtr widget);
    
    /// <summary>Call the Fl_Check_Button_show function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Check_Button_new" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Check_Button_show", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Check_Button_show(IntPtr widget);
    
    /// <summary>Call the Fl_Check_Button_hide function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Check_Button_new" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Check_Button_hide", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Check_Button_hide(IntPtr widget);
    
    /// <summary>Call the Fl_Check_Button_activate function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Check_Button_new" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Check_Button_activate", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Check_Button_activate(IntPtr widget);
    
    /// <summary>Call the Fl_Check_Button_deactivate function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Check_Button_new" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Check_Button_deactivate", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Check_Button_deactivate(IntPtr widget);
    
    /// <summary>Call the Fl_Check_Button_redraw_label function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Check_Button_new" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Check_Button_redraw_label", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Check_Button_redraw_label(IntPtr widget);
    
    /// <summary>Call the Fl_Check_Button_resize function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Check_Button_new" path="/returns" />
    /// </param>
    /// <param name="x"></param>
    /// <param name="y"></param>
    /// <param name="width"></param>
    /// <param name="height"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Check_Button_resize", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Check_Button_resize(IntPtr widget, int x, int y, int width, int height);
    
    /// <summary>Call the Fl_Check_Button_widget_resize function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Check_Button_new" path="/returns" />
    /// </param>
    /// <param name="x"></param>
    /// <param name="y"></param>
    /// <param name="width"></param>
    /// <param name="height"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Check_Button_widget_resize", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Check_Button_widget_resize(IntPtr widget, int x, int y, int width, int height);
    
    /// <summary>Call the Fl_Check_Button_tooltip function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Check_Button_new" path="/returns" />
    /// </param>
    /// <returns>
    /// <inheritdoc cref="Fl_Check_Button_new" path="/param[@name='labelPointer']" />
    /// </returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Check_Button_tooltip", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Check_Button_tooltip(IntPtr widget);
    
    /// <summary>Call the Fl_Check_Button_set_tooltip function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Check_Button_new" path="/returns" />
    /// </param>
    /// <param name="tooltipPointer">
    /// <inheritdoc cref="Fl_Check_Button_new" path="/param[@name='labelPointer']" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Check_Button_set_tooltip", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Check_Button_set_tooltip(IntPtr widget, IntPtr tooltipPointer);
    
    /// <summary>Call the Fl_Check_Button_get_type function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Check_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Check_Button_get_type", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Check_Button_get_type(IntPtr widget);
    
    /// <summary>Call the Fl_Check_Button_set_type function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Check_Button_new" path="/returns" />
    /// </param>
    /// <param name="type"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Check_Button_set_type", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Check_Button_set_type(IntPtr widget, int type);
    
    /// <summary>Call the Fl_Check_Button_color function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Check_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Check_Button_color", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern uint Fl_Check_Button_color(IntPtr widget);
    
    /// <summary>Call the Fl_Check_Button_set_color function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Check_Button_new" path="/returns" />
    /// </param>
    /// <param name="color"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Check_Button_set_color", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Check_Button_set_color(IntPtr widget, uint color);
    
    /// <summary>Call the Fl_Check_Button_measure_label function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Check_Button_new" path="/returns" />
    /// </param>
    /// <param name="width"></param>
    /// <param name="height"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Check_Button_measure_label", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Check_Button_measure_label(IntPtr widget, ref int width, ref int height);
    
    /// <summary>Call the Fl_Check_Button_label_color function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Check_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Check_Button_label_color", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern uint Fl_Check_Button_label_color(IntPtr widget);
    
    /// <summary>Call the Fl_Check_Button_set_label_color function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Check_Button_new" path="/returns" />
    /// </param>
    /// <param name="color">
    /// <inheritdoc cref="Fl_Check_Button_label_color" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Check_Button_set_label_color", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Check_Button_set_label_color(IntPtr widget, uint color);
    
    /// <summary>Call the Fl_Check_Button_label_font function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Check_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Check_Button_label_font", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Check_Button_label_font(IntPtr widget);
    
    /// <summary>Call the Fl_Check_Button_set_label_font function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Check_Button_new" path="/returns" />
    /// </param>
    /// <param name="fontIndex"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Check_Button_set_label_font", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Check_Button_set_label_font(IntPtr widget, int fontIndex);
    
    /// <summary>Call the Fl_Check_Button_label_size function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Check_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Check_Button_label_size", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Check_Button_label_size(IntPtr widget);
    
    /// <summary>Call the Fl_Check_Button_set_label_size function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Check_Button_new" path="/returns" />
    /// </param>
    /// <param name="size">
    /// <inheritdoc cref="Fl_Check_Button_label_size" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Check_Button_set_label_size", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Check_Button_set_label_size(IntPtr widget, int size);
    
    /// <summary>Call the Fl_Check_Button_label_type function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Check_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Check_Button_label_type", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Check_Button_label_type(IntPtr widget);
    
    /// <summary>Call the Fl_Check_Button_set_label_type function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Check_Button_new" path="/returns" />
    /// </param>
    /// <param name="size">
    /// <inheritdoc cref="Fl_Check_Button_label_type" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Check_Button_set_label_type", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Check_Button_set_label_type(IntPtr widget, int size);
    
    /// <summary>Call the Fl_Check_Button_box function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Check_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Check_Button_box", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Check_Button_box(IntPtr widget);
    
    /// <summary>Call the Fl_Check_Button_set_box function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Check_Button_new" path="/returns" />
    /// </param>
    /// <param name="type"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Check_Button_set_box", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Check_Button_set_box(IntPtr widget, int type);
    
    /// <summary>Call the Fl_Check_Button_changed function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Check_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Check_Button_changed", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Check_Button_changed(IntPtr widget);
    
    /// <summary>Call the Fl_Check_Button_set_changed function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Check_Button_new" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Check_Button_set_changed", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Check_Button_set_changed(IntPtr widget);
    
    /// <summary>Call the Fl_Check_Button_clear_changed function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Check_Button_new" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Check_Button_clear_changed", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Check_Button_clear_changed(IntPtr widget);
    
    /// <summary>Call the Fl_Check_Button_align function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Check_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Check_Button_align", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Check_Button_align(IntPtr widget);
    
    /// <summary>Call the Fl_Check_Button_set_align function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Check_Button_new" path="/returns" />
    /// </param>
    /// <param name="type"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Check_Button_set_align", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Check_Button_set_align(IntPtr widget, int type);
    
    /// <summary>Call the Fl_Check_Button_delete function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Check_Button_new" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Check_Button_delete", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Check_Button_delete(IntPtr widget);
    
    /// <summary>Call the Fl_Check_Button_set_image function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Check_Button_new" path="/returns" />
    /// </param>
    /// <param name="imagePointer"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Check_Button_set_image", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Check_Button_set_image(IntPtr widget, IntPtr imagePointer);
    
    /// <summary>Call the Fl_Check_Button_handle function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Check_Button_new" path="/returns" />
    /// </param>
    /// <param name="callback"></param>
    /// <param name="data"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Check_Button_handle", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Check_Button_handle(IntPtr widget, FltkWidgetHandleCallback callback, IntPtr data);
    
    /// <summary>Call the Fl_Check_Button_handle_event function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Check_Button_new" path="/returns" />
    /// </param>
    /// <param name="eventType"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Check_Button_handle_event", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Check_Button_handle_event(IntPtr widget, int eventType);
    
    /// <summary>Call the Fl_Check_Button_draw function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Check_Button_new" path="/returns" />
    /// </param>
    /// <param name="callback"></param>
    /// <param name="data"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Check_Button_draw", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Check_Button_draw(IntPtr widget, FltkWidgetCallback callback, IntPtr data);
    
    /// <summary>Call the Fl_Check_Button_resize_callback function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Check_Button_new" path="/returns" />
    /// </param>
    /// <param name="callback"></param>
    /// <param name="data"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Check_Button_resize_callback", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Check_Button_resize_callback(IntPtr widget, FltkWidgetResizeCallback callback, IntPtr data);
    
    /// <summary>Call the Fl_Check_Button_set_when function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Check_Button_new" path="/returns" />
    /// </param>
    /// <param name="value"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Check_Button_set_when", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Check_Button_set_when(IntPtr widget, int value);
    
    /// <summary>Call the Fl_Check_Button_when function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Check_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Check_Button_when", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Check_Button_when(IntPtr widget);
    
    /// <summary>Call the Fl_Check_Button_image function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Check_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Check_Button_image", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Check_Button_image(IntPtr widget);
    
    /// <summary>Call the Fl_Check_Button_parent function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Check_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Check_Button_parent", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Check_Button_parent(IntPtr widget);
    
    /// <summary>Call the Fl_Check_Button_selection_color function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Check_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Check_Button_selection_color", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern uint Fl_Check_Button_selection_color(IntPtr widget);
    
    /// <summary>Call the Fl_Check_Button_set_selection_color function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Check_Button_new" path="/returns" />
    /// </param>
    /// <param name="color"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Check_Button_set_selection_color", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Check_Button_set_selection_color(IntPtr widget, uint color);
    
    /// <summary>Call the Fl_Check_Button_inside function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Check_Button_new" path="/returns" />
    /// </param>
    /// <param name="other"></param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Check_Button_inside", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Check_Button_inside(IntPtr widget, IntPtr other);
    
    /// <summary>Call the Fl_Check_Button_window function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Check_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Check_Button_window", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Check_Button_window(IntPtr widget);
    
    /// <summary>Call the Fl_Check_Button_top_window function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Check_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Check_Button_top_window", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Check_Button_top_window(IntPtr widget);
    
    /// <summary>Call the Fl_Check_Button_takes_events function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Check_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Check_Button_takes_events", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Check_Button_takes_events(IntPtr widget);
    
    /// <summary>Call the Fl_Check_Button_user_data function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Check_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Check_Button_user_data", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Check_Button_user_data(IntPtr widget);
    
    /// <summary>Call the Fl_Check_Button_take_focus function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Check_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Check_Button_take_focus", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Check_Button_take_focus(IntPtr widget);
    
    /// <summary>Call the Fl_Check_Button_set_visible_focus function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Check_Button_new" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Check_Button_set_visible_focus", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Check_Button_set_visible_focus(IntPtr widget);
    
    /// <summary>Call the Fl_Check_Button_clear_visible_focus function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Check_Button_new" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Check_Button_clear_visible_focus", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Check_Button_clear_visible_focus(IntPtr widget);
    
    /// <summary>Call the Fl_Check_Button_visible_focus function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Check_Button_new" path="/returns" />
    /// </param>
    /// <param name="value"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Check_Button_visible_focus", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Check_Button_visible_focus(IntPtr widget, int value);
    
    /// <summary>Call the Fl_Check_Button_has_visible_focus function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Check_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Check_Button_has_visible_focus", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern uint Fl_Check_Button_has_visible_focus(IntPtr widget);
    
    /// <summary>Call the Fl_Check_Button_set_user_data function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Check_Button_new" path="/returns" />
    /// </param>
    /// <param name="data"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Check_Button_set_user_data", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Check_Button_set_user_data(IntPtr widget, IntPtr data);
    
    /// <summary>Call the Fl_Check_Button_draw_data function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Check_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Check_Button_draw_data", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Check_Button_draw_data(IntPtr widget);
    
    /// <summary>Call the Fl_Check_Button_handle_data function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Check_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Check_Button_handle_data", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Check_Button_handle_data(IntPtr widget);
    
    /// <summary>Call the Fl_Check_Button_set_draw_data function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Check_Button_new" path="/returns" />
    /// </param>
    /// <param name="data"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Check_Button_set_draw_data", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Check_Button_set_draw_data(IntPtr widget, IntPtr data);
    
    /// <summary>Call the Fl_Check_Button_set_handle_data function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Check_Button_new" path="/returns" />
    /// </param>
    /// <param name="data"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Check_Button_set_handle_data", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Check_Button_set_handle_data(IntPtr widget, IntPtr data);
    
    /// <summary>Call the Fl_Check_Button_damage function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Check_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Check_Button_damage", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern char Fl_Check_Button_damage(IntPtr widget);
    
    /// <summary>Call the Fl_Check_Button_set_damage function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Check_Button_new" path="/returns" />
    /// </param>
    /// <param name="flag"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Check_Button_set_damage", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Check_Button_set_damage(IntPtr widget, char flag);
    
    /// <summary>Call the Fl_Check_Button_set_damage_area function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Check_Button_new" path="/returns" />
    /// </param>
    /// <param name="flag"></param>
    /// <param name="x"></param>
    /// <param name="y"></param>
    /// <param name="width"></param>
    /// <param name="height"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Check_Button_set_damage_area", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Check_Button_set_damage_area(IntPtr widget, char flag, int x, int y, int width, int height);
    
    /// <summary>Call the Fl_Check_Button_clear_damage function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Check_Button_new" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Check_Button_clear_damage", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Check_Button_clear_damage(IntPtr widget);
    
    /// <summary>Call the Fl_Check_Button_as_window function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Check_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Check_Button_as_window", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Check_Button_as_window(IntPtr widget);
    
    /// <summary>Call the Fl_Check_Button_as_group function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Check_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Check_Button_as_group", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Check_Button_as_group(IntPtr widget);
    
    /// <summary>Call the Fl_Check_Button_set_deimage function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Check_Button_new" path="/returns" />
    /// </param>
    /// <param name="imagePointer"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Check_Button_set_deimage", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Check_Button_set_deimage(IntPtr widget, IntPtr imagePointer);
    
    /// <summary>Call the Fl_Check_Button_deimage function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Check_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Check_Button_deimage", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Check_Button_deimage(IntPtr widget);
    
    /// <summary>Call the Fl_Check_Button_set_callback function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Check_Button_new" path="/returns" />
    /// </param>
    /// <param name="callback"></param>
    /// <param name="data"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Check_Button_set_callback", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Check_Button_set_callback(IntPtr widget, FltkWidgetCallback callback, IntPtr data);
    
    /// <summary>Call the Fl_Check_Button_set_deleter function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Check_Button_new" path="/returns" />
    /// </param>
    /// <param name="callback"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Check_Button_set_deleter", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Check_Button_set_deleter(IntPtr widget, Action<Action> callback);
    
    /// <summary>Call the Fl_Check_Button_visible function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Check_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Check_Button_visible", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Check_Button_visible(IntPtr widget);
    
    /// <summary>Call the Fl_Check_Button_visible_r function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Check_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Check_Button_visible_r", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Check_Button_visible_r(IntPtr widget);
    
    /// <summary>Call the Fl_Check_Button_active function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Check_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Check_Button_active", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern uint Fl_Check_Button_active(IntPtr widget);
    
    /// <summary>Call the Fl_Check_Button_active_r function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Check_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Check_Button_active_r", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Check_Button_active_r(IntPtr widget);
    
    /// <summary>Call the Fl_Check_Button_callback function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Check_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Check_Button_callback", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern FltkWidgetCallback Fl_Check_Button_callback(IntPtr widget);
    
    /// <summary>Call the Fl_Check_Button_set_deletion_callback function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Check_Button_new" path="/returns" />
    /// </param>
    /// <param name="callback"></param>
    /// <param name="data"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Check_Button_set_deletion_callback", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Check_Button_set_deletion_callback(IntPtr widget, FltkWidgetCallback callback, IntPtr data);
    
    /// <summary>Call the Fl_Check_Button_from_dyn_ptr function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Widget_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Check_Button_from_dyn_ptr", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Check_Button_from_dyn_ptr(IntPtr widget);
    
    /// <summary>Call the Fl_Check_Button_from_derived_dyn_ptr function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Widget_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Check_Button_from_derived_dyn_ptr", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Check_Button_from_derived_dyn_ptr(IntPtr widget);
    
    /// <summary>Call the Fl_Check_Button_super_draw function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Widget_new" path="/returns" />
    /// </param>
    /// <param name="flag"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Check_Button_super_draw", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Check_Button_super_draw(IntPtr widget, int flag);
    
    /// <summary>Call the Fl_Check_Button_super_draw_first function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Widget_new" path="/returns" />
    /// </param>
    /// <param name="flag"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Check_Button_super_draw_first", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Check_Button_super_draw_first(IntPtr widget, int flag);
    
    /// <summary>Call the Fl_Check_Button_super_handle_first function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Widget_new" path="/returns" />
    /// </param>
    /// <param name="flag"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Check_Button_super_handle_first", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Check_Button_super_handle_first(IntPtr widget, int flag);
    
    /// <summary>Call the Fl_Check_Button_shortcut function</summary>
    /// <param name="self">
    /// <inheritdoc cref="Fl_Check_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Check_Button_shortcut", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Check_Button_shortcut(IntPtr self);
    
    /// <summary>Call the Fl_Check_Button_set_shortcut function</summary>
    /// <param name="self">
    /// <inheritdoc cref="Fl_Check_Button_new" path="/returns" />
    /// </param>
    /// <param name="shortcut"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Check_Button_set_shortcut", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Check_Button_set_shortcut(IntPtr self, int shortcut);
    
    /// <summary>Call the Fl_Check_Button_clear function</summary>
    /// <param name="self">
    /// <inheritdoc cref="Fl_Check_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Check_Button_clear", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Check_Button_clear(IntPtr self);
    
    /// <summary>Call the Fl_Check_Button_value function</summary>
    /// <param name="self">
    /// <inheritdoc cref="Fl_Check_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Check_Button_value", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Check_Button_value(IntPtr self);
    
    /// <summary>Call the Fl_Check_Button_set_value function</summary>
    /// <param name="self">
    /// <inheritdoc cref="Fl_Check_Button_new" path="/returns" />
    /// </param>
    /// <param name="flag"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Check_Button_set_value", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Check_Button_set_value(IntPtr self, int flag);
    
    /// <summary>Call the Fl_Check_Button_set_down_box function</summary>
    /// <param name="self">
    /// <inheritdoc cref="Fl_Check_Button_new" path="/returns" />
    /// </param>
    /// <param name="flag"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Check_Button_set_down_box", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Check_Button_set_down_box(IntPtr self, int flag);
    
    /// <summary>Call the Fl_Check_Button_down_box function</summary>
    /// <param name="self">
    /// <inheritdoc cref="Fl_Check_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Check_Button_down_box", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Check_Button_down_box(IntPtr self);
    
    /// <summary>Call the Fl_Check_Button_set_compact function</summary>
    /// <param name="self">
    /// <inheritdoc cref="Fl_Check_Button_new" path="/returns" />
    /// </param>
    /// <param name="value"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Check_Button_set_compact", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Check_Button_set_compact(IntPtr self, char value);
    
    /// <summary>Call the Fl_Check_Button_compact function</summary>
    /// <param name="self">
    /// <inheritdoc cref="Fl_Check_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Check_Button_compact", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern char Fl_Check_Button_compact(IntPtr self);
    
    /// <summary>Call the Fl_Check_Button_is_checked function</summary>
    /// <param name="self">
    /// <inheritdoc cref="Fl_Check_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Check_Button_is_checked", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Check_Button_is_checked(IntPtr self);
    
    /// <summary>Call the Fl_Check_Button_set_checked function</summary>
    /// <param name="self">
    /// <inheritdoc cref="Fl_Check_Button_new" path="/returns" />
    /// </param>
    /// <param name="@checked"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Check_Button_set_checked", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Check_Button_set_checked(IntPtr self, int @checked);
    
    /// <summary>Call the Fl_Radio_Button_new function</summary>
    /// <param name="x"></param>
    /// <param name="y"></param>
    /// <param name="width"></param>
    /// <param name="height"></param>
    /// <param name="labelPointer"></param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Radio_Button_new", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Radio_Button_new(int x, int y, int width, int height, IntPtr labelPointer);
    
    /// <summary>Call the Fl_Radio_Button_x function</summary>
    /// <param name="widget">
    /// Pointer to <c>Fl_Radio_Button</c>
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Radio_Button_x", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Radio_Button_x(IntPtr widget);
    
    /// <summary>Call the Fl_Radio_Button_y function</summary>
    /// <param name="widget">
    /// Pointer to <c>Fl_Radio_Button</c>
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Radio_Button_y", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Radio_Button_y(IntPtr widget);
    
    /// <summary>Call the Fl_Radio_Button_width function</summary>
    /// <param name="widget">
    /// Pointer to <c>Fl_Radio_Button</c>
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Radio_Button_width", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Radio_Button_width(IntPtr widget);
    
    /// <summary>Call the Fl_Radio_Button_height function</summary>
    /// <param name="widget">
    /// Pointer to <c>Fl_Radio_Button</c>
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Radio_Button_height", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Radio_Button_height(IntPtr widget);
    
    /// <summary>Call the Fl_Radio_Button_label function</summary>
    /// <param name="widget">
    /// Pointer to <c>Fl_Radio_Button</c>
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Radio_Button_label", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Radio_Button_label(IntPtr widget);
    
    /// <summary>Call the Fl_Radio_Button_set_label function</summary>
    /// <param name="widget"></param>
    /// <param name="labelPointer">
    /// <inheritdoc cref="Fl_Widget_new" path="/param[@name='labelPointer']" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Radio_Button_set_label", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Radio_Button_set_label(IntPtr widget, IntPtr labelPointer);
    
    /// <summary>Call the Fl_Radio_Button_redraw function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Radio_Button_new" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Radio_Button_redraw", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Radio_Button_redraw(IntPtr widget);
    
    /// <summary>Call the Fl_Radio_Button_show function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Radio_Button_new" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Radio_Button_show", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Radio_Button_show(IntPtr widget);
    
    /// <summary>Call the Fl_Radio_Button_hide function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Radio_Button_new" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Radio_Button_hide", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Radio_Button_hide(IntPtr widget);
    
    /// <summary>Call the Fl_Radio_Button_activate function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Radio_Button_new" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Radio_Button_activate", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Radio_Button_activate(IntPtr widget);
    
    /// <summary>Call the Fl_Radio_Button_deactivate function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Radio_Button_new" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Radio_Button_deactivate", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Radio_Button_deactivate(IntPtr widget);
    
    /// <summary>Call the Fl_Radio_Button_redraw_label function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Radio_Button_new" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Radio_Button_redraw_label", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Radio_Button_redraw_label(IntPtr widget);
    
    /// <summary>Call the Fl_Radio_Button_resize function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Radio_Button_new" path="/returns" />
    /// </param>
    /// <param name="x"></param>
    /// <param name="y"></param>
    /// <param name="width"></param>
    /// <param name="height"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Radio_Button_resize", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Radio_Button_resize(IntPtr widget, int x, int y, int width, int height);
    
    /// <summary>Call the Fl_Radio_Button_widget_resize function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Radio_Button_new" path="/returns" />
    /// </param>
    /// <param name="x"></param>
    /// <param name="y"></param>
    /// <param name="width"></param>
    /// <param name="height"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Radio_Button_widget_resize", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Radio_Button_widget_resize(IntPtr widget, int x, int y, int width, int height);
    
    /// <summary>Call the Fl_Radio_Button_tooltip function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Radio_Button_new" path="/returns" />
    /// </param>
    /// <returns>
    /// <inheritdoc cref="Fl_Radio_Button_new" path="/param[@name='labelPointer']" />
    /// </returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Radio_Button_tooltip", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Radio_Button_tooltip(IntPtr widget);
    
    /// <summary>Call the Fl_Radio_Button_set_tooltip function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Radio_Button_new" path="/returns" />
    /// </param>
    /// <param name="tooltipPointer">
    /// <inheritdoc cref="Fl_Radio_Button_new" path="/param[@name='labelPointer']" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Radio_Button_set_tooltip", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Radio_Button_set_tooltip(IntPtr widget, IntPtr tooltipPointer);
    
    /// <summary>Call the Fl_Radio_Button_get_type function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Radio_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Radio_Button_get_type", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Radio_Button_get_type(IntPtr widget);
    
    /// <summary>Call the Fl_Radio_Button_set_type function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Radio_Button_new" path="/returns" />
    /// </param>
    /// <param name="type"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Radio_Button_set_type", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Radio_Button_set_type(IntPtr widget, int type);
    
    /// <summary>Call the Fl_Radio_Button_color function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Radio_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Radio_Button_color", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern uint Fl_Radio_Button_color(IntPtr widget);
    
    /// <summary>Call the Fl_Radio_Button_set_color function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Radio_Button_new" path="/returns" />
    /// </param>
    /// <param name="color"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Radio_Button_set_color", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Radio_Button_set_color(IntPtr widget, uint color);
    
    /// <summary>Call the Fl_Radio_Button_measure_label function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Radio_Button_new" path="/returns" />
    /// </param>
    /// <param name="width"></param>
    /// <param name="height"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Radio_Button_measure_label", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Radio_Button_measure_label(IntPtr widget, ref int width, ref int height);
    
    /// <summary>Call the Fl_Radio_Button_label_color function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Radio_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Radio_Button_label_color", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern uint Fl_Radio_Button_label_color(IntPtr widget);
    
    /// <summary>Call the Fl_Radio_Button_set_label_color function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Radio_Button_new" path="/returns" />
    /// </param>
    /// <param name="color">
    /// <inheritdoc cref="Fl_Radio_Button_label_color" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Radio_Button_set_label_color", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Radio_Button_set_label_color(IntPtr widget, uint color);
    
    /// <summary>Call the Fl_Radio_Button_label_font function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Radio_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Radio_Button_label_font", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Radio_Button_label_font(IntPtr widget);
    
    /// <summary>Call the Fl_Radio_Button_set_label_font function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Radio_Button_new" path="/returns" />
    /// </param>
    /// <param name="fontIndex"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Radio_Button_set_label_font", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Radio_Button_set_label_font(IntPtr widget, int fontIndex);
    
    /// <summary>Call the Fl_Radio_Button_label_size function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Radio_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Radio_Button_label_size", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Radio_Button_label_size(IntPtr widget);
    
    /// <summary>Call the Fl_Radio_Button_set_label_size function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Radio_Button_new" path="/returns" />
    /// </param>
    /// <param name="size">
    /// <inheritdoc cref="Fl_Radio_Button_label_size" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Radio_Button_set_label_size", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Radio_Button_set_label_size(IntPtr widget, int size);
    
    /// <summary>Call the Fl_Radio_Button_label_type function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Radio_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Radio_Button_label_type", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Radio_Button_label_type(IntPtr widget);
    
    /// <summary>Call the Fl_Radio_Button_set_label_type function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Radio_Button_new" path="/returns" />
    /// </param>
    /// <param name="size">
    /// <inheritdoc cref="Fl_Radio_Button_label_type" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Radio_Button_set_label_type", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Radio_Button_set_label_type(IntPtr widget, int size);
    
    /// <summary>Call the Fl_Radio_Button_box function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Radio_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Radio_Button_box", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Radio_Button_box(IntPtr widget);
    
    /// <summary>Call the Fl_Radio_Button_set_box function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Radio_Button_new" path="/returns" />
    /// </param>
    /// <param name="type"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Radio_Button_set_box", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Radio_Button_set_box(IntPtr widget, int type);
    
    /// <summary>Call the Fl_Radio_Button_changed function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Radio_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Radio_Button_changed", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Radio_Button_changed(IntPtr widget);
    
    /// <summary>Call the Fl_Radio_Button_set_changed function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Radio_Button_new" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Radio_Button_set_changed", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Radio_Button_set_changed(IntPtr widget);
    
    /// <summary>Call the Fl_Radio_Button_clear_changed function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Radio_Button_new" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Radio_Button_clear_changed", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Radio_Button_clear_changed(IntPtr widget);
    
    /// <summary>Call the Fl_Radio_Button_align function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Radio_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Radio_Button_align", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Radio_Button_align(IntPtr widget);
    
    /// <summary>Call the Fl_Radio_Button_set_align function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Radio_Button_new" path="/returns" />
    /// </param>
    /// <param name="type"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Radio_Button_set_align", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Radio_Button_set_align(IntPtr widget, int type);
    
    /// <summary>Call the Fl_Radio_Button_delete function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Radio_Button_new" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Radio_Button_delete", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Radio_Button_delete(IntPtr widget);
    
    /// <summary>Call the Fl_Radio_Button_set_image function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Radio_Button_new" path="/returns" />
    /// </param>
    /// <param name="imagePointer"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Radio_Button_set_image", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Radio_Button_set_image(IntPtr widget, IntPtr imagePointer);
    
    /// <summary>Call the Fl_Radio_Button_handle function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Radio_Button_new" path="/returns" />
    /// </param>
    /// <param name="callback"></param>
    /// <param name="data"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Radio_Button_handle", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Radio_Button_handle(IntPtr widget, FltkWidgetHandleCallback callback, IntPtr data);
    
    /// <summary>Call the Fl_Radio_Button_handle_event function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Radio_Button_new" path="/returns" />
    /// </param>
    /// <param name="eventType"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Radio_Button_handle_event", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Radio_Button_handle_event(IntPtr widget, int eventType);
    
    /// <summary>Call the Fl_Radio_Button_draw function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Radio_Button_new" path="/returns" />
    /// </param>
    /// <param name="callback"></param>
    /// <param name="data"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Radio_Button_draw", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Radio_Button_draw(IntPtr widget, FltkWidgetCallback callback, IntPtr data);
    
    /// <summary>Call the Fl_Radio_Button_resize_callback function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Radio_Button_new" path="/returns" />
    /// </param>
    /// <param name="callback"></param>
    /// <param name="data"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Radio_Button_resize_callback", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Radio_Button_resize_callback(IntPtr widget, FltkWidgetResizeCallback callback, IntPtr data);
    
    /// <summary>Call the Fl_Radio_Button_set_when function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Radio_Button_new" path="/returns" />
    /// </param>
    /// <param name="value"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Radio_Button_set_when", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Radio_Button_set_when(IntPtr widget, int value);
    
    /// <summary>Call the Fl_Radio_Button_when function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Radio_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Radio_Button_when", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Radio_Button_when(IntPtr widget);
    
    /// <summary>Call the Fl_Radio_Button_image function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Radio_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Radio_Button_image", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Radio_Button_image(IntPtr widget);
    
    /// <summary>Call the Fl_Radio_Button_parent function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Radio_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Radio_Button_parent", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Radio_Button_parent(IntPtr widget);
    
    /// <summary>Call the Fl_Radio_Button_selection_color function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Radio_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Radio_Button_selection_color", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern uint Fl_Radio_Button_selection_color(IntPtr widget);
    
    /// <summary>Call the Fl_Radio_Button_set_selection_color function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Radio_Button_new" path="/returns" />
    /// </param>
    /// <param name="color"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Radio_Button_set_selection_color", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Radio_Button_set_selection_color(IntPtr widget, uint color);
    
    /// <summary>Call the Fl_Radio_Button_inside function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Radio_Button_new" path="/returns" />
    /// </param>
    /// <param name="other"></param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Radio_Button_inside", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Radio_Button_inside(IntPtr widget, IntPtr other);
    
    /// <summary>Call the Fl_Radio_Button_window function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Radio_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Radio_Button_window", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Radio_Button_window(IntPtr widget);
    
    /// <summary>Call the Fl_Radio_Button_top_window function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Radio_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Radio_Button_top_window", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Radio_Button_top_window(IntPtr widget);
    
    /// <summary>Call the Fl_Radio_Button_takes_events function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Radio_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Radio_Button_takes_events", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Radio_Button_takes_events(IntPtr widget);
    
    /// <summary>Call the Fl_Radio_Button_user_data function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Radio_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Radio_Button_user_data", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Radio_Button_user_data(IntPtr widget);
    
    /// <summary>Call the Fl_Radio_Button_take_focus function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Radio_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Radio_Button_take_focus", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Radio_Button_take_focus(IntPtr widget);
    
    /// <summary>Call the Fl_Radio_Button_set_visible_focus function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Radio_Button_new" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Radio_Button_set_visible_focus", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Radio_Button_set_visible_focus(IntPtr widget);
    
    /// <summary>Call the Fl_Radio_Button_clear_visible_focus function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Radio_Button_new" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Radio_Button_clear_visible_focus", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Radio_Button_clear_visible_focus(IntPtr widget);
    
    /// <summary>Call the Fl_Radio_Button_visible_focus function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Radio_Button_new" path="/returns" />
    /// </param>
    /// <param name="value"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Radio_Button_visible_focus", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Radio_Button_visible_focus(IntPtr widget, int value);
    
    /// <summary>Call the Fl_Radio_Button_has_visible_focus function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Radio_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Radio_Button_has_visible_focus", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern uint Fl_Radio_Button_has_visible_focus(IntPtr widget);
    
    /// <summary>Call the Fl_Radio_Button_set_user_data function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Radio_Button_new" path="/returns" />
    /// </param>
    /// <param name="data"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Radio_Button_set_user_data", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Radio_Button_set_user_data(IntPtr widget, IntPtr data);
    
    /// <summary>Call the Fl_Radio_Button_draw_data function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Radio_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Radio_Button_draw_data", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Radio_Button_draw_data(IntPtr widget);
    
    /// <summary>Call the Fl_Radio_Button_handle_data function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Radio_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Radio_Button_handle_data", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Radio_Button_handle_data(IntPtr widget);
    
    /// <summary>Call the Fl_Radio_Button_set_draw_data function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Radio_Button_new" path="/returns" />
    /// </param>
    /// <param name="data"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Radio_Button_set_draw_data", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Radio_Button_set_draw_data(IntPtr widget, IntPtr data);
    
    /// <summary>Call the Fl_Radio_Button_set_handle_data function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Radio_Button_new" path="/returns" />
    /// </param>
    /// <param name="data"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Radio_Button_set_handle_data", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Radio_Button_set_handle_data(IntPtr widget, IntPtr data);
    
    /// <summary>Call the Fl_Radio_Button_damage function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Radio_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Radio_Button_damage", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern char Fl_Radio_Button_damage(IntPtr widget);
    
    /// <summary>Call the Fl_Radio_Button_set_damage function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Radio_Button_new" path="/returns" />
    /// </param>
    /// <param name="flag"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Radio_Button_set_damage", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Radio_Button_set_damage(IntPtr widget, char flag);
    
    /// <summary>Call the Fl_Radio_Button_set_damage_area function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Radio_Button_new" path="/returns" />
    /// </param>
    /// <param name="flag"></param>
    /// <param name="x"></param>
    /// <param name="y"></param>
    /// <param name="width"></param>
    /// <param name="height"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Radio_Button_set_damage_area", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Radio_Button_set_damage_area(IntPtr widget, char flag, int x, int y, int width, int height);
    
    /// <summary>Call the Fl_Radio_Button_clear_damage function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Radio_Button_new" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Radio_Button_clear_damage", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Radio_Button_clear_damage(IntPtr widget);
    
    /// <summary>Call the Fl_Radio_Button_as_window function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Radio_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Radio_Button_as_window", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Radio_Button_as_window(IntPtr widget);
    
    /// <summary>Call the Fl_Radio_Button_as_group function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Radio_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Radio_Button_as_group", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Radio_Button_as_group(IntPtr widget);
    
    /// <summary>Call the Fl_Radio_Button_set_deimage function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Radio_Button_new" path="/returns" />
    /// </param>
    /// <param name="imagePointer"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Radio_Button_set_deimage", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Radio_Button_set_deimage(IntPtr widget, IntPtr imagePointer);
    
    /// <summary>Call the Fl_Radio_Button_deimage function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Radio_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Radio_Button_deimage", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Radio_Button_deimage(IntPtr widget);
    
    /// <summary>Call the Fl_Radio_Button_set_callback function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Radio_Button_new" path="/returns" />
    /// </param>
    /// <param name="callback"></param>
    /// <param name="data"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Radio_Button_set_callback", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Radio_Button_set_callback(IntPtr widget, FltkWidgetCallback callback, IntPtr data);
    
    /// <summary>Call the Fl_Radio_Button_set_deleter function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Radio_Button_new" path="/returns" />
    /// </param>
    /// <param name="callback"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Radio_Button_set_deleter", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Radio_Button_set_deleter(IntPtr widget, Action<Action> callback);
    
    /// <summary>Call the Fl_Radio_Button_visible function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Radio_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Radio_Button_visible", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Radio_Button_visible(IntPtr widget);
    
    /// <summary>Call the Fl_Radio_Button_visible_r function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Radio_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Radio_Button_visible_r", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Radio_Button_visible_r(IntPtr widget);
    
    /// <summary>Call the Fl_Radio_Button_active function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Radio_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Radio_Button_active", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern uint Fl_Radio_Button_active(IntPtr widget);
    
    /// <summary>Call the Fl_Radio_Button_active_r function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Radio_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Radio_Button_active_r", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Radio_Button_active_r(IntPtr widget);
    
    /// <summary>Call the Fl_Radio_Button_callback function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Radio_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Radio_Button_callback", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern FltkWidgetCallback Fl_Radio_Button_callback(IntPtr widget);
    
    /// <summary>Call the Fl_Radio_Button_set_deletion_callback function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Radio_Button_new" path="/returns" />
    /// </param>
    /// <param name="callback"></param>
    /// <param name="data"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Radio_Button_set_deletion_callback", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Radio_Button_set_deletion_callback(IntPtr widget, FltkWidgetCallback callback, IntPtr data);
    
    /// <summary>Call the Fl_Radio_Button_from_dyn_ptr function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Widget_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Radio_Button_from_dyn_ptr", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Radio_Button_from_dyn_ptr(IntPtr widget);
    
    /// <summary>Call the Fl_Radio_Button_from_derived_dyn_ptr function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Widget_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Radio_Button_from_derived_dyn_ptr", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Radio_Button_from_derived_dyn_ptr(IntPtr widget);
    
    /// <summary>Call the Fl_Radio_Button_super_draw function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Widget_new" path="/returns" />
    /// </param>
    /// <param name="flag"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Radio_Button_super_draw", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Radio_Button_super_draw(IntPtr widget, int flag);
    
    /// <summary>Call the Fl_Radio_Button_super_draw_first function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Widget_new" path="/returns" />
    /// </param>
    /// <param name="flag"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Radio_Button_super_draw_first", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Radio_Button_super_draw_first(IntPtr widget, int flag);
    
    /// <summary>Call the Fl_Radio_Button_super_handle_first function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Widget_new" path="/returns" />
    /// </param>
    /// <param name="flag"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Radio_Button_super_handle_first", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Radio_Button_super_handle_first(IntPtr widget, int flag);
    
    /// <summary>Call the Fl_Radio_Button_shortcut function</summary>
    /// <param name="self">
    /// <inheritdoc cref="Fl_Radio_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Radio_Button_shortcut", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Radio_Button_shortcut(IntPtr self);
    
    /// <summary>Call the Fl_Radio_Button_set_shortcut function</summary>
    /// <param name="self">
    /// <inheritdoc cref="Fl_Radio_Button_new" path="/returns" />
    /// </param>
    /// <param name="shortcut"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Radio_Button_set_shortcut", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Radio_Button_set_shortcut(IntPtr self, int shortcut);
    
    /// <summary>Call the Fl_Radio_Button_clear function</summary>
    /// <param name="self">
    /// <inheritdoc cref="Fl_Radio_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Radio_Button_clear", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Radio_Button_clear(IntPtr self);
    
    /// <summary>Call the Fl_Radio_Button_value function</summary>
    /// <param name="self">
    /// <inheritdoc cref="Fl_Radio_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Radio_Button_value", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Radio_Button_value(IntPtr self);
    
    /// <summary>Call the Fl_Radio_Button_set_value function</summary>
    /// <param name="self">
    /// <inheritdoc cref="Fl_Radio_Button_new" path="/returns" />
    /// </param>
    /// <param name="flag"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Radio_Button_set_value", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Radio_Button_set_value(IntPtr self, int flag);
    
    /// <summary>Call the Fl_Radio_Button_set_down_box function</summary>
    /// <param name="self">
    /// <inheritdoc cref="Fl_Radio_Button_new" path="/returns" />
    /// </param>
    /// <param name="flag"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Radio_Button_set_down_box", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Radio_Button_set_down_box(IntPtr self, int flag);
    
    /// <summary>Call the Fl_Radio_Button_down_box function</summary>
    /// <param name="self">
    /// <inheritdoc cref="Fl_Radio_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Radio_Button_down_box", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Radio_Button_down_box(IntPtr self);
    
    /// <summary>Call the Fl_Radio_Button_set_compact function</summary>
    /// <param name="self">
    /// <inheritdoc cref="Fl_Radio_Button_new" path="/returns" />
    /// </param>
    /// <param name="value"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Radio_Button_set_compact", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Radio_Button_set_compact(IntPtr self, char value);
    
    /// <summary>Call the Fl_Radio_Button_compact function</summary>
    /// <param name="self">
    /// <inheritdoc cref="Fl_Radio_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Radio_Button_compact", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern char Fl_Radio_Button_compact(IntPtr self);
    
    /// <summary>Call the Fl_Radio_Button_is_toggled function</summary>
    /// <param name="self">
    /// <inheritdoc cref="Fl_Radio_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Radio_Button_is_toggled", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Radio_Button_is_toggled(IntPtr self);
    
    /// <summary>Call the Fl_Radio_Button_toggle function</summary>
    /// <param name="self">
    /// <inheritdoc cref="Fl_Radio_Button_new" path="/returns" />
    /// </param>
    /// <param name="value"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Radio_Button_toggle", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Radio_Button_toggle(IntPtr self, int value);
    
    /// <summary>Call the Fl_Toggle_Button_new function</summary>
    /// <param name="x"></param>
    /// <param name="y"></param>
    /// <param name="width"></param>
    /// <param name="height"></param>
    /// <param name="labelPointer"></param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Toggle_Button_new", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Toggle_Button_new(int x, int y, int width, int height, IntPtr labelPointer);
    
    /// <summary>Call the Fl_Toggle_Button_x function</summary>
    /// <param name="widget">
    /// Pointer to <c>Fl_Toggle_Button</c>
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Toggle_Button_x", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Toggle_Button_x(IntPtr widget);
    
    /// <summary>Call the Fl_Toggle_Button_y function</summary>
    /// <param name="widget">
    /// Pointer to <c>Fl_Toggle_Button</c>
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Toggle_Button_y", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Toggle_Button_y(IntPtr widget);
    
    /// <summary>Call the Fl_Toggle_Button_width function</summary>
    /// <param name="widget">
    /// Pointer to <c>Fl_Toggle_Button</c>
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Toggle_Button_width", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Toggle_Button_width(IntPtr widget);
    
    /// <summary>Call the Fl_Toggle_Button_height function</summary>
    /// <param name="widget">
    /// Pointer to <c>Fl_Toggle_Button</c>
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Toggle_Button_height", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Toggle_Button_height(IntPtr widget);
    
    /// <summary>Call the Fl_Toggle_Button_label function</summary>
    /// <param name="widget">
    /// Pointer to <c>Fl_Toggle_Button</c>
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Toggle_Button_label", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Toggle_Button_label(IntPtr widget);
    
    /// <summary>Call the Fl_Toggle_Button_set_label function</summary>
    /// <param name="widget"></param>
    /// <param name="labelPointer">
    /// <inheritdoc cref="Fl_Widget_new" path="/param[@name='labelPointer']" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Toggle_Button_set_label", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Toggle_Button_set_label(IntPtr widget, IntPtr labelPointer);
    
    /// <summary>Call the Fl_Toggle_Button_redraw function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Toggle_Button_new" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Toggle_Button_redraw", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Toggle_Button_redraw(IntPtr widget);
    
    /// <summary>Call the Fl_Toggle_Button_show function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Toggle_Button_new" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Toggle_Button_show", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Toggle_Button_show(IntPtr widget);
    
    /// <summary>Call the Fl_Toggle_Button_hide function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Toggle_Button_new" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Toggle_Button_hide", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Toggle_Button_hide(IntPtr widget);
    
    /// <summary>Call the Fl_Toggle_Button_activate function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Toggle_Button_new" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Toggle_Button_activate", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Toggle_Button_activate(IntPtr widget);
    
    /// <summary>Call the Fl_Toggle_Button_deactivate function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Toggle_Button_new" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Toggle_Button_deactivate", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Toggle_Button_deactivate(IntPtr widget);
    
    /// <summary>Call the Fl_Toggle_Button_redraw_label function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Toggle_Button_new" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Toggle_Button_redraw_label", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Toggle_Button_redraw_label(IntPtr widget);
    
    /// <summary>Call the Fl_Toggle_Button_resize function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Toggle_Button_new" path="/returns" />
    /// </param>
    /// <param name="x"></param>
    /// <param name="y"></param>
    /// <param name="width"></param>
    /// <param name="height"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Toggle_Button_resize", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Toggle_Button_resize(IntPtr widget, int x, int y, int width, int height);
    
    /// <summary>Call the Fl_Toggle_Button_widget_resize function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Toggle_Button_new" path="/returns" />
    /// </param>
    /// <param name="x"></param>
    /// <param name="y"></param>
    /// <param name="width"></param>
    /// <param name="height"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Toggle_Button_widget_resize", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Toggle_Button_widget_resize(IntPtr widget, int x, int y, int width, int height);
    
    /// <summary>Call the Fl_Toggle_Button_tooltip function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Toggle_Button_new" path="/returns" />
    /// </param>
    /// <returns>
    /// <inheritdoc cref="Fl_Toggle_Button_new" path="/param[@name='labelPointer']" />
    /// </returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Toggle_Button_tooltip", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Toggle_Button_tooltip(IntPtr widget);
    
    /// <summary>Call the Fl_Toggle_Button_set_tooltip function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Toggle_Button_new" path="/returns" />
    /// </param>
    /// <param name="tooltipPointer">
    /// <inheritdoc cref="Fl_Toggle_Button_new" path="/param[@name='labelPointer']" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Toggle_Button_set_tooltip", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Toggle_Button_set_tooltip(IntPtr widget, IntPtr tooltipPointer);
    
    /// <summary>Call the Fl_Toggle_Button_get_type function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Toggle_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Toggle_Button_get_type", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Toggle_Button_get_type(IntPtr widget);
    
    /// <summary>Call the Fl_Toggle_Button_set_type function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Toggle_Button_new" path="/returns" />
    /// </param>
    /// <param name="type"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Toggle_Button_set_type", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Toggle_Button_set_type(IntPtr widget, int type);
    
    /// <summary>Call the Fl_Toggle_Button_color function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Toggle_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Toggle_Button_color", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern uint Fl_Toggle_Button_color(IntPtr widget);
    
    /// <summary>Call the Fl_Toggle_Button_set_color function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Toggle_Button_new" path="/returns" />
    /// </param>
    /// <param name="color"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Toggle_Button_set_color", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Toggle_Button_set_color(IntPtr widget, uint color);
    
    /// <summary>Call the Fl_Toggle_Button_measure_label function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Toggle_Button_new" path="/returns" />
    /// </param>
    /// <param name="width"></param>
    /// <param name="height"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Toggle_Button_measure_label", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Toggle_Button_measure_label(IntPtr widget, ref int width, ref int height);
    
    /// <summary>Call the Fl_Toggle_Button_label_color function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Toggle_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Toggle_Button_label_color", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern uint Fl_Toggle_Button_label_color(IntPtr widget);
    
    /// <summary>Call the Fl_Toggle_Button_set_label_color function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Toggle_Button_new" path="/returns" />
    /// </param>
    /// <param name="color">
    /// <inheritdoc cref="Fl_Toggle_Button_label_color" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Toggle_Button_set_label_color", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Toggle_Button_set_label_color(IntPtr widget, uint color);
    
    /// <summary>Call the Fl_Toggle_Button_label_font function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Toggle_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Toggle_Button_label_font", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Toggle_Button_label_font(IntPtr widget);
    
    /// <summary>Call the Fl_Toggle_Button_set_label_font function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Toggle_Button_new" path="/returns" />
    /// </param>
    /// <param name="fontIndex"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Toggle_Button_set_label_font", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Toggle_Button_set_label_font(IntPtr widget, int fontIndex);
    
    /// <summary>Call the Fl_Toggle_Button_label_size function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Toggle_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Toggle_Button_label_size", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Toggle_Button_label_size(IntPtr widget);
    
    /// <summary>Call the Fl_Toggle_Button_set_label_size function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Toggle_Button_new" path="/returns" />
    /// </param>
    /// <param name="size">
    /// <inheritdoc cref="Fl_Toggle_Button_label_size" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Toggle_Button_set_label_size", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Toggle_Button_set_label_size(IntPtr widget, int size);
    
    /// <summary>Call the Fl_Toggle_Button_label_type function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Toggle_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Toggle_Button_label_type", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Toggle_Button_label_type(IntPtr widget);
    
    /// <summary>Call the Fl_Toggle_Button_set_label_type function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Toggle_Button_new" path="/returns" />
    /// </param>
    /// <param name="size">
    /// <inheritdoc cref="Fl_Toggle_Button_label_type" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Toggle_Button_set_label_type", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Toggle_Button_set_label_type(IntPtr widget, int size);
    
    /// <summary>Call the Fl_Toggle_Button_box function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Toggle_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Toggle_Button_box", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Toggle_Button_box(IntPtr widget);
    
    /// <summary>Call the Fl_Toggle_Button_set_box function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Toggle_Button_new" path="/returns" />
    /// </param>
    /// <param name="type"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Toggle_Button_set_box", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Toggle_Button_set_box(IntPtr widget, int type);
    
    /// <summary>Call the Fl_Toggle_Button_changed function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Toggle_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Toggle_Button_changed", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Toggle_Button_changed(IntPtr widget);
    
    /// <summary>Call the Fl_Toggle_Button_set_changed function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Toggle_Button_new" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Toggle_Button_set_changed", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Toggle_Button_set_changed(IntPtr widget);
    
    /// <summary>Call the Fl_Toggle_Button_clear_changed function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Toggle_Button_new" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Toggle_Button_clear_changed", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Toggle_Button_clear_changed(IntPtr widget);
    
    /// <summary>Call the Fl_Toggle_Button_align function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Toggle_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Toggle_Button_align", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Toggle_Button_align(IntPtr widget);
    
    /// <summary>Call the Fl_Toggle_Button_set_align function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Toggle_Button_new" path="/returns" />
    /// </param>
    /// <param name="type"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Toggle_Button_set_align", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Toggle_Button_set_align(IntPtr widget, int type);
    
    /// <summary>Call the Fl_Toggle_Button_delete function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Toggle_Button_new" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Toggle_Button_delete", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Toggle_Button_delete(IntPtr widget);
    
    /// <summary>Call the Fl_Toggle_Button_set_image function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Toggle_Button_new" path="/returns" />
    /// </param>
    /// <param name="imagePointer"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Toggle_Button_set_image", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Toggle_Button_set_image(IntPtr widget, IntPtr imagePointer);
    
    /// <summary>Call the Fl_Toggle_Button_handle function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Toggle_Button_new" path="/returns" />
    /// </param>
    /// <param name="callback"></param>
    /// <param name="data"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Toggle_Button_handle", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Toggle_Button_handle(IntPtr widget, FltkWidgetHandleCallback callback, IntPtr data);
    
    /// <summary>Call the Fl_Toggle_Button_handle_event function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Toggle_Button_new" path="/returns" />
    /// </param>
    /// <param name="eventType"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Toggle_Button_handle_event", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Toggle_Button_handle_event(IntPtr widget, int eventType);
    
    /// <summary>Call the Fl_Toggle_Button_draw function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Toggle_Button_new" path="/returns" />
    /// </param>
    /// <param name="callback"></param>
    /// <param name="data"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Toggle_Button_draw", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Toggle_Button_draw(IntPtr widget, FltkWidgetCallback callback, IntPtr data);
    
    /// <summary>Call the Fl_Toggle_Button_resize_callback function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Toggle_Button_new" path="/returns" />
    /// </param>
    /// <param name="callback"></param>
    /// <param name="data"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Toggle_Button_resize_callback", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Toggle_Button_resize_callback(IntPtr widget, FltkWidgetResizeCallback callback, IntPtr data);
    
    /// <summary>Call the Fl_Toggle_Button_set_when function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Toggle_Button_new" path="/returns" />
    /// </param>
    /// <param name="value"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Toggle_Button_set_when", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Toggle_Button_set_when(IntPtr widget, int value);
    
    /// <summary>Call the Fl_Toggle_Button_when function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Toggle_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Toggle_Button_when", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Toggle_Button_when(IntPtr widget);
    
    /// <summary>Call the Fl_Toggle_Button_image function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Toggle_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Toggle_Button_image", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Toggle_Button_image(IntPtr widget);
    
    /// <summary>Call the Fl_Toggle_Button_parent function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Toggle_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Toggle_Button_parent", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Toggle_Button_parent(IntPtr widget);
    
    /// <summary>Call the Fl_Toggle_Button_selection_color function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Toggle_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Toggle_Button_selection_color", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern uint Fl_Toggle_Button_selection_color(IntPtr widget);
    
    /// <summary>Call the Fl_Toggle_Button_set_selection_color function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Toggle_Button_new" path="/returns" />
    /// </param>
    /// <param name="color"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Toggle_Button_set_selection_color", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Toggle_Button_set_selection_color(IntPtr widget, uint color);
    
    /// <summary>Call the Fl_Toggle_Button_inside function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Toggle_Button_new" path="/returns" />
    /// </param>
    /// <param name="other"></param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Toggle_Button_inside", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Toggle_Button_inside(IntPtr widget, IntPtr other);
    
    /// <summary>Call the Fl_Toggle_Button_window function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Toggle_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Toggle_Button_window", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Toggle_Button_window(IntPtr widget);
    
    /// <summary>Call the Fl_Toggle_Button_top_window function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Toggle_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Toggle_Button_top_window", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Toggle_Button_top_window(IntPtr widget);
    
    /// <summary>Call the Fl_Toggle_Button_takes_events function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Toggle_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Toggle_Button_takes_events", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Toggle_Button_takes_events(IntPtr widget);
    
    /// <summary>Call the Fl_Toggle_Button_user_data function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Toggle_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Toggle_Button_user_data", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Toggle_Button_user_data(IntPtr widget);
    
    /// <summary>Call the Fl_Toggle_Button_take_focus function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Toggle_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Toggle_Button_take_focus", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Toggle_Button_take_focus(IntPtr widget);
    
    /// <summary>Call the Fl_Toggle_Button_set_visible_focus function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Toggle_Button_new" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Toggle_Button_set_visible_focus", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Toggle_Button_set_visible_focus(IntPtr widget);
    
    /// <summary>Call the Fl_Toggle_Button_clear_visible_focus function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Toggle_Button_new" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Toggle_Button_clear_visible_focus", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Toggle_Button_clear_visible_focus(IntPtr widget);
    
    /// <summary>Call the Fl_Toggle_Button_visible_focus function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Toggle_Button_new" path="/returns" />
    /// </param>
    /// <param name="value"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Toggle_Button_visible_focus", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Toggle_Button_visible_focus(IntPtr widget, int value);
    
    /// <summary>Call the Fl_Toggle_Button_has_visible_focus function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Toggle_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Toggle_Button_has_visible_focus", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern uint Fl_Toggle_Button_has_visible_focus(IntPtr widget);
    
    /// <summary>Call the Fl_Toggle_Button_set_user_data function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Toggle_Button_new" path="/returns" />
    /// </param>
    /// <param name="data"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Toggle_Button_set_user_data", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Toggle_Button_set_user_data(IntPtr widget, IntPtr data);
    
    /// <summary>Call the Fl_Toggle_Button_draw_data function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Toggle_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Toggle_Button_draw_data", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Toggle_Button_draw_data(IntPtr widget);
    
    /// <summary>Call the Fl_Toggle_Button_handle_data function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Toggle_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Toggle_Button_handle_data", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Toggle_Button_handle_data(IntPtr widget);
    
    /// <summary>Call the Fl_Toggle_Button_set_draw_data function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Toggle_Button_new" path="/returns" />
    /// </param>
    /// <param name="data"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Toggle_Button_set_draw_data", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Toggle_Button_set_draw_data(IntPtr widget, IntPtr data);
    
    /// <summary>Call the Fl_Toggle_Button_set_handle_data function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Toggle_Button_new" path="/returns" />
    /// </param>
    /// <param name="data"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Toggle_Button_set_handle_data", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Toggle_Button_set_handle_data(IntPtr widget, IntPtr data);
    
    /// <summary>Call the Fl_Toggle_Button_damage function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Toggle_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Toggle_Button_damage", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern char Fl_Toggle_Button_damage(IntPtr widget);
    
    /// <summary>Call the Fl_Toggle_Button_set_damage function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Toggle_Button_new" path="/returns" />
    /// </param>
    /// <param name="flag"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Toggle_Button_set_damage", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Toggle_Button_set_damage(IntPtr widget, char flag);
    
    /// <summary>Call the Fl_Toggle_Button_set_damage_area function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Toggle_Button_new" path="/returns" />
    /// </param>
    /// <param name="flag"></param>
    /// <param name="x"></param>
    /// <param name="y"></param>
    /// <param name="width"></param>
    /// <param name="height"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Toggle_Button_set_damage_area", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Toggle_Button_set_damage_area(IntPtr widget, char flag, int x, int y, int width, int height);
    
    /// <summary>Call the Fl_Toggle_Button_clear_damage function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Toggle_Button_new" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Toggle_Button_clear_damage", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Toggle_Button_clear_damage(IntPtr widget);
    
    /// <summary>Call the Fl_Toggle_Button_as_window function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Toggle_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Toggle_Button_as_window", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Toggle_Button_as_window(IntPtr widget);
    
    /// <summary>Call the Fl_Toggle_Button_as_group function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Toggle_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Toggle_Button_as_group", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Toggle_Button_as_group(IntPtr widget);
    
    /// <summary>Call the Fl_Toggle_Button_set_deimage function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Toggle_Button_new" path="/returns" />
    /// </param>
    /// <param name="imagePointer"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Toggle_Button_set_deimage", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Toggle_Button_set_deimage(IntPtr widget, IntPtr imagePointer);
    
    /// <summary>Call the Fl_Toggle_Button_deimage function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Toggle_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Toggle_Button_deimage", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Toggle_Button_deimage(IntPtr widget);
    
    /// <summary>Call the Fl_Toggle_Button_set_callback function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Toggle_Button_new" path="/returns" />
    /// </param>
    /// <param name="callback"></param>
    /// <param name="data"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Toggle_Button_set_callback", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Toggle_Button_set_callback(IntPtr widget, FltkWidgetCallback callback, IntPtr data);
    
    /// <summary>Call the Fl_Toggle_Button_set_deleter function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Toggle_Button_new" path="/returns" />
    /// </param>
    /// <param name="callback"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Toggle_Button_set_deleter", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Toggle_Button_set_deleter(IntPtr widget, Action<Action> callback);
    
    /// <summary>Call the Fl_Toggle_Button_visible function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Toggle_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Toggle_Button_visible", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Toggle_Button_visible(IntPtr widget);
    
    /// <summary>Call the Fl_Toggle_Button_visible_r function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Toggle_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Toggle_Button_visible_r", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Toggle_Button_visible_r(IntPtr widget);
    
    /// <summary>Call the Fl_Toggle_Button_active function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Toggle_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Toggle_Button_active", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern uint Fl_Toggle_Button_active(IntPtr widget);
    
    /// <summary>Call the Fl_Toggle_Button_active_r function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Toggle_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Toggle_Button_active_r", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Toggle_Button_active_r(IntPtr widget);
    
    /// <summary>Call the Fl_Toggle_Button_callback function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Toggle_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Toggle_Button_callback", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern FltkWidgetCallback Fl_Toggle_Button_callback(IntPtr widget);
    
    /// <summary>Call the Fl_Toggle_Button_set_deletion_callback function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Toggle_Button_new" path="/returns" />
    /// </param>
    /// <param name="callback"></param>
    /// <param name="data"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Toggle_Button_set_deletion_callback", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Toggle_Button_set_deletion_callback(IntPtr widget, FltkWidgetCallback callback, IntPtr data);
    
    /// <summary>Call the Fl_Toggle_Button_from_dyn_ptr function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Widget_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Toggle_Button_from_dyn_ptr", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Toggle_Button_from_dyn_ptr(IntPtr widget);
    
    /// <summary>Call the Fl_Toggle_Button_from_derived_dyn_ptr function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Widget_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Toggle_Button_from_derived_dyn_ptr", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Toggle_Button_from_derived_dyn_ptr(IntPtr widget);
    
    /// <summary>Call the Fl_Toggle_Button_super_draw function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Widget_new" path="/returns" />
    /// </param>
    /// <param name="flag"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Toggle_Button_super_draw", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Toggle_Button_super_draw(IntPtr widget, int flag);
    
    /// <summary>Call the Fl_Toggle_Button_super_draw_first function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Widget_new" path="/returns" />
    /// </param>
    /// <param name="flag"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Toggle_Button_super_draw_first", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Toggle_Button_super_draw_first(IntPtr widget, int flag);
    
    /// <summary>Call the Fl_Toggle_Button_super_handle_first function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Widget_new" path="/returns" />
    /// </param>
    /// <param name="flag"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Toggle_Button_super_handle_first", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Toggle_Button_super_handle_first(IntPtr widget, int flag);
    
    /// <summary>Call the Fl_Toggle_Button_shortcut function</summary>
    /// <param name="self">
    /// <inheritdoc cref="Fl_Toggle_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Toggle_Button_shortcut", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Toggle_Button_shortcut(IntPtr self);
    
    /// <summary>Call the Fl_Toggle_Button_set_shortcut function</summary>
    /// <param name="self">
    /// <inheritdoc cref="Fl_Toggle_Button_new" path="/returns" />
    /// </param>
    /// <param name="shortcut"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Toggle_Button_set_shortcut", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Toggle_Button_set_shortcut(IntPtr self, int shortcut);
    
    /// <summary>Call the Fl_Toggle_Button_clear function</summary>
    /// <param name="self">
    /// <inheritdoc cref="Fl_Toggle_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Toggle_Button_clear", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Toggle_Button_clear(IntPtr self);
    
    /// <summary>Call the Fl_Toggle_Button_value function</summary>
    /// <param name="self">
    /// <inheritdoc cref="Fl_Toggle_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Toggle_Button_value", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Toggle_Button_value(IntPtr self);
    
    /// <summary>Call the Fl_Toggle_Button_set_value function</summary>
    /// <param name="self">
    /// <inheritdoc cref="Fl_Toggle_Button_new" path="/returns" />
    /// </param>
    /// <param name="flag"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Toggle_Button_set_value", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Toggle_Button_set_value(IntPtr self, int flag);
    
    /// <summary>Call the Fl_Toggle_Button_set_down_box function</summary>
    /// <param name="self">
    /// <inheritdoc cref="Fl_Toggle_Button_new" path="/returns" />
    /// </param>
    /// <param name="flag"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Toggle_Button_set_down_box", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Toggle_Button_set_down_box(IntPtr self, int flag);
    
    /// <summary>Call the Fl_Toggle_Button_down_box function</summary>
    /// <param name="self">
    /// <inheritdoc cref="Fl_Toggle_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Toggle_Button_down_box", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Toggle_Button_down_box(IntPtr self);
    
    /// <summary>Call the Fl_Toggle_Button_set_compact function</summary>
    /// <param name="self">
    /// <inheritdoc cref="Fl_Toggle_Button_new" path="/returns" />
    /// </param>
    /// <param name="value"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Toggle_Button_set_compact", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Toggle_Button_set_compact(IntPtr self, char value);
    
    /// <summary>Call the Fl_Toggle_Button_compact function</summary>
    /// <param name="self">
    /// <inheritdoc cref="Fl_Toggle_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Toggle_Button_compact", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern char Fl_Toggle_Button_compact(IntPtr self);
    
    /// <summary>Call the Fl_Toggle_Button_is_toggled function</summary>
    /// <param name="self">
    /// <inheritdoc cref="Fl_Toggle_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Toggle_Button_is_toggled", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Toggle_Button_is_toggled(IntPtr self);
    
    /// <summary>Call the Fl_Toggle_Button_toggle function</summary>
    /// <param name="self">
    /// <inheritdoc cref="Fl_Toggle_Button_new" path="/returns" />
    /// </param>
    /// <param name="value"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Toggle_Button_toggle", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Toggle_Button_toggle(IntPtr self, int value);
    
    /// <summary>Call the Fl_Round_Button_new function</summary>
    /// <param name="x"></param>
    /// <param name="y"></param>
    /// <param name="width"></param>
    /// <param name="height"></param>
    /// <param name="labelPointer"></param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Round_Button_new", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Round_Button_new(int x, int y, int width, int height, IntPtr labelPointer);
    
    /// <summary>Call the Fl_Round_Button_x function</summary>
    /// <param name="widget">
    /// Pointer to <c>Fl_Round_Button</c>
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Round_Button_x", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Round_Button_x(IntPtr widget);
    
    /// <summary>Call the Fl_Round_Button_y function</summary>
    /// <param name="widget">
    /// Pointer to <c>Fl_Round_Button</c>
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Round_Button_y", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Round_Button_y(IntPtr widget);
    
    /// <summary>Call the Fl_Round_Button_width function</summary>
    /// <param name="widget">
    /// Pointer to <c>Fl_Round_Button</c>
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Round_Button_width", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Round_Button_width(IntPtr widget);
    
    /// <summary>Call the Fl_Round_Button_height function</summary>
    /// <param name="widget">
    /// Pointer to <c>Fl_Round_Button</c>
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Round_Button_height", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Round_Button_height(IntPtr widget);
    
    /// <summary>Call the Fl_Round_Button_label function</summary>
    /// <param name="widget">
    /// Pointer to <c>Fl_Round_Button</c>
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Round_Button_label", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Round_Button_label(IntPtr widget);
    
    /// <summary>Call the Fl_Round_Button_set_label function</summary>
    /// <param name="widget"></param>
    /// <param name="labelPointer">
    /// <inheritdoc cref="Fl_Widget_new" path="/param[@name='labelPointer']" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Round_Button_set_label", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Round_Button_set_label(IntPtr widget, IntPtr labelPointer);
    
    /// <summary>Call the Fl_Round_Button_redraw function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Round_Button_new" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Round_Button_redraw", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Round_Button_redraw(IntPtr widget);
    
    /// <summary>Call the Fl_Round_Button_show function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Round_Button_new" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Round_Button_show", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Round_Button_show(IntPtr widget);
    
    /// <summary>Call the Fl_Round_Button_hide function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Round_Button_new" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Round_Button_hide", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Round_Button_hide(IntPtr widget);
    
    /// <summary>Call the Fl_Round_Button_activate function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Round_Button_new" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Round_Button_activate", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Round_Button_activate(IntPtr widget);
    
    /// <summary>Call the Fl_Round_Button_deactivate function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Round_Button_new" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Round_Button_deactivate", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Round_Button_deactivate(IntPtr widget);
    
    /// <summary>Call the Fl_Round_Button_redraw_label function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Round_Button_new" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Round_Button_redraw_label", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Round_Button_redraw_label(IntPtr widget);
    
    /// <summary>Call the Fl_Round_Button_resize function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Round_Button_new" path="/returns" />
    /// </param>
    /// <param name="x"></param>
    /// <param name="y"></param>
    /// <param name="width"></param>
    /// <param name="height"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Round_Button_resize", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Round_Button_resize(IntPtr widget, int x, int y, int width, int height);
    
    /// <summary>Call the Fl_Round_Button_widget_resize function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Round_Button_new" path="/returns" />
    /// </param>
    /// <param name="x"></param>
    /// <param name="y"></param>
    /// <param name="width"></param>
    /// <param name="height"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Round_Button_widget_resize", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Round_Button_widget_resize(IntPtr widget, int x, int y, int width, int height);
    
    /// <summary>Call the Fl_Round_Button_tooltip function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Round_Button_new" path="/returns" />
    /// </param>
    /// <returns>
    /// <inheritdoc cref="Fl_Round_Button_new" path="/param[@name='labelPointer']" />
    /// </returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Round_Button_tooltip", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Round_Button_tooltip(IntPtr widget);
    
    /// <summary>Call the Fl_Round_Button_set_tooltip function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Round_Button_new" path="/returns" />
    /// </param>
    /// <param name="tooltipPointer">
    /// <inheritdoc cref="Fl_Round_Button_new" path="/param[@name='labelPointer']" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Round_Button_set_tooltip", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Round_Button_set_tooltip(IntPtr widget, IntPtr tooltipPointer);
    
    /// <summary>Call the Fl_Round_Button_get_type function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Round_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Round_Button_get_type", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Round_Button_get_type(IntPtr widget);
    
    /// <summary>Call the Fl_Round_Button_set_type function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Round_Button_new" path="/returns" />
    /// </param>
    /// <param name="type"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Round_Button_set_type", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Round_Button_set_type(IntPtr widget, int type);
    
    /// <summary>Call the Fl_Round_Button_color function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Round_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Round_Button_color", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern uint Fl_Round_Button_color(IntPtr widget);
    
    /// <summary>Call the Fl_Round_Button_set_color function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Round_Button_new" path="/returns" />
    /// </param>
    /// <param name="color"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Round_Button_set_color", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Round_Button_set_color(IntPtr widget, uint color);
    
    /// <summary>Call the Fl_Round_Button_measure_label function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Round_Button_new" path="/returns" />
    /// </param>
    /// <param name="width"></param>
    /// <param name="height"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Round_Button_measure_label", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Round_Button_measure_label(IntPtr widget, ref int width, ref int height);
    
    /// <summary>Call the Fl_Round_Button_label_color function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Round_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Round_Button_label_color", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern uint Fl_Round_Button_label_color(IntPtr widget);
    
    /// <summary>Call the Fl_Round_Button_set_label_color function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Round_Button_new" path="/returns" />
    /// </param>
    /// <param name="color">
    /// <inheritdoc cref="Fl_Round_Button_label_color" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Round_Button_set_label_color", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Round_Button_set_label_color(IntPtr widget, uint color);
    
    /// <summary>Call the Fl_Round_Button_label_font function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Round_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Round_Button_label_font", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Round_Button_label_font(IntPtr widget);
    
    /// <summary>Call the Fl_Round_Button_set_label_font function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Round_Button_new" path="/returns" />
    /// </param>
    /// <param name="fontIndex"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Round_Button_set_label_font", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Round_Button_set_label_font(IntPtr widget, int fontIndex);
    
    /// <summary>Call the Fl_Round_Button_label_size function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Round_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Round_Button_label_size", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Round_Button_label_size(IntPtr widget);
    
    /// <summary>Call the Fl_Round_Button_set_label_size function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Round_Button_new" path="/returns" />
    /// </param>
    /// <param name="size">
    /// <inheritdoc cref="Fl_Round_Button_label_size" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Round_Button_set_label_size", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Round_Button_set_label_size(IntPtr widget, int size);
    
    /// <summary>Call the Fl_Round_Button_label_type function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Round_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Round_Button_label_type", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Round_Button_label_type(IntPtr widget);
    
    /// <summary>Call the Fl_Round_Button_set_label_type function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Round_Button_new" path="/returns" />
    /// </param>
    /// <param name="size">
    /// <inheritdoc cref="Fl_Round_Button_label_type" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Round_Button_set_label_type", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Round_Button_set_label_type(IntPtr widget, int size);
    
    /// <summary>Call the Fl_Round_Button_box function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Round_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Round_Button_box", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Round_Button_box(IntPtr widget);
    
    /// <summary>Call the Fl_Round_Button_set_box function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Round_Button_new" path="/returns" />
    /// </param>
    /// <param name="type"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Round_Button_set_box", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Round_Button_set_box(IntPtr widget, int type);
    
    /// <summary>Call the Fl_Round_Button_changed function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Round_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Round_Button_changed", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Round_Button_changed(IntPtr widget);
    
    /// <summary>Call the Fl_Round_Button_set_changed function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Round_Button_new" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Round_Button_set_changed", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Round_Button_set_changed(IntPtr widget);
    
    /// <summary>Call the Fl_Round_Button_clear_changed function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Round_Button_new" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Round_Button_clear_changed", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Round_Button_clear_changed(IntPtr widget);
    
    /// <summary>Call the Fl_Round_Button_align function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Round_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Round_Button_align", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Round_Button_align(IntPtr widget);
    
    /// <summary>Call the Fl_Round_Button_set_align function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Round_Button_new" path="/returns" />
    /// </param>
    /// <param name="type"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Round_Button_set_align", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Round_Button_set_align(IntPtr widget, int type);
    
    /// <summary>Call the Fl_Round_Button_delete function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Round_Button_new" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Round_Button_delete", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Round_Button_delete(IntPtr widget);
    
    /// <summary>Call the Fl_Round_Button_set_image function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Round_Button_new" path="/returns" />
    /// </param>
    /// <param name="imagePointer"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Round_Button_set_image", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Round_Button_set_image(IntPtr widget, IntPtr imagePointer);
    
    /// <summary>Call the Fl_Round_Button_handle function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Round_Button_new" path="/returns" />
    /// </param>
    /// <param name="callback"></param>
    /// <param name="data"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Round_Button_handle", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Round_Button_handle(IntPtr widget, FltkWidgetHandleCallback callback, IntPtr data);
    
    /// <summary>Call the Fl_Round_Button_handle_event function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Round_Button_new" path="/returns" />
    /// </param>
    /// <param name="eventType"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Round_Button_handle_event", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Round_Button_handle_event(IntPtr widget, int eventType);
    
    /// <summary>Call the Fl_Round_Button_draw function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Round_Button_new" path="/returns" />
    /// </param>
    /// <param name="callback"></param>
    /// <param name="data"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Round_Button_draw", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Round_Button_draw(IntPtr widget, FltkWidgetCallback callback, IntPtr data);
    
    /// <summary>Call the Fl_Round_Button_resize_callback function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Round_Button_new" path="/returns" />
    /// </param>
    /// <param name="callback"></param>
    /// <param name="data"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Round_Button_resize_callback", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Round_Button_resize_callback(IntPtr widget, FltkWidgetResizeCallback callback, IntPtr data);
    
    /// <summary>Call the Fl_Round_Button_set_when function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Round_Button_new" path="/returns" />
    /// </param>
    /// <param name="value"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Round_Button_set_when", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Round_Button_set_when(IntPtr widget, int value);
    
    /// <summary>Call the Fl_Round_Button_when function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Round_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Round_Button_when", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Round_Button_when(IntPtr widget);
    
    /// <summary>Call the Fl_Round_Button_image function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Round_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Round_Button_image", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Round_Button_image(IntPtr widget);
    
    /// <summary>Call the Fl_Round_Button_parent function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Round_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Round_Button_parent", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Round_Button_parent(IntPtr widget);
    
    /// <summary>Call the Fl_Round_Button_selection_color function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Round_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Round_Button_selection_color", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern uint Fl_Round_Button_selection_color(IntPtr widget);
    
    /// <summary>Call the Fl_Round_Button_set_selection_color function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Round_Button_new" path="/returns" />
    /// </param>
    /// <param name="color"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Round_Button_set_selection_color", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Round_Button_set_selection_color(IntPtr widget, uint color);
    
    /// <summary>Call the Fl_Round_Button_inside function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Round_Button_new" path="/returns" />
    /// </param>
    /// <param name="other"></param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Round_Button_inside", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Round_Button_inside(IntPtr widget, IntPtr other);
    
    /// <summary>Call the Fl_Round_Button_window function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Round_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Round_Button_window", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Round_Button_window(IntPtr widget);
    
    /// <summary>Call the Fl_Round_Button_top_window function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Round_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Round_Button_top_window", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Round_Button_top_window(IntPtr widget);
    
    /// <summary>Call the Fl_Round_Button_takes_events function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Round_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Round_Button_takes_events", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Round_Button_takes_events(IntPtr widget);
    
    /// <summary>Call the Fl_Round_Button_user_data function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Round_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Round_Button_user_data", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Round_Button_user_data(IntPtr widget);
    
    /// <summary>Call the Fl_Round_Button_take_focus function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Round_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Round_Button_take_focus", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Round_Button_take_focus(IntPtr widget);
    
    /// <summary>Call the Fl_Round_Button_set_visible_focus function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Round_Button_new" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Round_Button_set_visible_focus", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Round_Button_set_visible_focus(IntPtr widget);
    
    /// <summary>Call the Fl_Round_Button_clear_visible_focus function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Round_Button_new" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Round_Button_clear_visible_focus", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Round_Button_clear_visible_focus(IntPtr widget);
    
    /// <summary>Call the Fl_Round_Button_visible_focus function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Round_Button_new" path="/returns" />
    /// </param>
    /// <param name="value"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Round_Button_visible_focus", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Round_Button_visible_focus(IntPtr widget, int value);
    
    /// <summary>Call the Fl_Round_Button_has_visible_focus function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Round_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Round_Button_has_visible_focus", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern uint Fl_Round_Button_has_visible_focus(IntPtr widget);
    
    /// <summary>Call the Fl_Round_Button_set_user_data function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Round_Button_new" path="/returns" />
    /// </param>
    /// <param name="data"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Round_Button_set_user_data", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Round_Button_set_user_data(IntPtr widget, IntPtr data);
    
    /// <summary>Call the Fl_Round_Button_draw_data function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Round_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Round_Button_draw_data", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Round_Button_draw_data(IntPtr widget);
    
    /// <summary>Call the Fl_Round_Button_handle_data function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Round_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Round_Button_handle_data", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Round_Button_handle_data(IntPtr widget);
    
    /// <summary>Call the Fl_Round_Button_set_draw_data function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Round_Button_new" path="/returns" />
    /// </param>
    /// <param name="data"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Round_Button_set_draw_data", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Round_Button_set_draw_data(IntPtr widget, IntPtr data);
    
    /// <summary>Call the Fl_Round_Button_set_handle_data function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Round_Button_new" path="/returns" />
    /// </param>
    /// <param name="data"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Round_Button_set_handle_data", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Round_Button_set_handle_data(IntPtr widget, IntPtr data);
    
    /// <summary>Call the Fl_Round_Button_damage function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Round_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Round_Button_damage", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern char Fl_Round_Button_damage(IntPtr widget);
    
    /// <summary>Call the Fl_Round_Button_set_damage function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Round_Button_new" path="/returns" />
    /// </param>
    /// <param name="flag"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Round_Button_set_damage", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Round_Button_set_damage(IntPtr widget, char flag);
    
    /// <summary>Call the Fl_Round_Button_set_damage_area function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Round_Button_new" path="/returns" />
    /// </param>
    /// <param name="flag"></param>
    /// <param name="x"></param>
    /// <param name="y"></param>
    /// <param name="width"></param>
    /// <param name="height"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Round_Button_set_damage_area", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Round_Button_set_damage_area(IntPtr widget, char flag, int x, int y, int width, int height);
    
    /// <summary>Call the Fl_Round_Button_clear_damage function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Round_Button_new" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Round_Button_clear_damage", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Round_Button_clear_damage(IntPtr widget);
    
    /// <summary>Call the Fl_Round_Button_as_window function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Round_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Round_Button_as_window", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Round_Button_as_window(IntPtr widget);
    
    /// <summary>Call the Fl_Round_Button_as_group function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Round_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Round_Button_as_group", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Round_Button_as_group(IntPtr widget);
    
    /// <summary>Call the Fl_Round_Button_set_deimage function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Round_Button_new" path="/returns" />
    /// </param>
    /// <param name="imagePointer"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Round_Button_set_deimage", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Round_Button_set_deimage(IntPtr widget, IntPtr imagePointer);
    
    /// <summary>Call the Fl_Round_Button_deimage function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Round_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Round_Button_deimage", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Round_Button_deimage(IntPtr widget);
    
    /// <summary>Call the Fl_Round_Button_set_callback function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Round_Button_new" path="/returns" />
    /// </param>
    /// <param name="callback"></param>
    /// <param name="data"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Round_Button_set_callback", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Round_Button_set_callback(IntPtr widget, FltkWidgetCallback callback, IntPtr data);
    
    /// <summary>Call the Fl_Round_Button_set_deleter function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Round_Button_new" path="/returns" />
    /// </param>
    /// <param name="callback"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Round_Button_set_deleter", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Round_Button_set_deleter(IntPtr widget, Action<Action> callback);
    
    /// <summary>Call the Fl_Round_Button_visible function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Round_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Round_Button_visible", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Round_Button_visible(IntPtr widget);
    
    /// <summary>Call the Fl_Round_Button_visible_r function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Round_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Round_Button_visible_r", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Round_Button_visible_r(IntPtr widget);
    
    /// <summary>Call the Fl_Round_Button_active function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Round_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Round_Button_active", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern uint Fl_Round_Button_active(IntPtr widget);
    
    /// <summary>Call the Fl_Round_Button_active_r function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Round_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Round_Button_active_r", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Round_Button_active_r(IntPtr widget);
    
    /// <summary>Call the Fl_Round_Button_callback function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Round_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Round_Button_callback", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern FltkWidgetCallback Fl_Round_Button_callback(IntPtr widget);
    
    /// <summary>Call the Fl_Round_Button_set_deletion_callback function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Round_Button_new" path="/returns" />
    /// </param>
    /// <param name="callback"></param>
    /// <param name="data"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Round_Button_set_deletion_callback", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Round_Button_set_deletion_callback(IntPtr widget, FltkWidgetCallback callback, IntPtr data);
    
    /// <summary>Call the Fl_Round_Button_from_dyn_ptr function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Widget_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Round_Button_from_dyn_ptr", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Round_Button_from_dyn_ptr(IntPtr widget);
    
    /// <summary>Call the Fl_Round_Button_from_derived_dyn_ptr function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Widget_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Round_Button_from_derived_dyn_ptr", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Round_Button_from_derived_dyn_ptr(IntPtr widget);
    
    /// <summary>Call the Fl_Round_Button_super_draw function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Widget_new" path="/returns" />
    /// </param>
    /// <param name="flag"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Round_Button_super_draw", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Round_Button_super_draw(IntPtr widget, int flag);
    
    /// <summary>Call the Fl_Round_Button_super_draw_first function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Widget_new" path="/returns" />
    /// </param>
    /// <param name="flag"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Round_Button_super_draw_first", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Round_Button_super_draw_first(IntPtr widget, int flag);
    
    /// <summary>Call the Fl_Round_Button_super_handle_first function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Widget_new" path="/returns" />
    /// </param>
    /// <param name="flag"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Round_Button_super_handle_first", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Round_Button_super_handle_first(IntPtr widget, int flag);
    
    /// <summary>Call the Fl_Round_Button_shortcut function</summary>
    /// <param name="self">
    /// <inheritdoc cref="Fl_Round_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Round_Button_shortcut", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Round_Button_shortcut(IntPtr self);
    
    /// <summary>Call the Fl_Round_Button_set_shortcut function</summary>
    /// <param name="self">
    /// <inheritdoc cref="Fl_Round_Button_new" path="/returns" />
    /// </param>
    /// <param name="shortcut"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Round_Button_set_shortcut", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Round_Button_set_shortcut(IntPtr self, int shortcut);
    
    /// <summary>Call the Fl_Round_Button_clear function</summary>
    /// <param name="self">
    /// <inheritdoc cref="Fl_Round_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Round_Button_clear", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Round_Button_clear(IntPtr self);
    
    /// <summary>Call the Fl_Round_Button_value function</summary>
    /// <param name="self">
    /// <inheritdoc cref="Fl_Round_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Round_Button_value", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Round_Button_value(IntPtr self);
    
    /// <summary>Call the Fl_Round_Button_set_value function</summary>
    /// <param name="self">
    /// <inheritdoc cref="Fl_Round_Button_new" path="/returns" />
    /// </param>
    /// <param name="flag"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Round_Button_set_value", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Round_Button_set_value(IntPtr self, int flag);
    
    /// <summary>Call the Fl_Round_Button_set_down_box function</summary>
    /// <param name="self">
    /// <inheritdoc cref="Fl_Round_Button_new" path="/returns" />
    /// </param>
    /// <param name="flag"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Round_Button_set_down_box", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Round_Button_set_down_box(IntPtr self, int flag);
    
    /// <summary>Call the Fl_Round_Button_down_box function</summary>
    /// <param name="self">
    /// <inheritdoc cref="Fl_Round_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Round_Button_down_box", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Round_Button_down_box(IntPtr self);
    
    /// <summary>Call the Fl_Round_Button_set_compact function</summary>
    /// <param name="self">
    /// <inheritdoc cref="Fl_Round_Button_new" path="/returns" />
    /// </param>
    /// <param name="value"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Round_Button_set_compact", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Round_Button_set_compact(IntPtr self, char value);
    
    /// <summary>Call the Fl_Round_Button_compact function</summary>
    /// <param name="self">
    /// <inheritdoc cref="Fl_Round_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Round_Button_compact", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern char Fl_Round_Button_compact(IntPtr self);
    
    /// <summary>Call the Fl_Round_Button_is_toggled function</summary>
    /// <param name="self">
    /// <inheritdoc cref="Fl_Round_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Round_Button_is_toggled", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Round_Button_is_toggled(IntPtr self);
    
    /// <summary>Call the Fl_Round_Button_toggle function</summary>
    /// <param name="self">
    /// <inheritdoc cref="Fl_Round_Button_new" path="/returns" />
    /// </param>
    /// <param name="value"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Round_Button_toggle", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Round_Button_toggle(IntPtr self, int value);
    
    /// <summary>Call the Fl_Radio_Round_Button_new function</summary>
    /// <param name="x"></param>
    /// <param name="y"></param>
    /// <param name="width"></param>
    /// <param name="height"></param>
    /// <param name="labelPointer"></param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Radio_Round_Button_new", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Radio_Round_Button_new(int x, int y, int width, int height, IntPtr labelPointer);
    
    /// <summary>Call the Fl_Radio_Round_Button_x function</summary>
    /// <param name="widget">
    /// Pointer to <c>Fl_Radio_Round_Button</c>
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Radio_Round_Button_x", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Radio_Round_Button_x(IntPtr widget);
    
    /// <summary>Call the Fl_Radio_Round_Button_y function</summary>
    /// <param name="widget">
    /// Pointer to <c>Fl_Radio_Round_Button</c>
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Radio_Round_Button_y", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Radio_Round_Button_y(IntPtr widget);
    
    /// <summary>Call the Fl_Radio_Round_Button_width function</summary>
    /// <param name="widget">
    /// Pointer to <c>Fl_Radio_Round_Button</c>
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Radio_Round_Button_width", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Radio_Round_Button_width(IntPtr widget);
    
    /// <summary>Call the Fl_Radio_Round_Button_height function</summary>
    /// <param name="widget">
    /// Pointer to <c>Fl_Radio_Round_Button</c>
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Radio_Round_Button_height", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Radio_Round_Button_height(IntPtr widget);
    
    /// <summary>Call the Fl_Radio_Round_Button_label function</summary>
    /// <param name="widget">
    /// Pointer to <c>Fl_Radio_Round_Button</c>
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Radio_Round_Button_label", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Radio_Round_Button_label(IntPtr widget);
    
    /// <summary>Call the Fl_Radio_Round_Button_set_label function</summary>
    /// <param name="widget"></param>
    /// <param name="labelPointer">
    /// <inheritdoc cref="Fl_Widget_new" path="/param[@name='labelPointer']" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Radio_Round_Button_set_label", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Radio_Round_Button_set_label(IntPtr widget, IntPtr labelPointer);
    
    /// <summary>Call the Fl_Radio_Round_Button_redraw function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Radio_Round_Button_new" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Radio_Round_Button_redraw", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Radio_Round_Button_redraw(IntPtr widget);
    
    /// <summary>Call the Fl_Radio_Round_Button_show function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Radio_Round_Button_new" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Radio_Round_Button_show", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Radio_Round_Button_show(IntPtr widget);
    
    /// <summary>Call the Fl_Radio_Round_Button_hide function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Radio_Round_Button_new" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Radio_Round_Button_hide", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Radio_Round_Button_hide(IntPtr widget);
    
    /// <summary>Call the Fl_Radio_Round_Button_activate function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Radio_Round_Button_new" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Radio_Round_Button_activate", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Radio_Round_Button_activate(IntPtr widget);
    
    /// <summary>Call the Fl_Radio_Round_Button_deactivate function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Radio_Round_Button_new" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Radio_Round_Button_deactivate", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Radio_Round_Button_deactivate(IntPtr widget);
    
    /// <summary>Call the Fl_Radio_Round_Button_redraw_label function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Radio_Round_Button_new" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Radio_Round_Button_redraw_label", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Radio_Round_Button_redraw_label(IntPtr widget);
    
    /// <summary>Call the Fl_Radio_Round_Button_resize function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Radio_Round_Button_new" path="/returns" />
    /// </param>
    /// <param name="x"></param>
    /// <param name="y"></param>
    /// <param name="width"></param>
    /// <param name="height"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Radio_Round_Button_resize", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Radio_Round_Button_resize(IntPtr widget, int x, int y, int width, int height);
    
    /// <summary>Call the Fl_Radio_Round_Button_widget_resize function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Radio_Round_Button_new" path="/returns" />
    /// </param>
    /// <param name="x"></param>
    /// <param name="y"></param>
    /// <param name="width"></param>
    /// <param name="height"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Radio_Round_Button_widget_resize", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Radio_Round_Button_widget_resize(IntPtr widget, int x, int y, int width, int height);
    
    /// <summary>Call the Fl_Radio_Round_Button_tooltip function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Radio_Round_Button_new" path="/returns" />
    /// </param>
    /// <returns>
    /// <inheritdoc cref="Fl_Radio_Round_Button_new" path="/param[@name='labelPointer']" />
    /// </returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Radio_Round_Button_tooltip", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Radio_Round_Button_tooltip(IntPtr widget);
    
    /// <summary>Call the Fl_Radio_Round_Button_set_tooltip function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Radio_Round_Button_new" path="/returns" />
    /// </param>
    /// <param name="tooltipPointer">
    /// <inheritdoc cref="Fl_Radio_Round_Button_new" path="/param[@name='labelPointer']" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Radio_Round_Button_set_tooltip", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Radio_Round_Button_set_tooltip(IntPtr widget, IntPtr tooltipPointer);
    
    /// <summary>Call the Fl_Radio_Round_Button_get_type function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Radio_Round_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Radio_Round_Button_get_type", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Radio_Round_Button_get_type(IntPtr widget);
    
    /// <summary>Call the Fl_Radio_Round_Button_set_type function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Radio_Round_Button_new" path="/returns" />
    /// </param>
    /// <param name="type"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Radio_Round_Button_set_type", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Radio_Round_Button_set_type(IntPtr widget, int type);
    
    /// <summary>Call the Fl_Radio_Round_Button_color function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Radio_Round_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Radio_Round_Button_color", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern uint Fl_Radio_Round_Button_color(IntPtr widget);
    
    /// <summary>Call the Fl_Radio_Round_Button_set_color function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Radio_Round_Button_new" path="/returns" />
    /// </param>
    /// <param name="color"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Radio_Round_Button_set_color", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Radio_Round_Button_set_color(IntPtr widget, uint color);
    
    /// <summary>Call the Fl_Radio_Round_Button_measure_label function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Radio_Round_Button_new" path="/returns" />
    /// </param>
    /// <param name="width"></param>
    /// <param name="height"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Radio_Round_Button_measure_label", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Radio_Round_Button_measure_label(IntPtr widget, ref int width, ref int height);
    
    /// <summary>Call the Fl_Radio_Round_Button_label_color function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Radio_Round_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Radio_Round_Button_label_color", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern uint Fl_Radio_Round_Button_label_color(IntPtr widget);
    
    /// <summary>Call the Fl_Radio_Round_Button_set_label_color function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Radio_Round_Button_new" path="/returns" />
    /// </param>
    /// <param name="color">
    /// <inheritdoc cref="Fl_Radio_Round_Button_label_color" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Radio_Round_Button_set_label_color", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Radio_Round_Button_set_label_color(IntPtr widget, uint color);
    
    /// <summary>Call the Fl_Radio_Round_Button_label_font function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Radio_Round_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Radio_Round_Button_label_font", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Radio_Round_Button_label_font(IntPtr widget);
    
    /// <summary>Call the Fl_Radio_Round_Button_set_label_font function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Radio_Round_Button_new" path="/returns" />
    /// </param>
    /// <param name="fontIndex"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Radio_Round_Button_set_label_font", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Radio_Round_Button_set_label_font(IntPtr widget, int fontIndex);
    
    /// <summary>Call the Fl_Radio_Round_Button_label_size function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Radio_Round_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Radio_Round_Button_label_size", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Radio_Round_Button_label_size(IntPtr widget);
    
    /// <summary>Call the Fl_Radio_Round_Button_set_label_size function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Radio_Round_Button_new" path="/returns" />
    /// </param>
    /// <param name="size">
    /// <inheritdoc cref="Fl_Radio_Round_Button_label_size" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Radio_Round_Button_set_label_size", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Radio_Round_Button_set_label_size(IntPtr widget, int size);
    
    /// <summary>Call the Fl_Radio_Round_Button_label_type function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Radio_Round_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Radio_Round_Button_label_type", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Radio_Round_Button_label_type(IntPtr widget);
    
    /// <summary>Call the Fl_Radio_Round_Button_set_label_type function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Radio_Round_Button_new" path="/returns" />
    /// </param>
    /// <param name="size">
    /// <inheritdoc cref="Fl_Radio_Round_Button_label_type" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Radio_Round_Button_set_label_type", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Radio_Round_Button_set_label_type(IntPtr widget, int size);
    
    /// <summary>Call the Fl_Radio_Round_Button_box function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Radio_Round_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Radio_Round_Button_box", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Radio_Round_Button_box(IntPtr widget);
    
    /// <summary>Call the Fl_Radio_Round_Button_set_box function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Radio_Round_Button_new" path="/returns" />
    /// </param>
    /// <param name="type"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Radio_Round_Button_set_box", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Radio_Round_Button_set_box(IntPtr widget, int type);
    
    /// <summary>Call the Fl_Radio_Round_Button_changed function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Radio_Round_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Radio_Round_Button_changed", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Radio_Round_Button_changed(IntPtr widget);
    
    /// <summary>Call the Fl_Radio_Round_Button_set_changed function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Radio_Round_Button_new" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Radio_Round_Button_set_changed", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Radio_Round_Button_set_changed(IntPtr widget);
    
    /// <summary>Call the Fl_Radio_Round_Button_clear_changed function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Radio_Round_Button_new" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Radio_Round_Button_clear_changed", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Radio_Round_Button_clear_changed(IntPtr widget);
    
    /// <summary>Call the Fl_Radio_Round_Button_align function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Radio_Round_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Radio_Round_Button_align", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Radio_Round_Button_align(IntPtr widget);
    
    /// <summary>Call the Fl_Radio_Round_Button_set_align function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Radio_Round_Button_new" path="/returns" />
    /// </param>
    /// <param name="type"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Radio_Round_Button_set_align", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Radio_Round_Button_set_align(IntPtr widget, int type);
    
    /// <summary>Call the Fl_Radio_Round_Button_delete function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Radio_Round_Button_new" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Radio_Round_Button_delete", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Radio_Round_Button_delete(IntPtr widget);
    
    /// <summary>Call the Fl_Radio_Round_Button_set_image function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Radio_Round_Button_new" path="/returns" />
    /// </param>
    /// <param name="imagePointer"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Radio_Round_Button_set_image", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Radio_Round_Button_set_image(IntPtr widget, IntPtr imagePointer);
    
    /// <summary>Call the Fl_Radio_Round_Button_handle function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Radio_Round_Button_new" path="/returns" />
    /// </param>
    /// <param name="callback"></param>
    /// <param name="data"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Radio_Round_Button_handle", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Radio_Round_Button_handle(IntPtr widget, FltkWidgetHandleCallback callback, IntPtr data);
    
    /// <summary>Call the Fl_Radio_Round_Button_handle_event function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Radio_Round_Button_new" path="/returns" />
    /// </param>
    /// <param name="eventType"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Radio_Round_Button_handle_event", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Radio_Round_Button_handle_event(IntPtr widget, int eventType);
    
    /// <summary>Call the Fl_Radio_Round_Button_draw function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Radio_Round_Button_new" path="/returns" />
    /// </param>
    /// <param name="callback"></param>
    /// <param name="data"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Radio_Round_Button_draw", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Radio_Round_Button_draw(IntPtr widget, FltkWidgetCallback callback, IntPtr data);
    
    /// <summary>Call the Fl_Radio_Round_Button_resize_callback function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Radio_Round_Button_new" path="/returns" />
    /// </param>
    /// <param name="callback"></param>
    /// <param name="data"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Radio_Round_Button_resize_callback", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Radio_Round_Button_resize_callback(IntPtr widget, FltkWidgetResizeCallback callback, IntPtr data);
    
    /// <summary>Call the Fl_Radio_Round_Button_set_when function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Radio_Round_Button_new" path="/returns" />
    /// </param>
    /// <param name="value"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Radio_Round_Button_set_when", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Radio_Round_Button_set_when(IntPtr widget, int value);
    
    /// <summary>Call the Fl_Radio_Round_Button_when function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Radio_Round_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Radio_Round_Button_when", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Radio_Round_Button_when(IntPtr widget);
    
    /// <summary>Call the Fl_Radio_Round_Button_image function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Radio_Round_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Radio_Round_Button_image", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Radio_Round_Button_image(IntPtr widget);
    
    /// <summary>Call the Fl_Radio_Round_Button_parent function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Radio_Round_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Radio_Round_Button_parent", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Radio_Round_Button_parent(IntPtr widget);
    
    /// <summary>Call the Fl_Radio_Round_Button_selection_color function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Radio_Round_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Radio_Round_Button_selection_color", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern uint Fl_Radio_Round_Button_selection_color(IntPtr widget);
    
    /// <summary>Call the Fl_Radio_Round_Button_set_selection_color function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Radio_Round_Button_new" path="/returns" />
    /// </param>
    /// <param name="color"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Radio_Round_Button_set_selection_color", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Radio_Round_Button_set_selection_color(IntPtr widget, uint color);
    
    /// <summary>Call the Fl_Radio_Round_Button_inside function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Radio_Round_Button_new" path="/returns" />
    /// </param>
    /// <param name="other"></param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Radio_Round_Button_inside", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Radio_Round_Button_inside(IntPtr widget, IntPtr other);
    
    /// <summary>Call the Fl_Radio_Round_Button_window function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Radio_Round_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Radio_Round_Button_window", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Radio_Round_Button_window(IntPtr widget);
    
    /// <summary>Call the Fl_Radio_Round_Button_top_window function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Radio_Round_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Radio_Round_Button_top_window", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Radio_Round_Button_top_window(IntPtr widget);
    
    /// <summary>Call the Fl_Radio_Round_Button_takes_events function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Radio_Round_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Radio_Round_Button_takes_events", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Radio_Round_Button_takes_events(IntPtr widget);
    
    /// <summary>Call the Fl_Radio_Round_Button_user_data function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Radio_Round_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Radio_Round_Button_user_data", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Radio_Round_Button_user_data(IntPtr widget);
    
    /// <summary>Call the Fl_Radio_Round_Button_take_focus function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Radio_Round_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Radio_Round_Button_take_focus", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Radio_Round_Button_take_focus(IntPtr widget);
    
    /// <summary>Call the Fl_Radio_Round_Button_set_visible_focus function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Radio_Round_Button_new" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Radio_Round_Button_set_visible_focus", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Radio_Round_Button_set_visible_focus(IntPtr widget);
    
    /// <summary>Call the Fl_Radio_Round_Button_clear_visible_focus function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Radio_Round_Button_new" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Radio_Round_Button_clear_visible_focus", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Radio_Round_Button_clear_visible_focus(IntPtr widget);
    
    /// <summary>Call the Fl_Radio_Round_Button_visible_focus function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Radio_Round_Button_new" path="/returns" />
    /// </param>
    /// <param name="value"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Radio_Round_Button_visible_focus", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Radio_Round_Button_visible_focus(IntPtr widget, int value);
    
    /// <summary>Call the Fl_Radio_Round_Button_has_visible_focus function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Radio_Round_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Radio_Round_Button_has_visible_focus", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern uint Fl_Radio_Round_Button_has_visible_focus(IntPtr widget);
    
    /// <summary>Call the Fl_Radio_Round_Button_set_user_data function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Radio_Round_Button_new" path="/returns" />
    /// </param>
    /// <param name="data"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Radio_Round_Button_set_user_data", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Radio_Round_Button_set_user_data(IntPtr widget, IntPtr data);
    
    /// <summary>Call the Fl_Radio_Round_Button_draw_data function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Radio_Round_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Radio_Round_Button_draw_data", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Radio_Round_Button_draw_data(IntPtr widget);
    
    /// <summary>Call the Fl_Radio_Round_Button_handle_data function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Radio_Round_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Radio_Round_Button_handle_data", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Radio_Round_Button_handle_data(IntPtr widget);
    
    /// <summary>Call the Fl_Radio_Round_Button_set_draw_data function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Radio_Round_Button_new" path="/returns" />
    /// </param>
    /// <param name="data"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Radio_Round_Button_set_draw_data", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Radio_Round_Button_set_draw_data(IntPtr widget, IntPtr data);
    
    /// <summary>Call the Fl_Radio_Round_Button_set_handle_data function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Radio_Round_Button_new" path="/returns" />
    /// </param>
    /// <param name="data"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Radio_Round_Button_set_handle_data", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Radio_Round_Button_set_handle_data(IntPtr widget, IntPtr data);
    
    /// <summary>Call the Fl_Radio_Round_Button_damage function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Radio_Round_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Radio_Round_Button_damage", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern char Fl_Radio_Round_Button_damage(IntPtr widget);
    
    /// <summary>Call the Fl_Radio_Round_Button_set_damage function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Radio_Round_Button_new" path="/returns" />
    /// </param>
    /// <param name="flag"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Radio_Round_Button_set_damage", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Radio_Round_Button_set_damage(IntPtr widget, char flag);
    
    /// <summary>Call the Fl_Radio_Round_Button_set_damage_area function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Radio_Round_Button_new" path="/returns" />
    /// </param>
    /// <param name="flag"></param>
    /// <param name="x"></param>
    /// <param name="y"></param>
    /// <param name="width"></param>
    /// <param name="height"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Radio_Round_Button_set_damage_area", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Radio_Round_Button_set_damage_area(IntPtr widget, char flag, int x, int y, int width, int height);
    
    /// <summary>Call the Fl_Radio_Round_Button_clear_damage function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Radio_Round_Button_new" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Radio_Round_Button_clear_damage", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Radio_Round_Button_clear_damage(IntPtr widget);
    
    /// <summary>Call the Fl_Radio_Round_Button_as_window function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Radio_Round_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Radio_Round_Button_as_window", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Radio_Round_Button_as_window(IntPtr widget);
    
    /// <summary>Call the Fl_Radio_Round_Button_as_group function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Radio_Round_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Radio_Round_Button_as_group", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Radio_Round_Button_as_group(IntPtr widget);
    
    /// <summary>Call the Fl_Radio_Round_Button_set_deimage function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Radio_Round_Button_new" path="/returns" />
    /// </param>
    /// <param name="imagePointer"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Radio_Round_Button_set_deimage", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Radio_Round_Button_set_deimage(IntPtr widget, IntPtr imagePointer);
    
    /// <summary>Call the Fl_Radio_Round_Button_deimage function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Radio_Round_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Radio_Round_Button_deimage", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Radio_Round_Button_deimage(IntPtr widget);
    
    /// <summary>Call the Fl_Radio_Round_Button_set_callback function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Radio_Round_Button_new" path="/returns" />
    /// </param>
    /// <param name="callback"></param>
    /// <param name="data"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Radio_Round_Button_set_callback", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Radio_Round_Button_set_callback(IntPtr widget, FltkWidgetCallback callback, IntPtr data);
    
    /// <summary>Call the Fl_Radio_Round_Button_set_deleter function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Radio_Round_Button_new" path="/returns" />
    /// </param>
    /// <param name="callback"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Radio_Round_Button_set_deleter", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Radio_Round_Button_set_deleter(IntPtr widget, Action<Action> callback);
    
    /// <summary>Call the Fl_Radio_Round_Button_visible function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Radio_Round_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Radio_Round_Button_visible", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Radio_Round_Button_visible(IntPtr widget);
    
    /// <summary>Call the Fl_Radio_Round_Button_visible_r function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Radio_Round_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Radio_Round_Button_visible_r", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Radio_Round_Button_visible_r(IntPtr widget);
    
    /// <summary>Call the Fl_Radio_Round_Button_active function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Radio_Round_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Radio_Round_Button_active", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern uint Fl_Radio_Round_Button_active(IntPtr widget);
    
    /// <summary>Call the Fl_Radio_Round_Button_active_r function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Radio_Round_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Radio_Round_Button_active_r", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Radio_Round_Button_active_r(IntPtr widget);
    
    /// <summary>Call the Fl_Radio_Round_Button_callback function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Radio_Round_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Radio_Round_Button_callback", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern FltkWidgetCallback Fl_Radio_Round_Button_callback(IntPtr widget);
    
    /// <summary>Call the Fl_Radio_Round_Button_set_deletion_callback function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Radio_Round_Button_new" path="/returns" />
    /// </param>
    /// <param name="callback"></param>
    /// <param name="data"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Radio_Round_Button_set_deletion_callback", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Radio_Round_Button_set_deletion_callback(IntPtr widget, FltkWidgetCallback callback, IntPtr data);
    
    /// <summary>Call the Fl_Radio_Round_Button_from_dyn_ptr function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Widget_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Radio_Round_Button_from_dyn_ptr", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Radio_Round_Button_from_dyn_ptr(IntPtr widget);
    
    /// <summary>Call the Fl_Radio_Round_Button_from_derived_dyn_ptr function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Widget_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Radio_Round_Button_from_derived_dyn_ptr", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Radio_Round_Button_from_derived_dyn_ptr(IntPtr widget);
    
    /// <summary>Call the Fl_Radio_Round_Button_super_draw function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Widget_new" path="/returns" />
    /// </param>
    /// <param name="flag"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Radio_Round_Button_super_draw", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Radio_Round_Button_super_draw(IntPtr widget, int flag);
    
    /// <summary>Call the Fl_Radio_Round_Button_super_draw_first function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Widget_new" path="/returns" />
    /// </param>
    /// <param name="flag"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Radio_Round_Button_super_draw_first", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Radio_Round_Button_super_draw_first(IntPtr widget, int flag);
    
    /// <summary>Call the Fl_Radio_Round_Button_super_handle_first function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Widget_new" path="/returns" />
    /// </param>
    /// <param name="flag"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Radio_Round_Button_super_handle_first", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Radio_Round_Button_super_handle_first(IntPtr widget, int flag);
    
    /// <summary>Call the Fl_Radio_Round_Button_shortcut function</summary>
    /// <param name="self">
    /// <inheritdoc cref="Fl_Radio_Round_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Radio_Round_Button_shortcut", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Radio_Round_Button_shortcut(IntPtr self);
    
    /// <summary>Call the Fl_Radio_Round_Button_set_shortcut function</summary>
    /// <param name="self">
    /// <inheritdoc cref="Fl_Radio_Round_Button_new" path="/returns" />
    /// </param>
    /// <param name="shortcut"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Radio_Round_Button_set_shortcut", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Radio_Round_Button_set_shortcut(IntPtr self, int shortcut);
    
    /// <summary>Call the Fl_Radio_Round_Button_clear function</summary>
    /// <param name="self">
    /// <inheritdoc cref="Fl_Radio_Round_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Radio_Round_Button_clear", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Radio_Round_Button_clear(IntPtr self);
    
    /// <summary>Call the Fl_Radio_Round_Button_value function</summary>
    /// <param name="self">
    /// <inheritdoc cref="Fl_Radio_Round_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Radio_Round_Button_value", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Radio_Round_Button_value(IntPtr self);
    
    /// <summary>Call the Fl_Radio_Round_Button_set_value function</summary>
    /// <param name="self">
    /// <inheritdoc cref="Fl_Radio_Round_Button_new" path="/returns" />
    /// </param>
    /// <param name="flag"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Radio_Round_Button_set_value", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Radio_Round_Button_set_value(IntPtr self, int flag);
    
    /// <summary>Call the Fl_Radio_Round_Button_set_down_box function</summary>
    /// <param name="self">
    /// <inheritdoc cref="Fl_Radio_Round_Button_new" path="/returns" />
    /// </param>
    /// <param name="flag"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Radio_Round_Button_set_down_box", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Radio_Round_Button_set_down_box(IntPtr self, int flag);
    
    /// <summary>Call the Fl_Radio_Round_Button_down_box function</summary>
    /// <param name="self">
    /// <inheritdoc cref="Fl_Radio_Round_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Radio_Round_Button_down_box", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Radio_Round_Button_down_box(IntPtr self);
    
    /// <summary>Call the Fl_Radio_Round_Button_set_compact function</summary>
    /// <param name="self">
    /// <inheritdoc cref="Fl_Radio_Round_Button_new" path="/returns" />
    /// </param>
    /// <param name="value"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Radio_Round_Button_set_compact", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Radio_Round_Button_set_compact(IntPtr self, char value);
    
    /// <summary>Call the Fl_Radio_Round_Button_compact function</summary>
    /// <param name="self">
    /// <inheritdoc cref="Fl_Radio_Round_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Radio_Round_Button_compact", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern char Fl_Radio_Round_Button_compact(IntPtr self);
    
    /// <summary>Call the Fl_Radio_Round_Button_is_toggled function</summary>
    /// <param name="self">
    /// <inheritdoc cref="Fl_Radio_Round_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Radio_Round_Button_is_toggled", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Radio_Round_Button_is_toggled(IntPtr self);
    
    /// <summary>Call the Fl_Radio_Round_Button_toggle function</summary>
    /// <param name="self">
    /// <inheritdoc cref="Fl_Radio_Round_Button_new" path="/returns" />
    /// </param>
    /// <param name="value"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Radio_Round_Button_toggle", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Radio_Round_Button_toggle(IntPtr self, int value);
    
    /// <summary>Call the Fl_Radio_Light_Button_new function</summary>
    /// <param name="x"></param>
    /// <param name="y"></param>
    /// <param name="width"></param>
    /// <param name="height"></param>
    /// <param name="labelPointer"></param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Radio_Light_Button_new", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Radio_Light_Button_new(int x, int y, int width, int height, IntPtr labelPointer);
    
    /// <summary>Call the Fl_Radio_Light_Button_x function</summary>
    /// <param name="widget">
    /// Pointer to <c>Fl_Radio_Light_Button</c>
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Radio_Light_Button_x", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Radio_Light_Button_x(IntPtr widget);
    
    /// <summary>Call the Fl_Radio_Light_Button_y function</summary>
    /// <param name="widget">
    /// Pointer to <c>Fl_Radio_Light_Button</c>
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Radio_Light_Button_y", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Radio_Light_Button_y(IntPtr widget);
    
    /// <summary>Call the Fl_Radio_Light_Button_width function</summary>
    /// <param name="widget">
    /// Pointer to <c>Fl_Radio_Light_Button</c>
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Radio_Light_Button_width", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Radio_Light_Button_width(IntPtr widget);
    
    /// <summary>Call the Fl_Radio_Light_Button_height function</summary>
    /// <param name="widget">
    /// Pointer to <c>Fl_Radio_Light_Button</c>
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Radio_Light_Button_height", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Radio_Light_Button_height(IntPtr widget);
    
    /// <summary>Call the Fl_Radio_Light_Button_label function</summary>
    /// <param name="widget">
    /// Pointer to <c>Fl_Radio_Light_Button</c>
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Radio_Light_Button_label", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Radio_Light_Button_label(IntPtr widget);
    
    /// <summary>Call the Fl_Radio_Light_Button_set_label function</summary>
    /// <param name="widget"></param>
    /// <param name="labelPointer">
    /// <inheritdoc cref="Fl_Widget_new" path="/param[@name='labelPointer']" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Radio_Light_Button_set_label", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Radio_Light_Button_set_label(IntPtr widget, IntPtr labelPointer);
    
    /// <summary>Call the Fl_Radio_Light_Button_redraw function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Radio_Light_Button_new" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Radio_Light_Button_redraw", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Radio_Light_Button_redraw(IntPtr widget);
    
    /// <summary>Call the Fl_Radio_Light_Button_show function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Radio_Light_Button_new" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Radio_Light_Button_show", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Radio_Light_Button_show(IntPtr widget);
    
    /// <summary>Call the Fl_Radio_Light_Button_hide function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Radio_Light_Button_new" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Radio_Light_Button_hide", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Radio_Light_Button_hide(IntPtr widget);
    
    /// <summary>Call the Fl_Radio_Light_Button_activate function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Radio_Light_Button_new" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Radio_Light_Button_activate", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Radio_Light_Button_activate(IntPtr widget);
    
    /// <summary>Call the Fl_Radio_Light_Button_deactivate function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Radio_Light_Button_new" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Radio_Light_Button_deactivate", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Radio_Light_Button_deactivate(IntPtr widget);
    
    /// <summary>Call the Fl_Radio_Light_Button_redraw_label function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Radio_Light_Button_new" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Radio_Light_Button_redraw_label", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Radio_Light_Button_redraw_label(IntPtr widget);
    
    /// <summary>Call the Fl_Radio_Light_Button_resize function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Radio_Light_Button_new" path="/returns" />
    /// </param>
    /// <param name="x"></param>
    /// <param name="y"></param>
    /// <param name="width"></param>
    /// <param name="height"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Radio_Light_Button_resize", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Radio_Light_Button_resize(IntPtr widget, int x, int y, int width, int height);
    
    /// <summary>Call the Fl_Radio_Light_Button_widget_resize function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Radio_Light_Button_new" path="/returns" />
    /// </param>
    /// <param name="x"></param>
    /// <param name="y"></param>
    /// <param name="width"></param>
    /// <param name="height"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Radio_Light_Button_widget_resize", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Radio_Light_Button_widget_resize(IntPtr widget, int x, int y, int width, int height);
    
    /// <summary>Call the Fl_Radio_Light_Button_tooltip function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Radio_Light_Button_new" path="/returns" />
    /// </param>
    /// <returns>
    /// <inheritdoc cref="Fl_Radio_Light_Button_new" path="/param[@name='labelPointer']" />
    /// </returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Radio_Light_Button_tooltip", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Radio_Light_Button_tooltip(IntPtr widget);
    
    /// <summary>Call the Fl_Radio_Light_Button_set_tooltip function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Radio_Light_Button_new" path="/returns" />
    /// </param>
    /// <param name="tooltipPointer">
    /// <inheritdoc cref="Fl_Radio_Light_Button_new" path="/param[@name='labelPointer']" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Radio_Light_Button_set_tooltip", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Radio_Light_Button_set_tooltip(IntPtr widget, IntPtr tooltipPointer);
    
    /// <summary>Call the Fl_Radio_Light_Button_get_type function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Radio_Light_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Radio_Light_Button_get_type", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Radio_Light_Button_get_type(IntPtr widget);
    
    /// <summary>Call the Fl_Radio_Light_Button_set_type function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Radio_Light_Button_new" path="/returns" />
    /// </param>
    /// <param name="type"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Radio_Light_Button_set_type", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Radio_Light_Button_set_type(IntPtr widget, int type);
    
    /// <summary>Call the Fl_Radio_Light_Button_color function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Radio_Light_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Radio_Light_Button_color", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern uint Fl_Radio_Light_Button_color(IntPtr widget);
    
    /// <summary>Call the Fl_Radio_Light_Button_set_color function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Radio_Light_Button_new" path="/returns" />
    /// </param>
    /// <param name="color"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Radio_Light_Button_set_color", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Radio_Light_Button_set_color(IntPtr widget, uint color);
    
    /// <summary>Call the Fl_Radio_Light_Button_measure_label function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Radio_Light_Button_new" path="/returns" />
    /// </param>
    /// <param name="width"></param>
    /// <param name="height"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Radio_Light_Button_measure_label", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Radio_Light_Button_measure_label(IntPtr widget, ref int width, ref int height);
    
    /// <summary>Call the Fl_Radio_Light_Button_label_color function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Radio_Light_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Radio_Light_Button_label_color", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern uint Fl_Radio_Light_Button_label_color(IntPtr widget);
    
    /// <summary>Call the Fl_Radio_Light_Button_set_label_color function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Radio_Light_Button_new" path="/returns" />
    /// </param>
    /// <param name="color">
    /// <inheritdoc cref="Fl_Radio_Light_Button_label_color" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Radio_Light_Button_set_label_color", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Radio_Light_Button_set_label_color(IntPtr widget, uint color);
    
    /// <summary>Call the Fl_Radio_Light_Button_label_font function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Radio_Light_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Radio_Light_Button_label_font", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Radio_Light_Button_label_font(IntPtr widget);
    
    /// <summary>Call the Fl_Radio_Light_Button_set_label_font function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Radio_Light_Button_new" path="/returns" />
    /// </param>
    /// <param name="fontIndex"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Radio_Light_Button_set_label_font", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Radio_Light_Button_set_label_font(IntPtr widget, int fontIndex);
    
    /// <summary>Call the Fl_Radio_Light_Button_label_size function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Radio_Light_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Radio_Light_Button_label_size", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Radio_Light_Button_label_size(IntPtr widget);
    
    /// <summary>Call the Fl_Radio_Light_Button_set_label_size function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Radio_Light_Button_new" path="/returns" />
    /// </param>
    /// <param name="size">
    /// <inheritdoc cref="Fl_Radio_Light_Button_label_size" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Radio_Light_Button_set_label_size", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Radio_Light_Button_set_label_size(IntPtr widget, int size);
    
    /// <summary>Call the Fl_Radio_Light_Button_label_type function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Radio_Light_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Radio_Light_Button_label_type", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Radio_Light_Button_label_type(IntPtr widget);
    
    /// <summary>Call the Fl_Radio_Light_Button_set_label_type function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Radio_Light_Button_new" path="/returns" />
    /// </param>
    /// <param name="size">
    /// <inheritdoc cref="Fl_Radio_Light_Button_label_type" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Radio_Light_Button_set_label_type", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Radio_Light_Button_set_label_type(IntPtr widget, int size);
    
    /// <summary>Call the Fl_Radio_Light_Button_box function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Radio_Light_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Radio_Light_Button_box", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Radio_Light_Button_box(IntPtr widget);
    
    /// <summary>Call the Fl_Radio_Light_Button_set_box function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Radio_Light_Button_new" path="/returns" />
    /// </param>
    /// <param name="type"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Radio_Light_Button_set_box", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Radio_Light_Button_set_box(IntPtr widget, int type);
    
    /// <summary>Call the Fl_Radio_Light_Button_changed function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Radio_Light_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Radio_Light_Button_changed", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Radio_Light_Button_changed(IntPtr widget);
    
    /// <summary>Call the Fl_Radio_Light_Button_set_changed function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Radio_Light_Button_new" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Radio_Light_Button_set_changed", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Radio_Light_Button_set_changed(IntPtr widget);
    
    /// <summary>Call the Fl_Radio_Light_Button_clear_changed function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Radio_Light_Button_new" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Radio_Light_Button_clear_changed", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Radio_Light_Button_clear_changed(IntPtr widget);
    
    /// <summary>Call the Fl_Radio_Light_Button_align function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Radio_Light_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Radio_Light_Button_align", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Radio_Light_Button_align(IntPtr widget);
    
    /// <summary>Call the Fl_Radio_Light_Button_set_align function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Radio_Light_Button_new" path="/returns" />
    /// </param>
    /// <param name="type"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Radio_Light_Button_set_align", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Radio_Light_Button_set_align(IntPtr widget, int type);
    
    /// <summary>Call the Fl_Radio_Light_Button_delete function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Radio_Light_Button_new" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Radio_Light_Button_delete", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Radio_Light_Button_delete(IntPtr widget);
    
    /// <summary>Call the Fl_Radio_Light_Button_set_image function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Radio_Light_Button_new" path="/returns" />
    /// </param>
    /// <param name="imagePointer"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Radio_Light_Button_set_image", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Radio_Light_Button_set_image(IntPtr widget, IntPtr imagePointer);
    
    /// <summary>Call the Fl_Radio_Light_Button_handle function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Radio_Light_Button_new" path="/returns" />
    /// </param>
    /// <param name="callback"></param>
    /// <param name="data"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Radio_Light_Button_handle", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Radio_Light_Button_handle(IntPtr widget, FltkWidgetHandleCallback callback, IntPtr data);
    
    /// <summary>Call the Fl_Radio_Light_Button_handle_event function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Radio_Light_Button_new" path="/returns" />
    /// </param>
    /// <param name="eventType"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Radio_Light_Button_handle_event", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Radio_Light_Button_handle_event(IntPtr widget, int eventType);
    
    /// <summary>Call the Fl_Radio_Light_Button_draw function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Radio_Light_Button_new" path="/returns" />
    /// </param>
    /// <param name="callback"></param>
    /// <param name="data"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Radio_Light_Button_draw", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Radio_Light_Button_draw(IntPtr widget, FltkWidgetCallback callback, IntPtr data);
    
    /// <summary>Call the Fl_Radio_Light_Button_resize_callback function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Radio_Light_Button_new" path="/returns" />
    /// </param>
    /// <param name="callback"></param>
    /// <param name="data"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Radio_Light_Button_resize_callback", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Radio_Light_Button_resize_callback(IntPtr widget, FltkWidgetResizeCallback callback, IntPtr data);
    
    /// <summary>Call the Fl_Radio_Light_Button_set_when function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Radio_Light_Button_new" path="/returns" />
    /// </param>
    /// <param name="value"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Radio_Light_Button_set_when", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Radio_Light_Button_set_when(IntPtr widget, int value);
    
    /// <summary>Call the Fl_Radio_Light_Button_when function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Radio_Light_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Radio_Light_Button_when", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Radio_Light_Button_when(IntPtr widget);
    
    /// <summary>Call the Fl_Radio_Light_Button_image function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Radio_Light_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Radio_Light_Button_image", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Radio_Light_Button_image(IntPtr widget);
    
    /// <summary>Call the Fl_Radio_Light_Button_parent function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Radio_Light_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Radio_Light_Button_parent", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Radio_Light_Button_parent(IntPtr widget);
    
    /// <summary>Call the Fl_Radio_Light_Button_selection_color function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Radio_Light_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Radio_Light_Button_selection_color", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern uint Fl_Radio_Light_Button_selection_color(IntPtr widget);
    
    /// <summary>Call the Fl_Radio_Light_Button_set_selection_color function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Radio_Light_Button_new" path="/returns" />
    /// </param>
    /// <param name="color"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Radio_Light_Button_set_selection_color", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Radio_Light_Button_set_selection_color(IntPtr widget, uint color);
    
    /// <summary>Call the Fl_Radio_Light_Button_inside function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Radio_Light_Button_new" path="/returns" />
    /// </param>
    /// <param name="other"></param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Radio_Light_Button_inside", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Radio_Light_Button_inside(IntPtr widget, IntPtr other);
    
    /// <summary>Call the Fl_Radio_Light_Button_window function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Radio_Light_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Radio_Light_Button_window", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Radio_Light_Button_window(IntPtr widget);
    
    /// <summary>Call the Fl_Radio_Light_Button_top_window function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Radio_Light_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Radio_Light_Button_top_window", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Radio_Light_Button_top_window(IntPtr widget);
    
    /// <summary>Call the Fl_Radio_Light_Button_takes_events function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Radio_Light_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Radio_Light_Button_takes_events", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Radio_Light_Button_takes_events(IntPtr widget);
    
    /// <summary>Call the Fl_Radio_Light_Button_user_data function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Radio_Light_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Radio_Light_Button_user_data", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Radio_Light_Button_user_data(IntPtr widget);
    
    /// <summary>Call the Fl_Radio_Light_Button_take_focus function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Radio_Light_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Radio_Light_Button_take_focus", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Radio_Light_Button_take_focus(IntPtr widget);
    
    /// <summary>Call the Fl_Radio_Light_Button_set_visible_focus function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Radio_Light_Button_new" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Radio_Light_Button_set_visible_focus", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Radio_Light_Button_set_visible_focus(IntPtr widget);
    
    /// <summary>Call the Fl_Radio_Light_Button_clear_visible_focus function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Radio_Light_Button_new" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Radio_Light_Button_clear_visible_focus", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Radio_Light_Button_clear_visible_focus(IntPtr widget);
    
    /// <summary>Call the Fl_Radio_Light_Button_visible_focus function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Radio_Light_Button_new" path="/returns" />
    /// </param>
    /// <param name="value"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Radio_Light_Button_visible_focus", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Radio_Light_Button_visible_focus(IntPtr widget, int value);
    
    /// <summary>Call the Fl_Radio_Light_Button_has_visible_focus function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Radio_Light_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Radio_Light_Button_has_visible_focus", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern uint Fl_Radio_Light_Button_has_visible_focus(IntPtr widget);
    
    /// <summary>Call the Fl_Radio_Light_Button_set_user_data function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Radio_Light_Button_new" path="/returns" />
    /// </param>
    /// <param name="data"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Radio_Light_Button_set_user_data", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Radio_Light_Button_set_user_data(IntPtr widget, IntPtr data);
    
    /// <summary>Call the Fl_Radio_Light_Button_draw_data function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Radio_Light_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Radio_Light_Button_draw_data", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Radio_Light_Button_draw_data(IntPtr widget);
    
    /// <summary>Call the Fl_Radio_Light_Button_handle_data function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Radio_Light_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Radio_Light_Button_handle_data", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Radio_Light_Button_handle_data(IntPtr widget);
    
    /// <summary>Call the Fl_Radio_Light_Button_set_draw_data function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Radio_Light_Button_new" path="/returns" />
    /// </param>
    /// <param name="data"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Radio_Light_Button_set_draw_data", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Radio_Light_Button_set_draw_data(IntPtr widget, IntPtr data);
    
    /// <summary>Call the Fl_Radio_Light_Button_set_handle_data function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Radio_Light_Button_new" path="/returns" />
    /// </param>
    /// <param name="data"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Radio_Light_Button_set_handle_data", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Radio_Light_Button_set_handle_data(IntPtr widget, IntPtr data);
    
    /// <summary>Call the Fl_Radio_Light_Button_damage function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Radio_Light_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Radio_Light_Button_damage", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern char Fl_Radio_Light_Button_damage(IntPtr widget);
    
    /// <summary>Call the Fl_Radio_Light_Button_set_damage function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Radio_Light_Button_new" path="/returns" />
    /// </param>
    /// <param name="flag"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Radio_Light_Button_set_damage", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Radio_Light_Button_set_damage(IntPtr widget, char flag);
    
    /// <summary>Call the Fl_Radio_Light_Button_set_damage_area function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Radio_Light_Button_new" path="/returns" />
    /// </param>
    /// <param name="flag"></param>
    /// <param name="x"></param>
    /// <param name="y"></param>
    /// <param name="width"></param>
    /// <param name="height"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Radio_Light_Button_set_damage_area", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Radio_Light_Button_set_damage_area(IntPtr widget, char flag, int x, int y, int width, int height);
    
    /// <summary>Call the Fl_Radio_Light_Button_clear_damage function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Radio_Light_Button_new" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Radio_Light_Button_clear_damage", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Radio_Light_Button_clear_damage(IntPtr widget);
    
    /// <summary>Call the Fl_Radio_Light_Button_as_window function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Radio_Light_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Radio_Light_Button_as_window", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Radio_Light_Button_as_window(IntPtr widget);
    
    /// <summary>Call the Fl_Radio_Light_Button_as_group function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Radio_Light_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Radio_Light_Button_as_group", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Radio_Light_Button_as_group(IntPtr widget);
    
    /// <summary>Call the Fl_Radio_Light_Button_set_deimage function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Radio_Light_Button_new" path="/returns" />
    /// </param>
    /// <param name="imagePointer"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Radio_Light_Button_set_deimage", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Radio_Light_Button_set_deimage(IntPtr widget, IntPtr imagePointer);
    
    /// <summary>Call the Fl_Radio_Light_Button_deimage function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Radio_Light_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Radio_Light_Button_deimage", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Radio_Light_Button_deimage(IntPtr widget);
    
    /// <summary>Call the Fl_Radio_Light_Button_set_callback function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Radio_Light_Button_new" path="/returns" />
    /// </param>
    /// <param name="callback"></param>
    /// <param name="data"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Radio_Light_Button_set_callback", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Radio_Light_Button_set_callback(IntPtr widget, FltkWidgetCallback callback, IntPtr data);
    
    /// <summary>Call the Fl_Radio_Light_Button_set_deleter function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Radio_Light_Button_new" path="/returns" />
    /// </param>
    /// <param name="callback"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Radio_Light_Button_set_deleter", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Radio_Light_Button_set_deleter(IntPtr widget, Action<Action> callback);
    
    /// <summary>Call the Fl_Radio_Light_Button_visible function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Radio_Light_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Radio_Light_Button_visible", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Radio_Light_Button_visible(IntPtr widget);
    
    /// <summary>Call the Fl_Radio_Light_Button_visible_r function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Radio_Light_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Radio_Light_Button_visible_r", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Radio_Light_Button_visible_r(IntPtr widget);
    
    /// <summary>Call the Fl_Radio_Light_Button_active function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Radio_Light_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Radio_Light_Button_active", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern uint Fl_Radio_Light_Button_active(IntPtr widget);
    
    /// <summary>Call the Fl_Radio_Light_Button_active_r function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Radio_Light_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Radio_Light_Button_active_r", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Radio_Light_Button_active_r(IntPtr widget);
    
    /// <summary>Call the Fl_Radio_Light_Button_callback function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Radio_Light_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Radio_Light_Button_callback", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern FltkWidgetCallback Fl_Radio_Light_Button_callback(IntPtr widget);
    
    /// <summary>Call the Fl_Radio_Light_Button_set_deletion_callback function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Radio_Light_Button_new" path="/returns" />
    /// </param>
    /// <param name="callback"></param>
    /// <param name="data"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Radio_Light_Button_set_deletion_callback", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Radio_Light_Button_set_deletion_callback(IntPtr widget, FltkWidgetCallback callback, IntPtr data);
    
    /// <summary>Call the Fl_Radio_Light_Button_from_dyn_ptr function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Widget_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Radio_Light_Button_from_dyn_ptr", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Radio_Light_Button_from_dyn_ptr(IntPtr widget);
    
    /// <summary>Call the Fl_Radio_Light_Button_from_derived_dyn_ptr function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Widget_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Radio_Light_Button_from_derived_dyn_ptr", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Radio_Light_Button_from_derived_dyn_ptr(IntPtr widget);
    
    /// <summary>Call the Fl_Radio_Light_Button_super_draw function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Widget_new" path="/returns" />
    /// </param>
    /// <param name="flag"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Radio_Light_Button_super_draw", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Radio_Light_Button_super_draw(IntPtr widget, int flag);
    
    /// <summary>Call the Fl_Radio_Light_Button_super_draw_first function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Widget_new" path="/returns" />
    /// </param>
    /// <param name="flag"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Radio_Light_Button_super_draw_first", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Radio_Light_Button_super_draw_first(IntPtr widget, int flag);
    
    /// <summary>Call the Fl_Radio_Light_Button_super_handle_first function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Widget_new" path="/returns" />
    /// </param>
    /// <param name="flag"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Radio_Light_Button_super_handle_first", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Radio_Light_Button_super_handle_first(IntPtr widget, int flag);
    
    /// <summary>Call the Fl_Radio_Light_Button_shortcut function</summary>
    /// <param name="self">
    /// <inheritdoc cref="Fl_Radio_Light_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Radio_Light_Button_shortcut", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Radio_Light_Button_shortcut(IntPtr self);
    
    /// <summary>Call the Fl_Radio_Light_Button_set_shortcut function</summary>
    /// <param name="self">
    /// <inheritdoc cref="Fl_Radio_Light_Button_new" path="/returns" />
    /// </param>
    /// <param name="shortcut"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Radio_Light_Button_set_shortcut", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Radio_Light_Button_set_shortcut(IntPtr self, int shortcut);
    
    /// <summary>Call the Fl_Radio_Light_Button_clear function</summary>
    /// <param name="self">
    /// <inheritdoc cref="Fl_Radio_Light_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Radio_Light_Button_clear", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Radio_Light_Button_clear(IntPtr self);
    
    /// <summary>Call the Fl_Radio_Light_Button_value function</summary>
    /// <param name="self">
    /// <inheritdoc cref="Fl_Radio_Light_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Radio_Light_Button_value", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Radio_Light_Button_value(IntPtr self);
    
    /// <summary>Call the Fl_Radio_Light_Button_set_value function</summary>
    /// <param name="self">
    /// <inheritdoc cref="Fl_Radio_Light_Button_new" path="/returns" />
    /// </param>
    /// <param name="flag"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Radio_Light_Button_set_value", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Radio_Light_Button_set_value(IntPtr self, int flag);
    
    /// <summary>Call the Fl_Radio_Light_Button_set_down_box function</summary>
    /// <param name="self">
    /// <inheritdoc cref="Fl_Radio_Light_Button_new" path="/returns" />
    /// </param>
    /// <param name="flag"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Radio_Light_Button_set_down_box", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Radio_Light_Button_set_down_box(IntPtr self, int flag);
    
    /// <summary>Call the Fl_Radio_Light_Button_down_box function</summary>
    /// <param name="self">
    /// <inheritdoc cref="Fl_Radio_Light_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Radio_Light_Button_down_box", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Radio_Light_Button_down_box(IntPtr self);
    
    /// <summary>Call the Fl_Radio_Light_Button_set_compact function</summary>
    /// <param name="self">
    /// <inheritdoc cref="Fl_Radio_Light_Button_new" path="/returns" />
    /// </param>
    /// <param name="value"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Radio_Light_Button_set_compact", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Radio_Light_Button_set_compact(IntPtr self, char value);
    
    /// <summary>Call the Fl_Radio_Light_Button_compact function</summary>
    /// <param name="self">
    /// <inheritdoc cref="Fl_Radio_Light_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Radio_Light_Button_compact", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern char Fl_Radio_Light_Button_compact(IntPtr self);
    
    /// <summary>Call the Fl_Radio_Light_Button_is_toggled function</summary>
    /// <param name="self">
    /// <inheritdoc cref="Fl_Radio_Light_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Radio_Light_Button_is_toggled", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Radio_Light_Button_is_toggled(IntPtr self);
    
    /// <summary>Call the Fl_Radio_Light_Button_toggle function</summary>
    /// <param name="self">
    /// <inheritdoc cref="Fl_Radio_Light_Button_new" path="/returns" />
    /// </param>
    /// <param name="value"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Radio_Light_Button_toggle", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Radio_Light_Button_toggle(IntPtr self, int value);
    
    /// <summary>Call the Fl_Light_Button_new function</summary>
    /// <param name="x"></param>
    /// <param name="y"></param>
    /// <param name="width"></param>
    /// <param name="height"></param>
    /// <param name="labelPointer"></param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Light_Button_new", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Light_Button_new(int x, int y, int width, int height, IntPtr labelPointer);
    
    /// <summary>Call the Fl_Light_Button_x function</summary>
    /// <param name="widget">
    /// Pointer to <c>Fl_Light_Button</c>
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Light_Button_x", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Light_Button_x(IntPtr widget);
    
    /// <summary>Call the Fl_Light_Button_y function</summary>
    /// <param name="widget">
    /// Pointer to <c>Fl_Light_Button</c>
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Light_Button_y", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Light_Button_y(IntPtr widget);
    
    /// <summary>Call the Fl_Light_Button_width function</summary>
    /// <param name="widget">
    /// Pointer to <c>Fl_Light_Button</c>
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Light_Button_width", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Light_Button_width(IntPtr widget);
    
    /// <summary>Call the Fl_Light_Button_height function</summary>
    /// <param name="widget">
    /// Pointer to <c>Fl_Light_Button</c>
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Light_Button_height", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Light_Button_height(IntPtr widget);
    
    /// <summary>Call the Fl_Light_Button_label function</summary>
    /// <param name="widget">
    /// Pointer to <c>Fl_Light_Button</c>
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Light_Button_label", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Light_Button_label(IntPtr widget);
    
    /// <summary>Call the Fl_Light_Button_set_label function</summary>
    /// <param name="widget"></param>
    /// <param name="labelPointer">
    /// <inheritdoc cref="Fl_Widget_new" path="/param[@name='labelPointer']" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Light_Button_set_label", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Light_Button_set_label(IntPtr widget, IntPtr labelPointer);
    
    /// <summary>Call the Fl_Light_Button_redraw function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Light_Button_new" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Light_Button_redraw", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Light_Button_redraw(IntPtr widget);
    
    /// <summary>Call the Fl_Light_Button_show function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Light_Button_new" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Light_Button_show", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Light_Button_show(IntPtr widget);
    
    /// <summary>Call the Fl_Light_Button_hide function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Light_Button_new" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Light_Button_hide", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Light_Button_hide(IntPtr widget);
    
    /// <summary>Call the Fl_Light_Button_activate function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Light_Button_new" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Light_Button_activate", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Light_Button_activate(IntPtr widget);
    
    /// <summary>Call the Fl_Light_Button_deactivate function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Light_Button_new" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Light_Button_deactivate", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Light_Button_deactivate(IntPtr widget);
    
    /// <summary>Call the Fl_Light_Button_redraw_label function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Light_Button_new" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Light_Button_redraw_label", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Light_Button_redraw_label(IntPtr widget);
    
    /// <summary>Call the Fl_Light_Button_resize function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Light_Button_new" path="/returns" />
    /// </param>
    /// <param name="x"></param>
    /// <param name="y"></param>
    /// <param name="width"></param>
    /// <param name="height"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Light_Button_resize", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Light_Button_resize(IntPtr widget, int x, int y, int width, int height);
    
    /// <summary>Call the Fl_Light_Button_widget_resize function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Light_Button_new" path="/returns" />
    /// </param>
    /// <param name="x"></param>
    /// <param name="y"></param>
    /// <param name="width"></param>
    /// <param name="height"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Light_Button_widget_resize", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Light_Button_widget_resize(IntPtr widget, int x, int y, int width, int height);
    
    /// <summary>Call the Fl_Light_Button_tooltip function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Light_Button_new" path="/returns" />
    /// </param>
    /// <returns>
    /// <inheritdoc cref="Fl_Light_Button_new" path="/param[@name='labelPointer']" />
    /// </returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Light_Button_tooltip", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Light_Button_tooltip(IntPtr widget);
    
    /// <summary>Call the Fl_Light_Button_set_tooltip function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Light_Button_new" path="/returns" />
    /// </param>
    /// <param name="tooltipPointer">
    /// <inheritdoc cref="Fl_Light_Button_new" path="/param[@name='labelPointer']" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Light_Button_set_tooltip", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Light_Button_set_tooltip(IntPtr widget, IntPtr tooltipPointer);
    
    /// <summary>Call the Fl_Light_Button_get_type function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Light_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Light_Button_get_type", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Light_Button_get_type(IntPtr widget);
    
    /// <summary>Call the Fl_Light_Button_set_type function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Light_Button_new" path="/returns" />
    /// </param>
    /// <param name="type"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Light_Button_set_type", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Light_Button_set_type(IntPtr widget, int type);
    
    /// <summary>Call the Fl_Light_Button_color function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Light_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Light_Button_color", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern uint Fl_Light_Button_color(IntPtr widget);
    
    /// <summary>Call the Fl_Light_Button_set_color function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Light_Button_new" path="/returns" />
    /// </param>
    /// <param name="color"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Light_Button_set_color", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Light_Button_set_color(IntPtr widget, uint color);
    
    /// <summary>Call the Fl_Light_Button_measure_label function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Light_Button_new" path="/returns" />
    /// </param>
    /// <param name="width"></param>
    /// <param name="height"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Light_Button_measure_label", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Light_Button_measure_label(IntPtr widget, ref int width, ref int height);
    
    /// <summary>Call the Fl_Light_Button_label_color function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Light_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Light_Button_label_color", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern uint Fl_Light_Button_label_color(IntPtr widget);
    
    /// <summary>Call the Fl_Light_Button_set_label_color function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Light_Button_new" path="/returns" />
    /// </param>
    /// <param name="color">
    /// <inheritdoc cref="Fl_Light_Button_label_color" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Light_Button_set_label_color", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Light_Button_set_label_color(IntPtr widget, uint color);
    
    /// <summary>Call the Fl_Light_Button_label_font function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Light_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Light_Button_label_font", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Light_Button_label_font(IntPtr widget);
    
    /// <summary>Call the Fl_Light_Button_set_label_font function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Light_Button_new" path="/returns" />
    /// </param>
    /// <param name="fontIndex"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Light_Button_set_label_font", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Light_Button_set_label_font(IntPtr widget, int fontIndex);
    
    /// <summary>Call the Fl_Light_Button_label_size function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Light_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Light_Button_label_size", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Light_Button_label_size(IntPtr widget);
    
    /// <summary>Call the Fl_Light_Button_set_label_size function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Light_Button_new" path="/returns" />
    /// </param>
    /// <param name="size">
    /// <inheritdoc cref="Fl_Light_Button_label_size" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Light_Button_set_label_size", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Light_Button_set_label_size(IntPtr widget, int size);
    
    /// <summary>Call the Fl_Light_Button_label_type function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Light_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Light_Button_label_type", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Light_Button_label_type(IntPtr widget);
    
    /// <summary>Call the Fl_Light_Button_set_label_type function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Light_Button_new" path="/returns" />
    /// </param>
    /// <param name="size">
    /// <inheritdoc cref="Fl_Light_Button_label_type" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Light_Button_set_label_type", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Light_Button_set_label_type(IntPtr widget, int size);
    
    /// <summary>Call the Fl_Light_Button_box function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Light_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Light_Button_box", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Light_Button_box(IntPtr widget);
    
    /// <summary>Call the Fl_Light_Button_set_box function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Light_Button_new" path="/returns" />
    /// </param>
    /// <param name="type"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Light_Button_set_box", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Light_Button_set_box(IntPtr widget, int type);
    
    /// <summary>Call the Fl_Light_Button_changed function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Light_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Light_Button_changed", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Light_Button_changed(IntPtr widget);
    
    /// <summary>Call the Fl_Light_Button_set_changed function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Light_Button_new" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Light_Button_set_changed", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Light_Button_set_changed(IntPtr widget);
    
    /// <summary>Call the Fl_Light_Button_clear_changed function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Light_Button_new" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Light_Button_clear_changed", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Light_Button_clear_changed(IntPtr widget);
    
    /// <summary>Call the Fl_Light_Button_align function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Light_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Light_Button_align", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Light_Button_align(IntPtr widget);
    
    /// <summary>Call the Fl_Light_Button_set_align function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Light_Button_new" path="/returns" />
    /// </param>
    /// <param name="type"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Light_Button_set_align", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Light_Button_set_align(IntPtr widget, int type);
    
    /// <summary>Call the Fl_Light_Button_delete function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Light_Button_new" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Light_Button_delete", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Light_Button_delete(IntPtr widget);
    
    /// <summary>Call the Fl_Light_Button_set_image function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Light_Button_new" path="/returns" />
    /// </param>
    /// <param name="imagePointer"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Light_Button_set_image", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Light_Button_set_image(IntPtr widget, IntPtr imagePointer);
    
    /// <summary>Call the Fl_Light_Button_handle function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Light_Button_new" path="/returns" />
    /// </param>
    /// <param name="callback"></param>
    /// <param name="data"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Light_Button_handle", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Light_Button_handle(IntPtr widget, FltkWidgetHandleCallback callback, IntPtr data);
    
    /// <summary>Call the Fl_Light_Button_handle_event function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Light_Button_new" path="/returns" />
    /// </param>
    /// <param name="eventType"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Light_Button_handle_event", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Light_Button_handle_event(IntPtr widget, int eventType);
    
    /// <summary>Call the Fl_Light_Button_draw function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Light_Button_new" path="/returns" />
    /// </param>
    /// <param name="callback"></param>
    /// <param name="data"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Light_Button_draw", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Light_Button_draw(IntPtr widget, FltkWidgetCallback callback, IntPtr data);
    
    /// <summary>Call the Fl_Light_Button_resize_callback function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Light_Button_new" path="/returns" />
    /// </param>
    /// <param name="callback"></param>
    /// <param name="data"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Light_Button_resize_callback", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Light_Button_resize_callback(IntPtr widget, FltkWidgetResizeCallback callback, IntPtr data);
    
    /// <summary>Call the Fl_Light_Button_set_when function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Light_Button_new" path="/returns" />
    /// </param>
    /// <param name="value"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Light_Button_set_when", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Light_Button_set_when(IntPtr widget, int value);
    
    /// <summary>Call the Fl_Light_Button_when function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Light_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Light_Button_when", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Light_Button_when(IntPtr widget);
    
    /// <summary>Call the Fl_Light_Button_image function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Light_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Light_Button_image", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Light_Button_image(IntPtr widget);
    
    /// <summary>Call the Fl_Light_Button_parent function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Light_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Light_Button_parent", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Light_Button_parent(IntPtr widget);
    
    /// <summary>Call the Fl_Light_Button_selection_color function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Light_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Light_Button_selection_color", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern uint Fl_Light_Button_selection_color(IntPtr widget);
    
    /// <summary>Call the Fl_Light_Button_set_selection_color function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Light_Button_new" path="/returns" />
    /// </param>
    /// <param name="color"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Light_Button_set_selection_color", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Light_Button_set_selection_color(IntPtr widget, uint color);
    
    /// <summary>Call the Fl_Light_Button_inside function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Light_Button_new" path="/returns" />
    /// </param>
    /// <param name="other"></param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Light_Button_inside", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Light_Button_inside(IntPtr widget, IntPtr other);
    
    /// <summary>Call the Fl_Light_Button_window function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Light_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Light_Button_window", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Light_Button_window(IntPtr widget);
    
    /// <summary>Call the Fl_Light_Button_top_window function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Light_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Light_Button_top_window", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Light_Button_top_window(IntPtr widget);
    
    /// <summary>Call the Fl_Light_Button_takes_events function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Light_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Light_Button_takes_events", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Light_Button_takes_events(IntPtr widget);
    
    /// <summary>Call the Fl_Light_Button_user_data function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Light_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Light_Button_user_data", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Light_Button_user_data(IntPtr widget);
    
    /// <summary>Call the Fl_Light_Button_take_focus function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Light_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Light_Button_take_focus", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Light_Button_take_focus(IntPtr widget);
    
    /// <summary>Call the Fl_Light_Button_set_visible_focus function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Light_Button_new" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Light_Button_set_visible_focus", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Light_Button_set_visible_focus(IntPtr widget);
    
    /// <summary>Call the Fl_Light_Button_clear_visible_focus function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Light_Button_new" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Light_Button_clear_visible_focus", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Light_Button_clear_visible_focus(IntPtr widget);
    
    /// <summary>Call the Fl_Light_Button_visible_focus function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Light_Button_new" path="/returns" />
    /// </param>
    /// <param name="value"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Light_Button_visible_focus", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Light_Button_visible_focus(IntPtr widget, int value);
    
    /// <summary>Call the Fl_Light_Button_has_visible_focus function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Light_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Light_Button_has_visible_focus", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern uint Fl_Light_Button_has_visible_focus(IntPtr widget);
    
    /// <summary>Call the Fl_Light_Button_set_user_data function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Light_Button_new" path="/returns" />
    /// </param>
    /// <param name="data"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Light_Button_set_user_data", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Light_Button_set_user_data(IntPtr widget, IntPtr data);
    
    /// <summary>Call the Fl_Light_Button_draw_data function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Light_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Light_Button_draw_data", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Light_Button_draw_data(IntPtr widget);
    
    /// <summary>Call the Fl_Light_Button_handle_data function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Light_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Light_Button_handle_data", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Light_Button_handle_data(IntPtr widget);
    
    /// <summary>Call the Fl_Light_Button_set_draw_data function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Light_Button_new" path="/returns" />
    /// </param>
    /// <param name="data"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Light_Button_set_draw_data", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Light_Button_set_draw_data(IntPtr widget, IntPtr data);
    
    /// <summary>Call the Fl_Light_Button_set_handle_data function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Light_Button_new" path="/returns" />
    /// </param>
    /// <param name="data"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Light_Button_set_handle_data", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Light_Button_set_handle_data(IntPtr widget, IntPtr data);
    
    /// <summary>Call the Fl_Light_Button_damage function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Light_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Light_Button_damage", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern char Fl_Light_Button_damage(IntPtr widget);
    
    /// <summary>Call the Fl_Light_Button_set_damage function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Light_Button_new" path="/returns" />
    /// </param>
    /// <param name="flag"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Light_Button_set_damage", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Light_Button_set_damage(IntPtr widget, char flag);
    
    /// <summary>Call the Fl_Light_Button_set_damage_area function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Light_Button_new" path="/returns" />
    /// </param>
    /// <param name="flag"></param>
    /// <param name="x"></param>
    /// <param name="y"></param>
    /// <param name="width"></param>
    /// <param name="height"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Light_Button_set_damage_area", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Light_Button_set_damage_area(IntPtr widget, char flag, int x, int y, int width, int height);
    
    /// <summary>Call the Fl_Light_Button_clear_damage function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Light_Button_new" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Light_Button_clear_damage", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Light_Button_clear_damage(IntPtr widget);
    
    /// <summary>Call the Fl_Light_Button_as_window function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Light_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Light_Button_as_window", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Light_Button_as_window(IntPtr widget);
    
    /// <summary>Call the Fl_Light_Button_as_group function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Light_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Light_Button_as_group", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Light_Button_as_group(IntPtr widget);
    
    /// <summary>Call the Fl_Light_Button_set_deimage function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Light_Button_new" path="/returns" />
    /// </param>
    /// <param name="imagePointer"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Light_Button_set_deimage", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Light_Button_set_deimage(IntPtr widget, IntPtr imagePointer);
    
    /// <summary>Call the Fl_Light_Button_deimage function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Light_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Light_Button_deimage", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Light_Button_deimage(IntPtr widget);
    
    /// <summary>Call the Fl_Light_Button_set_callback function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Light_Button_new" path="/returns" />
    /// </param>
    /// <param name="callback"></param>
    /// <param name="data"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Light_Button_set_callback", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Light_Button_set_callback(IntPtr widget, FltkWidgetCallback callback, IntPtr data);
    
    /// <summary>Call the Fl_Light_Button_set_deleter function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Light_Button_new" path="/returns" />
    /// </param>
    /// <param name="callback"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Light_Button_set_deleter", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Light_Button_set_deleter(IntPtr widget, Action<Action> callback);
    
    /// <summary>Call the Fl_Light_Button_visible function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Light_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Light_Button_visible", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Light_Button_visible(IntPtr widget);
    
    /// <summary>Call the Fl_Light_Button_visible_r function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Light_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Light_Button_visible_r", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Light_Button_visible_r(IntPtr widget);
    
    /// <summary>Call the Fl_Light_Button_active function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Light_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Light_Button_active", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern uint Fl_Light_Button_active(IntPtr widget);
    
    /// <summary>Call the Fl_Light_Button_active_r function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Light_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Light_Button_active_r", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Light_Button_active_r(IntPtr widget);
    
    /// <summary>Call the Fl_Light_Button_callback function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Light_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Light_Button_callback", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern FltkWidgetCallback Fl_Light_Button_callback(IntPtr widget);
    
    /// <summary>Call the Fl_Light_Button_set_deletion_callback function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Light_Button_new" path="/returns" />
    /// </param>
    /// <param name="callback"></param>
    /// <param name="data"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Light_Button_set_deletion_callback", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Light_Button_set_deletion_callback(IntPtr widget, FltkWidgetCallback callback, IntPtr data);
    
    /// <summary>Call the Fl_Light_Button_from_dyn_ptr function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Widget_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Light_Button_from_dyn_ptr", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Light_Button_from_dyn_ptr(IntPtr widget);
    
    /// <summary>Call the Fl_Light_Button_from_derived_dyn_ptr function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Widget_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Light_Button_from_derived_dyn_ptr", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Light_Button_from_derived_dyn_ptr(IntPtr widget);
    
    /// <summary>Call the Fl_Light_Button_super_draw function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Widget_new" path="/returns" />
    /// </param>
    /// <param name="flag"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Light_Button_super_draw", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Light_Button_super_draw(IntPtr widget, int flag);
    
    /// <summary>Call the Fl_Light_Button_super_draw_first function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Widget_new" path="/returns" />
    /// </param>
    /// <param name="flag"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Light_Button_super_draw_first", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Light_Button_super_draw_first(IntPtr widget, int flag);
    
    /// <summary>Call the Fl_Light_Button_super_handle_first function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Widget_new" path="/returns" />
    /// </param>
    /// <param name="flag"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Light_Button_super_handle_first", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Light_Button_super_handle_first(IntPtr widget, int flag);
    
    /// <summary>Call the Fl_Light_Button_shortcut function</summary>
    /// <param name="self">
    /// <inheritdoc cref="Fl_Light_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Light_Button_shortcut", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Light_Button_shortcut(IntPtr self);
    
    /// <summary>Call the Fl_Light_Button_set_shortcut function</summary>
    /// <param name="self">
    /// <inheritdoc cref="Fl_Light_Button_new" path="/returns" />
    /// </param>
    /// <param name="shortcut"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Light_Button_set_shortcut", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Light_Button_set_shortcut(IntPtr self, int shortcut);
    
    /// <summary>Call the Fl_Light_Button_clear function</summary>
    /// <param name="self">
    /// <inheritdoc cref="Fl_Light_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Light_Button_clear", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Light_Button_clear(IntPtr self);
    
    /// <summary>Call the Fl_Light_Button_value function</summary>
    /// <param name="self">
    /// <inheritdoc cref="Fl_Light_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Light_Button_value", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Light_Button_value(IntPtr self);
    
    /// <summary>Call the Fl_Light_Button_set_value function</summary>
    /// <param name="self">
    /// <inheritdoc cref="Fl_Light_Button_new" path="/returns" />
    /// </param>
    /// <param name="flag"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Light_Button_set_value", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Light_Button_set_value(IntPtr self, int flag);
    
    /// <summary>Call the Fl_Light_Button_set_down_box function</summary>
    /// <param name="self">
    /// <inheritdoc cref="Fl_Light_Button_new" path="/returns" />
    /// </param>
    /// <param name="flag"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Light_Button_set_down_box", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Light_Button_set_down_box(IntPtr self, int flag);
    
    /// <summary>Call the Fl_Light_Button_down_box function</summary>
    /// <param name="self">
    /// <inheritdoc cref="Fl_Light_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Light_Button_down_box", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Light_Button_down_box(IntPtr self);
    
    /// <summary>Call the Fl_Light_Button_set_compact function</summary>
    /// <param name="self">
    /// <inheritdoc cref="Fl_Light_Button_new" path="/returns" />
    /// </param>
    /// <param name="value"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Light_Button_set_compact", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Light_Button_set_compact(IntPtr self, char value);
    
    /// <summary>Call the Fl_Light_Button_compact function</summary>
    /// <param name="self">
    /// <inheritdoc cref="Fl_Light_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Light_Button_compact", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern char Fl_Light_Button_compact(IntPtr self);
    
    /// <summary>Call the Fl_Light_Button_is_on function</summary>
    /// <param name="self">
    /// <inheritdoc cref="Fl_Light_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Light_Button_is_on", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Light_Button_is_on(IntPtr self);
    
    /// <summary>Call the Fl_Light_Button_turn_on function</summary>
    /// <param name="self">
    /// <inheritdoc cref="Fl_Light_Button_new" path="/returns" />
    /// </param>
    /// <param name="value"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Light_Button_turn_on", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Light_Button_turn_on(IntPtr self, int value);
    
    /// <summary>Call the Fl_Repeat_Button_new function</summary>
    /// <param name="x"></param>
    /// <param name="y"></param>
    /// <param name="width"></param>
    /// <param name="height"></param>
    /// <param name="labelPointer"></param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Repeat_Button_new", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Repeat_Button_new(int x, int y, int width, int height, IntPtr labelPointer);
    
    /// <summary>Call the Fl_Repeat_Button_x function</summary>
    /// <param name="widget">
    /// Pointer to <c>Fl_Repeat_Button</c>
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Repeat_Button_x", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Repeat_Button_x(IntPtr widget);
    
    /// <summary>Call the Fl_Repeat_Button_y function</summary>
    /// <param name="widget">
    /// Pointer to <c>Fl_Repeat_Button</c>
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Repeat_Button_y", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Repeat_Button_y(IntPtr widget);
    
    /// <summary>Call the Fl_Repeat_Button_width function</summary>
    /// <param name="widget">
    /// Pointer to <c>Fl_Repeat_Button</c>
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Repeat_Button_width", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Repeat_Button_width(IntPtr widget);
    
    /// <summary>Call the Fl_Repeat_Button_height function</summary>
    /// <param name="widget">
    /// Pointer to <c>Fl_Repeat_Button</c>
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Repeat_Button_height", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Repeat_Button_height(IntPtr widget);
    
    /// <summary>Call the Fl_Repeat_Button_label function</summary>
    /// <param name="widget">
    /// Pointer to <c>Fl_Repeat_Button</c>
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Repeat_Button_label", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Repeat_Button_label(IntPtr widget);
    
    /// <summary>Call the Fl_Repeat_Button_set_label function</summary>
    /// <param name="widget"></param>
    /// <param name="labelPointer">
    /// <inheritdoc cref="Fl_Widget_new" path="/param[@name='labelPointer']" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Repeat_Button_set_label", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Repeat_Button_set_label(IntPtr widget, IntPtr labelPointer);
    
    /// <summary>Call the Fl_Repeat_Button_redraw function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Repeat_Button_new" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Repeat_Button_redraw", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Repeat_Button_redraw(IntPtr widget);
    
    /// <summary>Call the Fl_Repeat_Button_show function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Repeat_Button_new" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Repeat_Button_show", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Repeat_Button_show(IntPtr widget);
    
    /// <summary>Call the Fl_Repeat_Button_hide function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Repeat_Button_new" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Repeat_Button_hide", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Repeat_Button_hide(IntPtr widget);
    
    /// <summary>Call the Fl_Repeat_Button_activate function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Repeat_Button_new" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Repeat_Button_activate", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Repeat_Button_activate(IntPtr widget);
    
    /// <summary>Call the Fl_Repeat_Button_deactivate function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Repeat_Button_new" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Repeat_Button_deactivate", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Repeat_Button_deactivate(IntPtr widget);
    
    /// <summary>Call the Fl_Repeat_Button_redraw_label function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Repeat_Button_new" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Repeat_Button_redraw_label", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Repeat_Button_redraw_label(IntPtr widget);
    
    /// <summary>Call the Fl_Repeat_Button_resize function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Repeat_Button_new" path="/returns" />
    /// </param>
    /// <param name="x"></param>
    /// <param name="y"></param>
    /// <param name="width"></param>
    /// <param name="height"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Repeat_Button_resize", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Repeat_Button_resize(IntPtr widget, int x, int y, int width, int height);
    
    /// <summary>Call the Fl_Repeat_Button_widget_resize function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Repeat_Button_new" path="/returns" />
    /// </param>
    /// <param name="x"></param>
    /// <param name="y"></param>
    /// <param name="width"></param>
    /// <param name="height"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Repeat_Button_widget_resize", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Repeat_Button_widget_resize(IntPtr widget, int x, int y, int width, int height);
    
    /// <summary>Call the Fl_Repeat_Button_tooltip function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Repeat_Button_new" path="/returns" />
    /// </param>
    /// <returns>
    /// <inheritdoc cref="Fl_Repeat_Button_new" path="/param[@name='labelPointer']" />
    /// </returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Repeat_Button_tooltip", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Repeat_Button_tooltip(IntPtr widget);
    
    /// <summary>Call the Fl_Repeat_Button_set_tooltip function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Repeat_Button_new" path="/returns" />
    /// </param>
    /// <param name="tooltipPointer">
    /// <inheritdoc cref="Fl_Repeat_Button_new" path="/param[@name='labelPointer']" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Repeat_Button_set_tooltip", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Repeat_Button_set_tooltip(IntPtr widget, IntPtr tooltipPointer);
    
    /// <summary>Call the Fl_Repeat_Button_get_type function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Repeat_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Repeat_Button_get_type", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Repeat_Button_get_type(IntPtr widget);
    
    /// <summary>Call the Fl_Repeat_Button_set_type function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Repeat_Button_new" path="/returns" />
    /// </param>
    /// <param name="type"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Repeat_Button_set_type", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Repeat_Button_set_type(IntPtr widget, int type);
    
    /// <summary>Call the Fl_Repeat_Button_color function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Repeat_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Repeat_Button_color", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern uint Fl_Repeat_Button_color(IntPtr widget);
    
    /// <summary>Call the Fl_Repeat_Button_set_color function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Repeat_Button_new" path="/returns" />
    /// </param>
    /// <param name="color"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Repeat_Button_set_color", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Repeat_Button_set_color(IntPtr widget, uint color);
    
    /// <summary>Call the Fl_Repeat_Button_measure_label function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Repeat_Button_new" path="/returns" />
    /// </param>
    /// <param name="width"></param>
    /// <param name="height"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Repeat_Button_measure_label", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Repeat_Button_measure_label(IntPtr widget, ref int width, ref int height);
    
    /// <summary>Call the Fl_Repeat_Button_label_color function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Repeat_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Repeat_Button_label_color", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern uint Fl_Repeat_Button_label_color(IntPtr widget);
    
    /// <summary>Call the Fl_Repeat_Button_set_label_color function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Repeat_Button_new" path="/returns" />
    /// </param>
    /// <param name="color">
    /// <inheritdoc cref="Fl_Repeat_Button_label_color" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Repeat_Button_set_label_color", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Repeat_Button_set_label_color(IntPtr widget, uint color);
    
    /// <summary>Call the Fl_Repeat_Button_label_font function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Repeat_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Repeat_Button_label_font", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Repeat_Button_label_font(IntPtr widget);
    
    /// <summary>Call the Fl_Repeat_Button_set_label_font function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Repeat_Button_new" path="/returns" />
    /// </param>
    /// <param name="fontIndex"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Repeat_Button_set_label_font", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Repeat_Button_set_label_font(IntPtr widget, int fontIndex);
    
    /// <summary>Call the Fl_Repeat_Button_label_size function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Repeat_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Repeat_Button_label_size", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Repeat_Button_label_size(IntPtr widget);
    
    /// <summary>Call the Fl_Repeat_Button_set_label_size function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Repeat_Button_new" path="/returns" />
    /// </param>
    /// <param name="size">
    /// <inheritdoc cref="Fl_Repeat_Button_label_size" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Repeat_Button_set_label_size", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Repeat_Button_set_label_size(IntPtr widget, int size);
    
    /// <summary>Call the Fl_Repeat_Button_label_type function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Repeat_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Repeat_Button_label_type", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Repeat_Button_label_type(IntPtr widget);
    
    /// <summary>Call the Fl_Repeat_Button_set_label_type function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Repeat_Button_new" path="/returns" />
    /// </param>
    /// <param name="size">
    /// <inheritdoc cref="Fl_Repeat_Button_label_type" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Repeat_Button_set_label_type", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Repeat_Button_set_label_type(IntPtr widget, int size);
    
    /// <summary>Call the Fl_Repeat_Button_box function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Repeat_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Repeat_Button_box", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Repeat_Button_box(IntPtr widget);
    
    /// <summary>Call the Fl_Repeat_Button_set_box function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Repeat_Button_new" path="/returns" />
    /// </param>
    /// <param name="type"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Repeat_Button_set_box", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Repeat_Button_set_box(IntPtr widget, int type);
    
    /// <summary>Call the Fl_Repeat_Button_changed function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Repeat_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Repeat_Button_changed", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Repeat_Button_changed(IntPtr widget);
    
    /// <summary>Call the Fl_Repeat_Button_set_changed function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Repeat_Button_new" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Repeat_Button_set_changed", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Repeat_Button_set_changed(IntPtr widget);
    
    /// <summary>Call the Fl_Repeat_Button_clear_changed function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Repeat_Button_new" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Repeat_Button_clear_changed", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Repeat_Button_clear_changed(IntPtr widget);
    
    /// <summary>Call the Fl_Repeat_Button_align function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Repeat_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Repeat_Button_align", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Repeat_Button_align(IntPtr widget);
    
    /// <summary>Call the Fl_Repeat_Button_set_align function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Repeat_Button_new" path="/returns" />
    /// </param>
    /// <param name="type"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Repeat_Button_set_align", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Repeat_Button_set_align(IntPtr widget, int type);
    
    /// <summary>Call the Fl_Repeat_Button_delete function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Repeat_Button_new" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Repeat_Button_delete", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Repeat_Button_delete(IntPtr widget);
    
    /// <summary>Call the Fl_Repeat_Button_set_image function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Repeat_Button_new" path="/returns" />
    /// </param>
    /// <param name="imagePointer"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Repeat_Button_set_image", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Repeat_Button_set_image(IntPtr widget, IntPtr imagePointer);
    
    /// <summary>Call the Fl_Repeat_Button_handle function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Repeat_Button_new" path="/returns" />
    /// </param>
    /// <param name="callback"></param>
    /// <param name="data"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Repeat_Button_handle", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Repeat_Button_handle(IntPtr widget, FltkWidgetHandleCallback callback, IntPtr data);
    
    /// <summary>Call the Fl_Repeat_Button_handle_event function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Repeat_Button_new" path="/returns" />
    /// </param>
    /// <param name="eventType"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Repeat_Button_handle_event", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Repeat_Button_handle_event(IntPtr widget, int eventType);
    
    /// <summary>Call the Fl_Repeat_Button_draw function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Repeat_Button_new" path="/returns" />
    /// </param>
    /// <param name="callback"></param>
    /// <param name="data"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Repeat_Button_draw", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Repeat_Button_draw(IntPtr widget, FltkWidgetCallback callback, IntPtr data);
    
    /// <summary>Call the Fl_Repeat_Button_resize_callback function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Repeat_Button_new" path="/returns" />
    /// </param>
    /// <param name="callback"></param>
    /// <param name="data"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Repeat_Button_resize_callback", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Repeat_Button_resize_callback(IntPtr widget, FltkWidgetResizeCallback callback, IntPtr data);
    
    /// <summary>Call the Fl_Repeat_Button_set_when function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Repeat_Button_new" path="/returns" />
    /// </param>
    /// <param name="value"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Repeat_Button_set_when", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Repeat_Button_set_when(IntPtr widget, int value);
    
    /// <summary>Call the Fl_Repeat_Button_when function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Repeat_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Repeat_Button_when", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Repeat_Button_when(IntPtr widget);
    
    /// <summary>Call the Fl_Repeat_Button_image function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Repeat_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Repeat_Button_image", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Repeat_Button_image(IntPtr widget);
    
    /// <summary>Call the Fl_Repeat_Button_parent function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Repeat_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Repeat_Button_parent", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Repeat_Button_parent(IntPtr widget);
    
    /// <summary>Call the Fl_Repeat_Button_selection_color function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Repeat_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Repeat_Button_selection_color", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern uint Fl_Repeat_Button_selection_color(IntPtr widget);
    
    /// <summary>Call the Fl_Repeat_Button_set_selection_color function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Repeat_Button_new" path="/returns" />
    /// </param>
    /// <param name="color"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Repeat_Button_set_selection_color", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Repeat_Button_set_selection_color(IntPtr widget, uint color);
    
    /// <summary>Call the Fl_Repeat_Button_inside function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Repeat_Button_new" path="/returns" />
    /// </param>
    /// <param name="other"></param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Repeat_Button_inside", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Repeat_Button_inside(IntPtr widget, IntPtr other);
    
    /// <summary>Call the Fl_Repeat_Button_window function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Repeat_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Repeat_Button_window", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Repeat_Button_window(IntPtr widget);
    
    /// <summary>Call the Fl_Repeat_Button_top_window function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Repeat_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Repeat_Button_top_window", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Repeat_Button_top_window(IntPtr widget);
    
    /// <summary>Call the Fl_Repeat_Button_takes_events function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Repeat_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Repeat_Button_takes_events", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Repeat_Button_takes_events(IntPtr widget);
    
    /// <summary>Call the Fl_Repeat_Button_user_data function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Repeat_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Repeat_Button_user_data", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Repeat_Button_user_data(IntPtr widget);
    
    /// <summary>Call the Fl_Repeat_Button_take_focus function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Repeat_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Repeat_Button_take_focus", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Repeat_Button_take_focus(IntPtr widget);
    
    /// <summary>Call the Fl_Repeat_Button_set_visible_focus function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Repeat_Button_new" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Repeat_Button_set_visible_focus", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Repeat_Button_set_visible_focus(IntPtr widget);
    
    /// <summary>Call the Fl_Repeat_Button_clear_visible_focus function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Repeat_Button_new" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Repeat_Button_clear_visible_focus", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Repeat_Button_clear_visible_focus(IntPtr widget);
    
    /// <summary>Call the Fl_Repeat_Button_visible_focus function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Repeat_Button_new" path="/returns" />
    /// </param>
    /// <param name="value"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Repeat_Button_visible_focus", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Repeat_Button_visible_focus(IntPtr widget, int value);
    
    /// <summary>Call the Fl_Repeat_Button_has_visible_focus function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Repeat_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Repeat_Button_has_visible_focus", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern uint Fl_Repeat_Button_has_visible_focus(IntPtr widget);
    
    /// <summary>Call the Fl_Repeat_Button_set_user_data function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Repeat_Button_new" path="/returns" />
    /// </param>
    /// <param name="data"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Repeat_Button_set_user_data", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Repeat_Button_set_user_data(IntPtr widget, IntPtr data);
    
    /// <summary>Call the Fl_Repeat_Button_draw_data function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Repeat_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Repeat_Button_draw_data", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Repeat_Button_draw_data(IntPtr widget);
    
    /// <summary>Call the Fl_Repeat_Button_handle_data function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Repeat_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Repeat_Button_handle_data", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Repeat_Button_handle_data(IntPtr widget);
    
    /// <summary>Call the Fl_Repeat_Button_set_draw_data function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Repeat_Button_new" path="/returns" />
    /// </param>
    /// <param name="data"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Repeat_Button_set_draw_data", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Repeat_Button_set_draw_data(IntPtr widget, IntPtr data);
    
    /// <summary>Call the Fl_Repeat_Button_set_handle_data function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Repeat_Button_new" path="/returns" />
    /// </param>
    /// <param name="data"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Repeat_Button_set_handle_data", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Repeat_Button_set_handle_data(IntPtr widget, IntPtr data);
    
    /// <summary>Call the Fl_Repeat_Button_damage function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Repeat_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Repeat_Button_damage", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern char Fl_Repeat_Button_damage(IntPtr widget);
    
    /// <summary>Call the Fl_Repeat_Button_set_damage function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Repeat_Button_new" path="/returns" />
    /// </param>
    /// <param name="flag"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Repeat_Button_set_damage", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Repeat_Button_set_damage(IntPtr widget, char flag);
    
    /// <summary>Call the Fl_Repeat_Button_set_damage_area function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Repeat_Button_new" path="/returns" />
    /// </param>
    /// <param name="flag"></param>
    /// <param name="x"></param>
    /// <param name="y"></param>
    /// <param name="width"></param>
    /// <param name="height"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Repeat_Button_set_damage_area", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Repeat_Button_set_damage_area(IntPtr widget, char flag, int x, int y, int width, int height);
    
    /// <summary>Call the Fl_Repeat_Button_clear_damage function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Repeat_Button_new" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Repeat_Button_clear_damage", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Repeat_Button_clear_damage(IntPtr widget);
    
    /// <summary>Call the Fl_Repeat_Button_as_window function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Repeat_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Repeat_Button_as_window", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Repeat_Button_as_window(IntPtr widget);
    
    /// <summary>Call the Fl_Repeat_Button_as_group function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Repeat_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Repeat_Button_as_group", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Repeat_Button_as_group(IntPtr widget);
    
    /// <summary>Call the Fl_Repeat_Button_set_deimage function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Repeat_Button_new" path="/returns" />
    /// </param>
    /// <param name="imagePointer"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Repeat_Button_set_deimage", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Repeat_Button_set_deimage(IntPtr widget, IntPtr imagePointer);
    
    /// <summary>Call the Fl_Repeat_Button_deimage function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Repeat_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Repeat_Button_deimage", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Repeat_Button_deimage(IntPtr widget);
    
    /// <summary>Call the Fl_Repeat_Button_set_callback function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Repeat_Button_new" path="/returns" />
    /// </param>
    /// <param name="callback"></param>
    /// <param name="data"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Repeat_Button_set_callback", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Repeat_Button_set_callback(IntPtr widget, FltkWidgetCallback callback, IntPtr data);
    
    /// <summary>Call the Fl_Repeat_Button_set_deleter function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Repeat_Button_new" path="/returns" />
    /// </param>
    /// <param name="callback"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Repeat_Button_set_deleter", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Repeat_Button_set_deleter(IntPtr widget, Action<Action> callback);
    
    /// <summary>Call the Fl_Repeat_Button_visible function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Repeat_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Repeat_Button_visible", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Repeat_Button_visible(IntPtr widget);
    
    /// <summary>Call the Fl_Repeat_Button_visible_r function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Repeat_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Repeat_Button_visible_r", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Repeat_Button_visible_r(IntPtr widget);
    
    /// <summary>Call the Fl_Repeat_Button_active function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Repeat_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Repeat_Button_active", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern uint Fl_Repeat_Button_active(IntPtr widget);
    
    /// <summary>Call the Fl_Repeat_Button_active_r function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Repeat_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Repeat_Button_active_r", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Repeat_Button_active_r(IntPtr widget);
    
    /// <summary>Call the Fl_Repeat_Button_callback function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Repeat_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Repeat_Button_callback", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern FltkWidgetCallback Fl_Repeat_Button_callback(IntPtr widget);
    
    /// <summary>Call the Fl_Repeat_Button_set_deletion_callback function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Repeat_Button_new" path="/returns" />
    /// </param>
    /// <param name="callback"></param>
    /// <param name="data"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Repeat_Button_set_deletion_callback", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Repeat_Button_set_deletion_callback(IntPtr widget, FltkWidgetCallback callback, IntPtr data);
    
    /// <summary>Call the Fl_Repeat_Button_from_dyn_ptr function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Widget_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Repeat_Button_from_dyn_ptr", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Repeat_Button_from_dyn_ptr(IntPtr widget);
    
    /// <summary>Call the Fl_Repeat_Button_from_derived_dyn_ptr function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Widget_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Repeat_Button_from_derived_dyn_ptr", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Repeat_Button_from_derived_dyn_ptr(IntPtr widget);
    
    /// <summary>Call the Fl_Repeat_Button_super_draw function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Widget_new" path="/returns" />
    /// </param>
    /// <param name="flag"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Repeat_Button_super_draw", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Repeat_Button_super_draw(IntPtr widget, int flag);
    
    /// <summary>Call the Fl_Repeat_Button_super_draw_first function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Widget_new" path="/returns" />
    /// </param>
    /// <param name="flag"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Repeat_Button_super_draw_first", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Repeat_Button_super_draw_first(IntPtr widget, int flag);
    
    /// <summary>Call the Fl_Repeat_Button_super_handle_first function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Widget_new" path="/returns" />
    /// </param>
    /// <param name="flag"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Repeat_Button_super_handle_first", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Repeat_Button_super_handle_first(IntPtr widget, int flag);
    
    /// <summary>Call the Fl_Repeat_Button_shortcut function</summary>
    /// <param name="self">
    /// <inheritdoc cref="Fl_Repeat_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Repeat_Button_shortcut", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Repeat_Button_shortcut(IntPtr self);
    
    /// <summary>Call the Fl_Repeat_Button_set_shortcut function</summary>
    /// <param name="self">
    /// <inheritdoc cref="Fl_Repeat_Button_new" path="/returns" />
    /// </param>
    /// <param name="shortcut"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Repeat_Button_set_shortcut", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Repeat_Button_set_shortcut(IntPtr self, int shortcut);
    
    /// <summary>Call the Fl_Repeat_Button_clear function</summary>
    /// <param name="self">
    /// <inheritdoc cref="Fl_Repeat_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Repeat_Button_clear", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Repeat_Button_clear(IntPtr self);
    
    /// <summary>Call the Fl_Repeat_Button_value function</summary>
    /// <param name="self">
    /// <inheritdoc cref="Fl_Repeat_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Repeat_Button_value", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Repeat_Button_value(IntPtr self);
    
    /// <summary>Call the Fl_Repeat_Button_set_value function</summary>
    /// <param name="self">
    /// <inheritdoc cref="Fl_Repeat_Button_new" path="/returns" />
    /// </param>
    /// <param name="flag"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Repeat_Button_set_value", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Repeat_Button_set_value(IntPtr self, int flag);
    
    /// <summary>Call the Fl_Repeat_Button_set_down_box function</summary>
    /// <param name="self">
    /// <inheritdoc cref="Fl_Repeat_Button_new" path="/returns" />
    /// </param>
    /// <param name="flag"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Repeat_Button_set_down_box", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Repeat_Button_set_down_box(IntPtr self, int flag);
    
    /// <summary>Call the Fl_Repeat_Button_down_box function</summary>
    /// <param name="self">
    /// <inheritdoc cref="Fl_Repeat_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Repeat_Button_down_box", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Repeat_Button_down_box(IntPtr self);
    
    /// <summary>Call the Fl_Repeat_Button_set_compact function</summary>
    /// <param name="self">
    /// <inheritdoc cref="Fl_Repeat_Button_new" path="/returns" />
    /// </param>
    /// <param name="value"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Repeat_Button_set_compact", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Repeat_Button_set_compact(IntPtr self, char value);
    
    /// <summary>Call the Fl_Repeat_Button_compact function</summary>
    /// <param name="self">
    /// <inheritdoc cref="Fl_Repeat_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Repeat_Button_compact", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern char Fl_Repeat_Button_compact(IntPtr self);
    
    /// <summary>Call the Fl_Return_Button_new function</summary>
    /// <param name="x"></param>
    /// <param name="y"></param>
    /// <param name="width"></param>
    /// <param name="height"></param>
    /// <param name="labelPointer"></param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Return_Button_new", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Return_Button_new(int x, int y, int width, int height, IntPtr labelPointer);
    
    /// <summary>Call the Fl_Return_Button_x function</summary>
    /// <param name="widget">
    /// Pointer to <c>Fl_Return_Button</c>
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Return_Button_x", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Return_Button_x(IntPtr widget);
    
    /// <summary>Call the Fl_Return_Button_y function</summary>
    /// <param name="widget">
    /// Pointer to <c>Fl_Return_Button</c>
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Return_Button_y", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Return_Button_y(IntPtr widget);
    
    /// <summary>Call the Fl_Return_Button_width function</summary>
    /// <param name="widget">
    /// Pointer to <c>Fl_Return_Button</c>
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Return_Button_width", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Return_Button_width(IntPtr widget);
    
    /// <summary>Call the Fl_Return_Button_height function</summary>
    /// <param name="widget">
    /// Pointer to <c>Fl_Return_Button</c>
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Return_Button_height", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Return_Button_height(IntPtr widget);
    
    /// <summary>Call the Fl_Return_Button_label function</summary>
    /// <param name="widget">
    /// Pointer to <c>Fl_Return_Button</c>
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Return_Button_label", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Return_Button_label(IntPtr widget);
    
    /// <summary>Call the Fl_Return_Button_set_label function</summary>
    /// <param name="widget"></param>
    /// <param name="labelPointer">
    /// <inheritdoc cref="Fl_Widget_new" path="/param[@name='labelPointer']" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Return_Button_set_label", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Return_Button_set_label(IntPtr widget, IntPtr labelPointer);
    
    /// <summary>Call the Fl_Return_Button_redraw function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Return_Button_new" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Return_Button_redraw", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Return_Button_redraw(IntPtr widget);
    
    /// <summary>Call the Fl_Return_Button_show function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Return_Button_new" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Return_Button_show", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Return_Button_show(IntPtr widget);
    
    /// <summary>Call the Fl_Return_Button_hide function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Return_Button_new" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Return_Button_hide", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Return_Button_hide(IntPtr widget);
    
    /// <summary>Call the Fl_Return_Button_activate function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Return_Button_new" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Return_Button_activate", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Return_Button_activate(IntPtr widget);
    
    /// <summary>Call the Fl_Return_Button_deactivate function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Return_Button_new" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Return_Button_deactivate", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Return_Button_deactivate(IntPtr widget);
    
    /// <summary>Call the Fl_Return_Button_redraw_label function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Return_Button_new" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Return_Button_redraw_label", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Return_Button_redraw_label(IntPtr widget);
    
    /// <summary>Call the Fl_Return_Button_resize function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Return_Button_new" path="/returns" />
    /// </param>
    /// <param name="x"></param>
    /// <param name="y"></param>
    /// <param name="width"></param>
    /// <param name="height"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Return_Button_resize", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Return_Button_resize(IntPtr widget, int x, int y, int width, int height);
    
    /// <summary>Call the Fl_Return_Button_widget_resize function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Return_Button_new" path="/returns" />
    /// </param>
    /// <param name="x"></param>
    /// <param name="y"></param>
    /// <param name="width"></param>
    /// <param name="height"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Return_Button_widget_resize", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Return_Button_widget_resize(IntPtr widget, int x, int y, int width, int height);
    
    /// <summary>Call the Fl_Return_Button_tooltip function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Return_Button_new" path="/returns" />
    /// </param>
    /// <returns>
    /// <inheritdoc cref="Fl_Return_Button_new" path="/param[@name='labelPointer']" />
    /// </returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Return_Button_tooltip", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Return_Button_tooltip(IntPtr widget);
    
    /// <summary>Call the Fl_Return_Button_set_tooltip function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Return_Button_new" path="/returns" />
    /// </param>
    /// <param name="tooltipPointer">
    /// <inheritdoc cref="Fl_Return_Button_new" path="/param[@name='labelPointer']" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Return_Button_set_tooltip", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Return_Button_set_tooltip(IntPtr widget, IntPtr tooltipPointer);
    
    /// <summary>Call the Fl_Return_Button_get_type function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Return_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Return_Button_get_type", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Return_Button_get_type(IntPtr widget);
    
    /// <summary>Call the Fl_Return_Button_set_type function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Return_Button_new" path="/returns" />
    /// </param>
    /// <param name="type"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Return_Button_set_type", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Return_Button_set_type(IntPtr widget, int type);
    
    /// <summary>Call the Fl_Return_Button_color function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Return_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Return_Button_color", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern uint Fl_Return_Button_color(IntPtr widget);
    
    /// <summary>Call the Fl_Return_Button_set_color function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Return_Button_new" path="/returns" />
    /// </param>
    /// <param name="color"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Return_Button_set_color", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Return_Button_set_color(IntPtr widget, uint color);
    
    /// <summary>Call the Fl_Return_Button_measure_label function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Return_Button_new" path="/returns" />
    /// </param>
    /// <param name="width"></param>
    /// <param name="height"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Return_Button_measure_label", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Return_Button_measure_label(IntPtr widget, ref int width, ref int height);
    
    /// <summary>Call the Fl_Return_Button_label_color function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Return_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Return_Button_label_color", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern uint Fl_Return_Button_label_color(IntPtr widget);
    
    /// <summary>Call the Fl_Return_Button_set_label_color function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Return_Button_new" path="/returns" />
    /// </param>
    /// <param name="color">
    /// <inheritdoc cref="Fl_Return_Button_label_color" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Return_Button_set_label_color", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Return_Button_set_label_color(IntPtr widget, uint color);
    
    /// <summary>Call the Fl_Return_Button_label_font function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Return_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Return_Button_label_font", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Return_Button_label_font(IntPtr widget);
    
    /// <summary>Call the Fl_Return_Button_set_label_font function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Return_Button_new" path="/returns" />
    /// </param>
    /// <param name="fontIndex"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Return_Button_set_label_font", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Return_Button_set_label_font(IntPtr widget, int fontIndex);
    
    /// <summary>Call the Fl_Return_Button_label_size function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Return_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Return_Button_label_size", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Return_Button_label_size(IntPtr widget);
    
    /// <summary>Call the Fl_Return_Button_set_label_size function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Return_Button_new" path="/returns" />
    /// </param>
    /// <param name="size">
    /// <inheritdoc cref="Fl_Return_Button_label_size" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Return_Button_set_label_size", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Return_Button_set_label_size(IntPtr widget, int size);
    
    /// <summary>Call the Fl_Return_Button_label_type function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Return_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Return_Button_label_type", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Return_Button_label_type(IntPtr widget);
    
    /// <summary>Call the Fl_Return_Button_set_label_type function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Return_Button_new" path="/returns" />
    /// </param>
    /// <param name="size">
    /// <inheritdoc cref="Fl_Return_Button_label_type" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Return_Button_set_label_type", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Return_Button_set_label_type(IntPtr widget, int size);
    
    /// <summary>Call the Fl_Return_Button_box function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Return_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Return_Button_box", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Return_Button_box(IntPtr widget);
    
    /// <summary>Call the Fl_Return_Button_set_box function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Return_Button_new" path="/returns" />
    /// </param>
    /// <param name="type"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Return_Button_set_box", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Return_Button_set_box(IntPtr widget, int type);
    
    /// <summary>Call the Fl_Return_Button_changed function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Return_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Return_Button_changed", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Return_Button_changed(IntPtr widget);
    
    /// <summary>Call the Fl_Return_Button_set_changed function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Return_Button_new" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Return_Button_set_changed", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Return_Button_set_changed(IntPtr widget);
    
    /// <summary>Call the Fl_Return_Button_clear_changed function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Return_Button_new" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Return_Button_clear_changed", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Return_Button_clear_changed(IntPtr widget);
    
    /// <summary>Call the Fl_Return_Button_align function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Return_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Return_Button_align", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Return_Button_align(IntPtr widget);
    
    /// <summary>Call the Fl_Return_Button_set_align function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Return_Button_new" path="/returns" />
    /// </param>
    /// <param name="type"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Return_Button_set_align", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Return_Button_set_align(IntPtr widget, int type);
    
    /// <summary>Call the Fl_Return_Button_delete function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Return_Button_new" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Return_Button_delete", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Return_Button_delete(IntPtr widget);
    
    /// <summary>Call the Fl_Return_Button_set_image function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Return_Button_new" path="/returns" />
    /// </param>
    /// <param name="imagePointer"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Return_Button_set_image", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Return_Button_set_image(IntPtr widget, IntPtr imagePointer);
    
    /// <summary>Call the Fl_Return_Button_handle function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Return_Button_new" path="/returns" />
    /// </param>
    /// <param name="callback"></param>
    /// <param name="data"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Return_Button_handle", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Return_Button_handle(IntPtr widget, FltkWidgetHandleCallback callback, IntPtr data);
    
    /// <summary>Call the Fl_Return_Button_handle_event function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Return_Button_new" path="/returns" />
    /// </param>
    /// <param name="eventType"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Return_Button_handle_event", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Return_Button_handle_event(IntPtr widget, int eventType);
    
    /// <summary>Call the Fl_Return_Button_draw function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Return_Button_new" path="/returns" />
    /// </param>
    /// <param name="callback"></param>
    /// <param name="data"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Return_Button_draw", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Return_Button_draw(IntPtr widget, FltkWidgetCallback callback, IntPtr data);
    
    /// <summary>Call the Fl_Return_Button_resize_callback function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Return_Button_new" path="/returns" />
    /// </param>
    /// <param name="callback"></param>
    /// <param name="data"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Return_Button_resize_callback", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Return_Button_resize_callback(IntPtr widget, FltkWidgetResizeCallback callback, IntPtr data);
    
    /// <summary>Call the Fl_Return_Button_set_when function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Return_Button_new" path="/returns" />
    /// </param>
    /// <param name="value"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Return_Button_set_when", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Return_Button_set_when(IntPtr widget, int value);
    
    /// <summary>Call the Fl_Return_Button_when function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Return_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Return_Button_when", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Return_Button_when(IntPtr widget);
    
    /// <summary>Call the Fl_Return_Button_image function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Return_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Return_Button_image", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Return_Button_image(IntPtr widget);
    
    /// <summary>Call the Fl_Return_Button_parent function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Return_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Return_Button_parent", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Return_Button_parent(IntPtr widget);
    
    /// <summary>Call the Fl_Return_Button_selection_color function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Return_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Return_Button_selection_color", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern uint Fl_Return_Button_selection_color(IntPtr widget);
    
    /// <summary>Call the Fl_Return_Button_set_selection_color function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Return_Button_new" path="/returns" />
    /// </param>
    /// <param name="color"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Return_Button_set_selection_color", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Return_Button_set_selection_color(IntPtr widget, uint color);
    
    /// <summary>Call the Fl_Return_Button_inside function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Return_Button_new" path="/returns" />
    /// </param>
    /// <param name="other"></param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Return_Button_inside", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Return_Button_inside(IntPtr widget, IntPtr other);
    
    /// <summary>Call the Fl_Return_Button_window function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Return_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Return_Button_window", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Return_Button_window(IntPtr widget);
    
    /// <summary>Call the Fl_Return_Button_top_window function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Return_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Return_Button_top_window", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Return_Button_top_window(IntPtr widget);
    
    /// <summary>Call the Fl_Return_Button_takes_events function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Return_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Return_Button_takes_events", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Return_Button_takes_events(IntPtr widget);
    
    /// <summary>Call the Fl_Return_Button_user_data function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Return_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Return_Button_user_data", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Return_Button_user_data(IntPtr widget);
    
    /// <summary>Call the Fl_Return_Button_take_focus function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Return_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Return_Button_take_focus", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Return_Button_take_focus(IntPtr widget);
    
    /// <summary>Call the Fl_Return_Button_set_visible_focus function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Return_Button_new" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Return_Button_set_visible_focus", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Return_Button_set_visible_focus(IntPtr widget);
    
    /// <summary>Call the Fl_Return_Button_clear_visible_focus function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Return_Button_new" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Return_Button_clear_visible_focus", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Return_Button_clear_visible_focus(IntPtr widget);
    
    /// <summary>Call the Fl_Return_Button_visible_focus function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Return_Button_new" path="/returns" />
    /// </param>
    /// <param name="value"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Return_Button_visible_focus", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Return_Button_visible_focus(IntPtr widget, int value);
    
    /// <summary>Call the Fl_Return_Button_has_visible_focus function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Return_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Return_Button_has_visible_focus", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern uint Fl_Return_Button_has_visible_focus(IntPtr widget);
    
    /// <summary>Call the Fl_Return_Button_set_user_data function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Return_Button_new" path="/returns" />
    /// </param>
    /// <param name="data"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Return_Button_set_user_data", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Return_Button_set_user_data(IntPtr widget, IntPtr data);
    
    /// <summary>Call the Fl_Return_Button_draw_data function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Return_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Return_Button_draw_data", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Return_Button_draw_data(IntPtr widget);
    
    /// <summary>Call the Fl_Return_Button_handle_data function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Return_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Return_Button_handle_data", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Return_Button_handle_data(IntPtr widget);
    
    /// <summary>Call the Fl_Return_Button_set_draw_data function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Return_Button_new" path="/returns" />
    /// </param>
    /// <param name="data"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Return_Button_set_draw_data", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Return_Button_set_draw_data(IntPtr widget, IntPtr data);
    
    /// <summary>Call the Fl_Return_Button_set_handle_data function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Return_Button_new" path="/returns" />
    /// </param>
    /// <param name="data"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Return_Button_set_handle_data", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Return_Button_set_handle_data(IntPtr widget, IntPtr data);
    
    /// <summary>Call the Fl_Return_Button_damage function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Return_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Return_Button_damage", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern char Fl_Return_Button_damage(IntPtr widget);
    
    /// <summary>Call the Fl_Return_Button_set_damage function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Return_Button_new" path="/returns" />
    /// </param>
    /// <param name="flag"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Return_Button_set_damage", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Return_Button_set_damage(IntPtr widget, char flag);
    
    /// <summary>Call the Fl_Return_Button_set_damage_area function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Return_Button_new" path="/returns" />
    /// </param>
    /// <param name="flag"></param>
    /// <param name="x"></param>
    /// <param name="y"></param>
    /// <param name="width"></param>
    /// <param name="height"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Return_Button_set_damage_area", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Return_Button_set_damage_area(IntPtr widget, char flag, int x, int y, int width, int height);
    
    /// <summary>Call the Fl_Return_Button_clear_damage function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Return_Button_new" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Return_Button_clear_damage", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Return_Button_clear_damage(IntPtr widget);
    
    /// <summary>Call the Fl_Return_Button_as_window function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Return_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Return_Button_as_window", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Return_Button_as_window(IntPtr widget);
    
    /// <summary>Call the Fl_Return_Button_as_group function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Return_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Return_Button_as_group", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Return_Button_as_group(IntPtr widget);
    
    /// <summary>Call the Fl_Return_Button_set_deimage function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Return_Button_new" path="/returns" />
    /// </param>
    /// <param name="imagePointer"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Return_Button_set_deimage", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Return_Button_set_deimage(IntPtr widget, IntPtr imagePointer);
    
    /// <summary>Call the Fl_Return_Button_deimage function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Return_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Return_Button_deimage", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Return_Button_deimage(IntPtr widget);
    
    /// <summary>Call the Fl_Return_Button_set_callback function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Return_Button_new" path="/returns" />
    /// </param>
    /// <param name="callback"></param>
    /// <param name="data"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Return_Button_set_callback", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Return_Button_set_callback(IntPtr widget, FltkWidgetCallback callback, IntPtr data);
    
    /// <summary>Call the Fl_Return_Button_set_deleter function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Return_Button_new" path="/returns" />
    /// </param>
    /// <param name="callback"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Return_Button_set_deleter", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Return_Button_set_deleter(IntPtr widget, Action<Action> callback);
    
    /// <summary>Call the Fl_Return_Button_visible function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Return_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Return_Button_visible", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Return_Button_visible(IntPtr widget);
    
    /// <summary>Call the Fl_Return_Button_visible_r function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Return_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Return_Button_visible_r", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Return_Button_visible_r(IntPtr widget);
    
    /// <summary>Call the Fl_Return_Button_active function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Return_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Return_Button_active", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern uint Fl_Return_Button_active(IntPtr widget);
    
    /// <summary>Call the Fl_Return_Button_active_r function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Return_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Return_Button_active_r", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Return_Button_active_r(IntPtr widget);
    
    /// <summary>Call the Fl_Return_Button_callback function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Return_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Return_Button_callback", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern FltkWidgetCallback Fl_Return_Button_callback(IntPtr widget);
    
    /// <summary>Call the Fl_Return_Button_set_deletion_callback function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Return_Button_new" path="/returns" />
    /// </param>
    /// <param name="callback"></param>
    /// <param name="data"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Return_Button_set_deletion_callback", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Return_Button_set_deletion_callback(IntPtr widget, FltkWidgetCallback callback, IntPtr data);
    
    /// <summary>Call the Fl_Return_Button_from_dyn_ptr function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Widget_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Return_Button_from_dyn_ptr", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Return_Button_from_dyn_ptr(IntPtr widget);
    
    /// <summary>Call the Fl_Return_Button_from_derived_dyn_ptr function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Widget_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Return_Button_from_derived_dyn_ptr", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Return_Button_from_derived_dyn_ptr(IntPtr widget);
    
    /// <summary>Call the Fl_Return_Button_super_draw function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Widget_new" path="/returns" />
    /// </param>
    /// <param name="flag"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Return_Button_super_draw", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Return_Button_super_draw(IntPtr widget, int flag);
    
    /// <summary>Call the Fl_Return_Button_super_draw_first function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Widget_new" path="/returns" />
    /// </param>
    /// <param name="flag"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Return_Button_super_draw_first", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Return_Button_super_draw_first(IntPtr widget, int flag);
    
    /// <summary>Call the Fl_Return_Button_super_handle_first function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Widget_new" path="/returns" />
    /// </param>
    /// <param name="flag"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Return_Button_super_handle_first", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Return_Button_super_handle_first(IntPtr widget, int flag);
    
    /// <summary>Call the Fl_Return_Button_shortcut function</summary>
    /// <param name="self">
    /// <inheritdoc cref="Fl_Return_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Return_Button_shortcut", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Return_Button_shortcut(IntPtr self);
    
    /// <summary>Call the Fl_Return_Button_set_shortcut function</summary>
    /// <param name="self">
    /// <inheritdoc cref="Fl_Return_Button_new" path="/returns" />
    /// </param>
    /// <param name="shortcut"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Return_Button_set_shortcut", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Return_Button_set_shortcut(IntPtr self, int shortcut);
    
    /// <summary>Call the Fl_Return_Button_clear function</summary>
    /// <param name="self">
    /// <inheritdoc cref="Fl_Return_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Return_Button_clear", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Return_Button_clear(IntPtr self);
    
    /// <summary>Call the Fl_Return_Button_value function</summary>
    /// <param name="self">
    /// <inheritdoc cref="Fl_Return_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Return_Button_value", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Return_Button_value(IntPtr self);
    
    /// <summary>Call the Fl_Return_Button_set_value function</summary>
    /// <param name="self">
    /// <inheritdoc cref="Fl_Return_Button_new" path="/returns" />
    /// </param>
    /// <param name="flag"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Return_Button_set_value", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Return_Button_set_value(IntPtr self, int flag);
    
    /// <summary>Call the Fl_Return_Button_set_down_box function</summary>
    /// <param name="self">
    /// <inheritdoc cref="Fl_Return_Button_new" path="/returns" />
    /// </param>
    /// <param name="flag"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Return_Button_set_down_box", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Return_Button_set_down_box(IntPtr self, int flag);
    
    /// <summary>Call the Fl_Return_Button_down_box function</summary>
    /// <param name="self">
    /// <inheritdoc cref="Fl_Return_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Return_Button_down_box", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Return_Button_down_box(IntPtr self);
    
    /// <summary>Call the Fl_Return_Button_set_compact function</summary>
    /// <param name="self">
    /// <inheritdoc cref="Fl_Return_Button_new" path="/returns" />
    /// </param>
    /// <param name="value"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Return_Button_set_compact", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Return_Button_set_compact(IntPtr self, char value);
    
    /// <summary>Call the Fl_Return_Button_compact function</summary>
    /// <param name="self">
    /// <inheritdoc cref="Fl_Return_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Return_Button_compact", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern char Fl_Return_Button_compact(IntPtr self);
    
    /// <summary>Call the Fl_Shortcut_Button_new function</summary>
    /// <param name="x"></param>
    /// <param name="y"></param>
    /// <param name="width"></param>
    /// <param name="height"></param>
    /// <param name="labelPointer"></param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Shortcut_Button_new", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Shortcut_Button_new(int x, int y, int width, int height, IntPtr labelPointer);
    
    /// <summary>Call the Fl_Shortcut_Button_x function</summary>
    /// <param name="widget">
    /// Pointer to <c>Fl_Shortcut_Button</c>
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Shortcut_Button_x", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Shortcut_Button_x(IntPtr widget);
    
    /// <summary>Call the Fl_Shortcut_Button_y function</summary>
    /// <param name="widget">
    /// Pointer to <c>Fl_Shortcut_Button</c>
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Shortcut_Button_y", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Shortcut_Button_y(IntPtr widget);
    
    /// <summary>Call the Fl_Shortcut_Button_width function</summary>
    /// <param name="widget">
    /// Pointer to <c>Fl_Shortcut_Button</c>
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Shortcut_Button_width", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Shortcut_Button_width(IntPtr widget);
    
    /// <summary>Call the Fl_Shortcut_Button_height function</summary>
    /// <param name="widget">
    /// Pointer to <c>Fl_Shortcut_Button</c>
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Shortcut_Button_height", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Shortcut_Button_height(IntPtr widget);
    
    /// <summary>Call the Fl_Shortcut_Button_label function</summary>
    /// <param name="widget">
    /// Pointer to <c>Fl_Shortcut_Button</c>
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Shortcut_Button_label", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Shortcut_Button_label(IntPtr widget);
    
    /// <summary>Call the Fl_Shortcut_Button_set_label function</summary>
    /// <param name="widget"></param>
    /// <param name="labelPointer">
    /// <inheritdoc cref="Fl_Widget_new" path="/param[@name='labelPointer']" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Shortcut_Button_set_label", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Shortcut_Button_set_label(IntPtr widget, IntPtr labelPointer);
    
    /// <summary>Call the Fl_Shortcut_Button_redraw function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Shortcut_Button_new" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Shortcut_Button_redraw", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Shortcut_Button_redraw(IntPtr widget);
    
    /// <summary>Call the Fl_Shortcut_Button_show function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Shortcut_Button_new" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Shortcut_Button_show", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Shortcut_Button_show(IntPtr widget);
    
    /// <summary>Call the Fl_Shortcut_Button_hide function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Shortcut_Button_new" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Shortcut_Button_hide", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Shortcut_Button_hide(IntPtr widget);
    
    /// <summary>Call the Fl_Shortcut_Button_activate function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Shortcut_Button_new" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Shortcut_Button_activate", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Shortcut_Button_activate(IntPtr widget);
    
    /// <summary>Call the Fl_Shortcut_Button_deactivate function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Shortcut_Button_new" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Shortcut_Button_deactivate", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Shortcut_Button_deactivate(IntPtr widget);
    
    /// <summary>Call the Fl_Shortcut_Button_redraw_label function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Shortcut_Button_new" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Shortcut_Button_redraw_label", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Shortcut_Button_redraw_label(IntPtr widget);
    
    /// <summary>Call the Fl_Shortcut_Button_resize function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Shortcut_Button_new" path="/returns" />
    /// </param>
    /// <param name="x"></param>
    /// <param name="y"></param>
    /// <param name="width"></param>
    /// <param name="height"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Shortcut_Button_resize", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Shortcut_Button_resize(IntPtr widget, int x, int y, int width, int height);
    
    /// <summary>Call the Fl_Shortcut_Button_widget_resize function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Shortcut_Button_new" path="/returns" />
    /// </param>
    /// <param name="x"></param>
    /// <param name="y"></param>
    /// <param name="width"></param>
    /// <param name="height"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Shortcut_Button_widget_resize", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Shortcut_Button_widget_resize(IntPtr widget, int x, int y, int width, int height);
    
    /// <summary>Call the Fl_Shortcut_Button_tooltip function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Shortcut_Button_new" path="/returns" />
    /// </param>
    /// <returns>
    /// <inheritdoc cref="Fl_Shortcut_Button_new" path="/param[@name='labelPointer']" />
    /// </returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Shortcut_Button_tooltip", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Shortcut_Button_tooltip(IntPtr widget);
    
    /// <summary>Call the Fl_Shortcut_Button_set_tooltip function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Shortcut_Button_new" path="/returns" />
    /// </param>
    /// <param name="tooltipPointer">
    /// <inheritdoc cref="Fl_Shortcut_Button_new" path="/param[@name='labelPointer']" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Shortcut_Button_set_tooltip", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Shortcut_Button_set_tooltip(IntPtr widget, IntPtr tooltipPointer);
    
    /// <summary>Call the Fl_Shortcut_Button_get_type function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Shortcut_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Shortcut_Button_get_type", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Shortcut_Button_get_type(IntPtr widget);
    
    /// <summary>Call the Fl_Shortcut_Button_set_type function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Shortcut_Button_new" path="/returns" />
    /// </param>
    /// <param name="type"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Shortcut_Button_set_type", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Shortcut_Button_set_type(IntPtr widget, int type);
    
    /// <summary>Call the Fl_Shortcut_Button_color function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Shortcut_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Shortcut_Button_color", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern uint Fl_Shortcut_Button_color(IntPtr widget);
    
    /// <summary>Call the Fl_Shortcut_Button_set_color function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Shortcut_Button_new" path="/returns" />
    /// </param>
    /// <param name="color"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Shortcut_Button_set_color", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Shortcut_Button_set_color(IntPtr widget, uint color);
    
    /// <summary>Call the Fl_Shortcut_Button_measure_label function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Shortcut_Button_new" path="/returns" />
    /// </param>
    /// <param name="width"></param>
    /// <param name="height"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Shortcut_Button_measure_label", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Shortcut_Button_measure_label(IntPtr widget, ref int width, ref int height);
    
    /// <summary>Call the Fl_Shortcut_Button_label_color function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Shortcut_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Shortcut_Button_label_color", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern uint Fl_Shortcut_Button_label_color(IntPtr widget);
    
    /// <summary>Call the Fl_Shortcut_Button_set_label_color function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Shortcut_Button_new" path="/returns" />
    /// </param>
    /// <param name="color">
    /// <inheritdoc cref="Fl_Shortcut_Button_label_color" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Shortcut_Button_set_label_color", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Shortcut_Button_set_label_color(IntPtr widget, uint color);
    
    /// <summary>Call the Fl_Shortcut_Button_label_font function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Shortcut_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Shortcut_Button_label_font", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Shortcut_Button_label_font(IntPtr widget);
    
    /// <summary>Call the Fl_Shortcut_Button_set_label_font function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Shortcut_Button_new" path="/returns" />
    /// </param>
    /// <param name="fontIndex"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Shortcut_Button_set_label_font", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Shortcut_Button_set_label_font(IntPtr widget, int fontIndex);
    
    /// <summary>Call the Fl_Shortcut_Button_label_size function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Shortcut_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Shortcut_Button_label_size", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Shortcut_Button_label_size(IntPtr widget);
    
    /// <summary>Call the Fl_Shortcut_Button_set_label_size function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Shortcut_Button_new" path="/returns" />
    /// </param>
    /// <param name="size">
    /// <inheritdoc cref="Fl_Shortcut_Button_label_size" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Shortcut_Button_set_label_size", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Shortcut_Button_set_label_size(IntPtr widget, int size);
    
    /// <summary>Call the Fl_Shortcut_Button_label_type function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Shortcut_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Shortcut_Button_label_type", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Shortcut_Button_label_type(IntPtr widget);
    
    /// <summary>Call the Fl_Shortcut_Button_set_label_type function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Shortcut_Button_new" path="/returns" />
    /// </param>
    /// <param name="size">
    /// <inheritdoc cref="Fl_Shortcut_Button_label_type" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Shortcut_Button_set_label_type", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Shortcut_Button_set_label_type(IntPtr widget, int size);
    
    /// <summary>Call the Fl_Shortcut_Button_box function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Shortcut_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Shortcut_Button_box", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Shortcut_Button_box(IntPtr widget);
    
    /// <summary>Call the Fl_Shortcut_Button_set_box function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Shortcut_Button_new" path="/returns" />
    /// </param>
    /// <param name="type"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Shortcut_Button_set_box", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Shortcut_Button_set_box(IntPtr widget, int type);
    
    /// <summary>Call the Fl_Shortcut_Button_changed function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Shortcut_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Shortcut_Button_changed", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Shortcut_Button_changed(IntPtr widget);
    
    /// <summary>Call the Fl_Shortcut_Button_set_changed function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Shortcut_Button_new" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Shortcut_Button_set_changed", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Shortcut_Button_set_changed(IntPtr widget);
    
    /// <summary>Call the Fl_Shortcut_Button_clear_changed function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Shortcut_Button_new" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Shortcut_Button_clear_changed", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Shortcut_Button_clear_changed(IntPtr widget);
    
    /// <summary>Call the Fl_Shortcut_Button_align function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Shortcut_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Shortcut_Button_align", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Shortcut_Button_align(IntPtr widget);
    
    /// <summary>Call the Fl_Shortcut_Button_set_align function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Shortcut_Button_new" path="/returns" />
    /// </param>
    /// <param name="type"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Shortcut_Button_set_align", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Shortcut_Button_set_align(IntPtr widget, int type);
    
    /// <summary>Call the Fl_Shortcut_Button_delete function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Shortcut_Button_new" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Shortcut_Button_delete", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Shortcut_Button_delete(IntPtr widget);
    
    /// <summary>Call the Fl_Shortcut_Button_set_image function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Shortcut_Button_new" path="/returns" />
    /// </param>
    /// <param name="imagePointer"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Shortcut_Button_set_image", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Shortcut_Button_set_image(IntPtr widget, IntPtr imagePointer);
    
    /// <summary>Call the Fl_Shortcut_Button_handle function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Shortcut_Button_new" path="/returns" />
    /// </param>
    /// <param name="callback"></param>
    /// <param name="data"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Shortcut_Button_handle", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Shortcut_Button_handle(IntPtr widget, FltkWidgetHandleCallback callback, IntPtr data);
    
    /// <summary>Call the Fl_Shortcut_Button_handle_event function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Shortcut_Button_new" path="/returns" />
    /// </param>
    /// <param name="eventType"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Shortcut_Button_handle_event", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Shortcut_Button_handle_event(IntPtr widget, int eventType);
    
    /// <summary>Call the Fl_Shortcut_Button_draw function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Shortcut_Button_new" path="/returns" />
    /// </param>
    /// <param name="callback"></param>
    /// <param name="data"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Shortcut_Button_draw", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Shortcut_Button_draw(IntPtr widget, FltkWidgetCallback callback, IntPtr data);
    
    /// <summary>Call the Fl_Shortcut_Button_resize_callback function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Shortcut_Button_new" path="/returns" />
    /// </param>
    /// <param name="callback"></param>
    /// <param name="data"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Shortcut_Button_resize_callback", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Shortcut_Button_resize_callback(IntPtr widget, FltkWidgetResizeCallback callback, IntPtr data);
    
    /// <summary>Call the Fl_Shortcut_Button_set_when function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Shortcut_Button_new" path="/returns" />
    /// </param>
    /// <param name="value"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Shortcut_Button_set_when", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Shortcut_Button_set_when(IntPtr widget, int value);
    
    /// <summary>Call the Fl_Shortcut_Button_when function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Shortcut_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Shortcut_Button_when", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Shortcut_Button_when(IntPtr widget);
    
    /// <summary>Call the Fl_Shortcut_Button_image function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Shortcut_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Shortcut_Button_image", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Shortcut_Button_image(IntPtr widget);
    
    /// <summary>Call the Fl_Shortcut_Button_parent function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Shortcut_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Shortcut_Button_parent", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Shortcut_Button_parent(IntPtr widget);
    
    /// <summary>Call the Fl_Shortcut_Button_selection_color function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Shortcut_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Shortcut_Button_selection_color", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern uint Fl_Shortcut_Button_selection_color(IntPtr widget);
    
    /// <summary>Call the Fl_Shortcut_Button_set_selection_color function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Shortcut_Button_new" path="/returns" />
    /// </param>
    /// <param name="color"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Shortcut_Button_set_selection_color", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Shortcut_Button_set_selection_color(IntPtr widget, uint color);
    
    /// <summary>Call the Fl_Shortcut_Button_inside function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Shortcut_Button_new" path="/returns" />
    /// </param>
    /// <param name="other"></param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Shortcut_Button_inside", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Shortcut_Button_inside(IntPtr widget, IntPtr other);
    
    /// <summary>Call the Fl_Shortcut_Button_window function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Shortcut_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Shortcut_Button_window", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Shortcut_Button_window(IntPtr widget);
    
    /// <summary>Call the Fl_Shortcut_Button_top_window function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Shortcut_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Shortcut_Button_top_window", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Shortcut_Button_top_window(IntPtr widget);
    
    /// <summary>Call the Fl_Shortcut_Button_takes_events function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Shortcut_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Shortcut_Button_takes_events", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Shortcut_Button_takes_events(IntPtr widget);
    
    /// <summary>Call the Fl_Shortcut_Button_user_data function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Shortcut_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Shortcut_Button_user_data", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Shortcut_Button_user_data(IntPtr widget);
    
    /// <summary>Call the Fl_Shortcut_Button_take_focus function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Shortcut_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Shortcut_Button_take_focus", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Shortcut_Button_take_focus(IntPtr widget);
    
    /// <summary>Call the Fl_Shortcut_Button_set_visible_focus function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Shortcut_Button_new" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Shortcut_Button_set_visible_focus", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Shortcut_Button_set_visible_focus(IntPtr widget);
    
    /// <summary>Call the Fl_Shortcut_Button_clear_visible_focus function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Shortcut_Button_new" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Shortcut_Button_clear_visible_focus", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Shortcut_Button_clear_visible_focus(IntPtr widget);
    
    /// <summary>Call the Fl_Shortcut_Button_visible_focus function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Shortcut_Button_new" path="/returns" />
    /// </param>
    /// <param name="value"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Shortcut_Button_visible_focus", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Shortcut_Button_visible_focus(IntPtr widget, int value);
    
    /// <summary>Call the Fl_Shortcut_Button_has_visible_focus function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Shortcut_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Shortcut_Button_has_visible_focus", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern uint Fl_Shortcut_Button_has_visible_focus(IntPtr widget);
    
    /// <summary>Call the Fl_Shortcut_Button_set_user_data function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Shortcut_Button_new" path="/returns" />
    /// </param>
    /// <param name="data"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Shortcut_Button_set_user_data", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Shortcut_Button_set_user_data(IntPtr widget, IntPtr data);
    
    /// <summary>Call the Fl_Shortcut_Button_draw_data function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Shortcut_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Shortcut_Button_draw_data", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Shortcut_Button_draw_data(IntPtr widget);
    
    /// <summary>Call the Fl_Shortcut_Button_handle_data function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Shortcut_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Shortcut_Button_handle_data", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Shortcut_Button_handle_data(IntPtr widget);
    
    /// <summary>Call the Fl_Shortcut_Button_set_draw_data function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Shortcut_Button_new" path="/returns" />
    /// </param>
    /// <param name="data"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Shortcut_Button_set_draw_data", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Shortcut_Button_set_draw_data(IntPtr widget, IntPtr data);
    
    /// <summary>Call the Fl_Shortcut_Button_set_handle_data function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Shortcut_Button_new" path="/returns" />
    /// </param>
    /// <param name="data"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Shortcut_Button_set_handle_data", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Shortcut_Button_set_handle_data(IntPtr widget, IntPtr data);
    
    /// <summary>Call the Fl_Shortcut_Button_damage function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Shortcut_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Shortcut_Button_damage", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern char Fl_Shortcut_Button_damage(IntPtr widget);
    
    /// <summary>Call the Fl_Shortcut_Button_set_damage function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Shortcut_Button_new" path="/returns" />
    /// </param>
    /// <param name="flag"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Shortcut_Button_set_damage", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Shortcut_Button_set_damage(IntPtr widget, char flag);
    
    /// <summary>Call the Fl_Shortcut_Button_set_damage_area function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Shortcut_Button_new" path="/returns" />
    /// </param>
    /// <param name="flag"></param>
    /// <param name="x"></param>
    /// <param name="y"></param>
    /// <param name="width"></param>
    /// <param name="height"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Shortcut_Button_set_damage_area", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Shortcut_Button_set_damage_area(IntPtr widget, char flag, int x, int y, int width, int height);
    
    /// <summary>Call the Fl_Shortcut_Button_clear_damage function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Shortcut_Button_new" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Shortcut_Button_clear_damage", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Shortcut_Button_clear_damage(IntPtr widget);
    
    /// <summary>Call the Fl_Shortcut_Button_as_window function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Shortcut_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Shortcut_Button_as_window", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Shortcut_Button_as_window(IntPtr widget);
    
    /// <summary>Call the Fl_Shortcut_Button_as_group function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Shortcut_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Shortcut_Button_as_group", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Shortcut_Button_as_group(IntPtr widget);
    
    /// <summary>Call the Fl_Shortcut_Button_set_deimage function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Shortcut_Button_new" path="/returns" />
    /// </param>
    /// <param name="imagePointer"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Shortcut_Button_set_deimage", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Shortcut_Button_set_deimage(IntPtr widget, IntPtr imagePointer);
    
    /// <summary>Call the Fl_Shortcut_Button_deimage function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Shortcut_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Shortcut_Button_deimage", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Shortcut_Button_deimage(IntPtr widget);
    
    /// <summary>Call the Fl_Shortcut_Button_set_callback function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Shortcut_Button_new" path="/returns" />
    /// </param>
    /// <param name="callback"></param>
    /// <param name="data"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Shortcut_Button_set_callback", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Shortcut_Button_set_callback(IntPtr widget, FltkWidgetCallback callback, IntPtr data);
    
    /// <summary>Call the Fl_Shortcut_Button_set_deleter function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Shortcut_Button_new" path="/returns" />
    /// </param>
    /// <param name="callback"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Shortcut_Button_set_deleter", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Shortcut_Button_set_deleter(IntPtr widget, Action<Action> callback);
    
    /// <summary>Call the Fl_Shortcut_Button_visible function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Shortcut_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Shortcut_Button_visible", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Shortcut_Button_visible(IntPtr widget);
    
    /// <summary>Call the Fl_Shortcut_Button_visible_r function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Shortcut_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Shortcut_Button_visible_r", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Shortcut_Button_visible_r(IntPtr widget);
    
    /// <summary>Call the Fl_Shortcut_Button_active function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Shortcut_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Shortcut_Button_active", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern uint Fl_Shortcut_Button_active(IntPtr widget);
    
    /// <summary>Call the Fl_Shortcut_Button_active_r function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Shortcut_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Shortcut_Button_active_r", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Shortcut_Button_active_r(IntPtr widget);
    
    /// <summary>Call the Fl_Shortcut_Button_callback function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Shortcut_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Shortcut_Button_callback", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern FltkWidgetCallback Fl_Shortcut_Button_callback(IntPtr widget);
    
    /// <summary>Call the Fl_Shortcut_Button_set_deletion_callback function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Shortcut_Button_new" path="/returns" />
    /// </param>
    /// <param name="callback"></param>
    /// <param name="data"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Shortcut_Button_set_deletion_callback", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Shortcut_Button_set_deletion_callback(IntPtr widget, FltkWidgetCallback callback, IntPtr data);
    
    /// <summary>Call the Fl_Shortcut_Button_from_dyn_ptr function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Widget_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Shortcut_Button_from_dyn_ptr", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Shortcut_Button_from_dyn_ptr(IntPtr widget);
    
    /// <summary>Call the Fl_Shortcut_Button_from_derived_dyn_ptr function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Widget_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Shortcut_Button_from_derived_dyn_ptr", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Shortcut_Button_from_derived_dyn_ptr(IntPtr widget);
    
    /// <summary>Call the Fl_Shortcut_Button_super_draw function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Widget_new" path="/returns" />
    /// </param>
    /// <param name="flag"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Shortcut_Button_super_draw", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Shortcut_Button_super_draw(IntPtr widget, int flag);
    
    /// <summary>Call the Fl_Shortcut_Button_super_draw_first function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Widget_new" path="/returns" />
    /// </param>
    /// <param name="flag"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Shortcut_Button_super_draw_first", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Shortcut_Button_super_draw_first(IntPtr widget, int flag);
    
    /// <summary>Call the Fl_Shortcut_Button_super_handle_first function</summary>
    /// <param name="widget">
    /// <inheritdoc cref="Fl_Widget_new" path="/returns" />
    /// </param>
    /// <param name="flag"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Shortcut_Button_super_handle_first", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Shortcut_Button_super_handle_first(IntPtr widget, int flag);
    
    /// <summary>Call the Fl_Shortcut_Button_shortcut function</summary>
    /// <param name="self">
    /// <inheritdoc cref="Fl_Shortcut_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Shortcut_Button_shortcut", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Shortcut_Button_shortcut(IntPtr self);
    
    /// <summary>Call the Fl_Shortcut_Button_set_shortcut function</summary>
    /// <param name="self">
    /// <inheritdoc cref="Fl_Shortcut_Button_new" path="/returns" />
    /// </param>
    /// <param name="shortcut"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Shortcut_Button_set_shortcut", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Shortcut_Button_set_shortcut(IntPtr self, int shortcut);
    
    /// <summary>Call the Fl_Shortcut_Button_clear function</summary>
    /// <param name="self">
    /// <inheritdoc cref="Fl_Shortcut_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Shortcut_Button_clear", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Shortcut_Button_clear(IntPtr self);
    
    /// <summary>Call the Fl_Shortcut_Button_value function</summary>
    /// <param name="self">
    /// <inheritdoc cref="Fl_Shortcut_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Shortcut_Button_value", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Shortcut_Button_value(IntPtr self);
    
    /// <summary>Call the Fl_Shortcut_Button_set_value function</summary>
    /// <param name="self">
    /// <inheritdoc cref="Fl_Shortcut_Button_new" path="/returns" />
    /// </param>
    /// <param name="flag"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Shortcut_Button_set_value", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Shortcut_Button_set_value(IntPtr self, int flag);
    
    /// <summary>Call the Fl_Shortcut_Button_set_down_box function</summary>
    /// <param name="self">
    /// <inheritdoc cref="Fl_Shortcut_Button_new" path="/returns" />
    /// </param>
    /// <param name="flag"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Shortcut_Button_set_down_box", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Shortcut_Button_set_down_box(IntPtr self, int flag);
    
    /// <summary>Call the Fl_Shortcut_Button_down_box function</summary>
    /// <param name="self">
    /// <inheritdoc cref="Fl_Shortcut_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Shortcut_Button_down_box", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Shortcut_Button_down_box(IntPtr self);
    
    /// <summary>Call the Fl_Shortcut_Button_set_compact function</summary>
    /// <param name="self">
    /// <inheritdoc cref="Fl_Shortcut_Button_new" path="/returns" />
    /// </param>
    /// <param name="value"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Shortcut_Button_set_compact", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Shortcut_Button_set_compact(IntPtr self, char value);
    
    /// <summary>Call the Fl_Shortcut_Button_compact function</summary>
    /// <param name="self">
    /// <inheritdoc cref="Fl_Shortcut_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Shortcut_Button_compact", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern char Fl_Shortcut_Button_compact(IntPtr self);
    
    /// <summary>Call the Fl_Shortcut_Button_default_value function</summary>
    /// <param name="self">
    /// <inheritdoc cref="Fl_Shortcut_Button_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Shortcut_Button_default_value", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Shortcut_Button_default_value(IntPtr self);
    
    /// <summary>Call the Fl_Shortcut_Button_set_default_value function</summary>
    /// <param name="self">
    /// <inheritdoc cref="Fl_Shortcut_Button_new" path="/returns" />
    /// </param>
    /// <param name="flag"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Shortcut_Button_set_default_value", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Shortcut_Button_set_default_value(IntPtr self, int flag);
    
    /// <summary>Call the Fl_Shortcut_Button_default_clear function</summary>
    /// <param name="self">
    /// <inheritdoc cref="Fl_Shortcut_Button_new" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Shortcut_Button_default_clear", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Shortcut_Button_default_clear(IntPtr self);
    
    /// <summary>Call the Fl_Image_draw function</summary>
    /// <param name="imagePtr"></param>
    /// <param name="x"></param>
    /// <param name="y"></param>
    /// <param name="width"></param>
    /// <param name="height"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Image_draw", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Image_draw(IntPtr imagePtr, int x, int y, int width, int height);
    
    /// <summary>Call the Fl_Image_draw_ext function</summary>
    /// <param name="imagePtr"></param>
    /// <param name="x"></param>
    /// <param name="y"></param>
    /// <param name="width"></param>
    /// <param name="height"></param>
    /// <param name="cx"></param>
    /// <param name="cy"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Image_draw_ext", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Image_draw_ext(IntPtr imagePtr, int x, int y, int width, int height, int cx, int cy);
    
    /// <summary>Call the Fl_Image_width function</summary>
    /// <param name="imagePtr"></param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Image_width", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Image_width(IntPtr imagePtr);
    
    /// <summary>Call the Fl_Image_height function</summary>
    /// <param name="imagePtr"></param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Image_height", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Image_height(IntPtr imagePtr);
    
    /// <summary>Call the Fl_Image_delete function</summary>
    /// <param name="imagePtr"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Image_delete", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Image_delete(IntPtr imagePtr);
    
    /// <summary>Call the Fl_Image_count function</summary>
    /// <param name="imagePtr"></param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Image_count", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Image_count(IntPtr imagePtr);
    
    /// <summary>Call the Fl_Image_data function</summary>
    /// <param name="imagePtr"></param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Image_data", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Image_data(IntPtr imagePtr);
    
    /// <summary>Call the Fl_Image_copy function</summary>
    /// <param name="imagePtr"></param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Image_copy", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Image_copy(IntPtr imagePtr);
    
    /// <summary>Call the Fl_Image_copy_sized function</summary>
    /// <param name="imagePtr"></param>
    /// <param name="width"></param>
    /// <param name="height"></param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Image_copy_sized", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Image_copy_sized(IntPtr imagePtr, int width, int height);
    
    /// <summary>Call the Fl_Image_scale function</summary>
    /// <param name="imagePtr"></param>
    /// <param name="width"></param>
    /// <param name="height"></param>
    /// <param name="proportinal"></param>
    /// <param name="can_expand"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Image_scale", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Image_scale(IntPtr imagePtr, int width, int height, int proportinal, int can_expand);
    
    /// <summary>Call the Fl_Image_fail function</summary>
    /// <param name="imagePtr"></param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Image_fail", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Image_fail(IntPtr imagePtr);
    
    /// <summary>Call the Fl_Image_data_w function</summary>
    /// <param name="imagePtr"></param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Image_data_w", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Image_data_w(IntPtr imagePtr);
    
    /// <summary>Call the Fl_Image_data_h function</summary>
    /// <param name="imagePtr"></param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Image_data_h", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Image_data_h(IntPtr imagePtr);
    
    /// <summary>Call the Fl_Image_d function</summary>
    /// <param name="imagePtr"></param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Image_d", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Image_d(IntPtr imagePtr);
    
    /// <summary>Call the Fl_Image_ld function</summary>
    /// <param name="imagePtr"></param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Image_ld", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Image_ld(IntPtr imagePtr);
    
    /// <summary>Call the Fl_Image_inactive function</summary>
    /// <param name="imagePtr"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Image_inactive", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Image_inactive(IntPtr imagePtr);
    
    /// <summary>Call the Fl_Image_from_dyn_ptr function</summary>
    /// <param name="imagePtr"></param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Image_from_dyn_ptr", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Image_from_dyn_ptr(IntPtr imagePtr);
    
    /// <summary>Call the Fl_Image_set_scaling_algorithm function</summary>
    /// <param name="algorithm"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Image_set_scaling_algorithm", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Image_set_scaling_algorithm(int algorithm);
    
    /// <summary>Call the Fl_Image_scaling_algorithm function</summary>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Image_scaling_algorithm", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Image_scaling_algorithm();
    
    /// <summary>Call the Fl_JPEG_Image_draw function</summary>
    /// <param name="imagePtr"></param>
    /// <param name="x"></param>
    /// <param name="y"></param>
    /// <param name="width"></param>
    /// <param name="height"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_JPEG_Image_draw", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_JPEG_Image_draw(IntPtr imagePtr, int x, int y, int width, int height);
    
    /// <summary>Call the Fl_JPEG_Image_draw_ext function</summary>
    /// <param name="imagePtr"></param>
    /// <param name="x"></param>
    /// <param name="y"></param>
    /// <param name="width"></param>
    /// <param name="height"></param>
    /// <param name="cx"></param>
    /// <param name="cy"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_JPEG_Image_draw_ext", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_JPEG_Image_draw_ext(IntPtr imagePtr, int x, int y, int width, int height, int cx, int cy);
    
    /// <summary>Call the Fl_JPEG_Image_width function</summary>
    /// <param name="imagePtr"></param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_JPEG_Image_width", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_JPEG_Image_width(IntPtr imagePtr);
    
    /// <summary>Call the Fl_JPEG_Image_height function</summary>
    /// <param name="imagePtr"></param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_JPEG_Image_height", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_JPEG_Image_height(IntPtr imagePtr);
    
    /// <summary>Call the Fl_JPEG_Image_delete function</summary>
    /// <param name="imagePtr"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_JPEG_Image_delete", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_JPEG_Image_delete(IntPtr imagePtr);
    
    /// <summary>Call the Fl_JPEG_Image_count function</summary>
    /// <param name="imagePtr"></param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_JPEG_Image_count", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_JPEG_Image_count(IntPtr imagePtr);
    
    /// <summary>Call the Fl_JPEG_Image_data function</summary>
    /// <param name="imagePtr"></param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_JPEG_Image_data", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_JPEG_Image_data(IntPtr imagePtr);
    
    /// <summary>Call the Fl_JPEG_Image_copy function</summary>
    /// <param name="imagePtr"></param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_JPEG_Image_copy", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_JPEG_Image_copy(IntPtr imagePtr);
    
    /// <summary>Call the Fl_JPEG_Image_copy_sized function</summary>
    /// <param name="imagePtr"></param>
    /// <param name="width"></param>
    /// <param name="height"></param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_JPEG_Image_copy_sized", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_JPEG_Image_copy_sized(IntPtr imagePtr, int width, int height);
    
    /// <summary>Call the Fl_JPEG_Image_scale function</summary>
    /// <param name="imagePtr"></param>
    /// <param name="width"></param>
    /// <param name="height"></param>
    /// <param name="proportinal"></param>
    /// <param name="can_expand"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_JPEG_Image_scale", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_JPEG_Image_scale(IntPtr imagePtr, int width, int height, int proportinal, int can_expand);
    
    /// <summary>Call the Fl_JPEG_Image_fail function</summary>
    /// <param name="imagePtr"></param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_JPEG_Image_fail", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_JPEG_Image_fail(IntPtr imagePtr);
    
    /// <summary>Call the Fl_JPEG_Image_data_w function</summary>
    /// <param name="imagePtr"></param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_JPEG_Image_data_w", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_JPEG_Image_data_w(IntPtr imagePtr);
    
    /// <summary>Call the Fl_JPEG_Image_data_h function</summary>
    /// <param name="imagePtr"></param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_JPEG_Image_data_h", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_JPEG_Image_data_h(IntPtr imagePtr);
    
    /// <summary>Call the Fl_JPEG_Image_d function</summary>
    /// <param name="imagePtr"></param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_JPEG_Image_d", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_JPEG_Image_d(IntPtr imagePtr);
    
    /// <summary>Call the Fl_JPEG_Image_ld function</summary>
    /// <param name="imagePtr"></param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_JPEG_Image_ld", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_JPEG_Image_ld(IntPtr imagePtr);
    
    /// <summary>Call the Fl_JPEG_Image_inactive function</summary>
    /// <param name="imagePtr"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_JPEG_Image_inactive", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_JPEG_Image_inactive(IntPtr imagePtr);
    
    /// <summary>Call the Fl_JPEG_Image_from_dyn_ptr function</summary>
    /// <param name="imagePtr"></param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_JPEG_Image_from_dyn_ptr", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_JPEG_Image_from_dyn_ptr(IntPtr imagePtr);
    
    /// <summary>Call the Fl_JPEG_Image_new function</summary>
    /// <param name="filenamePtr">
    /// <inheritdoc cref="Fl_Widget_new" path="/param[@name='labelPointer']" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_JPEG_Image_new", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_JPEG_Image_new(IntPtr filenamePtr);
    
    /// <summary>Call the Fl_JPEG_Image_from function</summary>
    /// <param name="dataPointer"></param>
    /// <returns>
    /// <inheritdoc cref="Fl_JPEG_Image_new" path="/returns" />
    /// </returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_JPEG_Image_from", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_JPEG_Image_from(IntPtr dataPointer);
    
    /// <summary>Call the Fl_PNG_Image_draw function</summary>
    /// <param name="imagePtr"></param>
    /// <param name="x"></param>
    /// <param name="y"></param>
    /// <param name="width"></param>
    /// <param name="height"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_PNG_Image_draw", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_PNG_Image_draw(IntPtr imagePtr, int x, int y, int width, int height);
    
    /// <summary>Call the Fl_PNG_Image_draw_ext function</summary>
    /// <param name="imagePtr"></param>
    /// <param name="x"></param>
    /// <param name="y"></param>
    /// <param name="width"></param>
    /// <param name="height"></param>
    /// <param name="cx"></param>
    /// <param name="cy"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_PNG_Image_draw_ext", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_PNG_Image_draw_ext(IntPtr imagePtr, int x, int y, int width, int height, int cx, int cy);
    
    /// <summary>Call the Fl_PNG_Image_width function</summary>
    /// <param name="imagePtr"></param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_PNG_Image_width", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_PNG_Image_width(IntPtr imagePtr);
    
    /// <summary>Call the Fl_PNG_Image_height function</summary>
    /// <param name="imagePtr"></param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_PNG_Image_height", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_PNG_Image_height(IntPtr imagePtr);
    
    /// <summary>Call the Fl_PNG_Image_delete function</summary>
    /// <param name="imagePtr"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_PNG_Image_delete", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_PNG_Image_delete(IntPtr imagePtr);
    
    /// <summary>Call the Fl_PNG_Image_count function</summary>
    /// <param name="imagePtr"></param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_PNG_Image_count", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_PNG_Image_count(IntPtr imagePtr);
    
    /// <summary>Call the Fl_PNG_Image_data function</summary>
    /// <param name="imagePtr"></param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_PNG_Image_data", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_PNG_Image_data(IntPtr imagePtr);
    
    /// <summary>Call the Fl_PNG_Image_copy function</summary>
    /// <param name="imagePtr"></param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_PNG_Image_copy", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_PNG_Image_copy(IntPtr imagePtr);
    
    /// <summary>Call the Fl_PNG_Image_copy_sized function</summary>
    /// <param name="imagePtr"></param>
    /// <param name="width"></param>
    /// <param name="height"></param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_PNG_Image_copy_sized", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_PNG_Image_copy_sized(IntPtr imagePtr, int width, int height);
    
    /// <summary>Call the Fl_PNG_Image_scale function</summary>
    /// <param name="imagePtr"></param>
    /// <param name="width"></param>
    /// <param name="height"></param>
    /// <param name="proportinal"></param>
    /// <param name="can_expand"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_PNG_Image_scale", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_PNG_Image_scale(IntPtr imagePtr, int width, int height, int proportinal, int can_expand);
    
    /// <summary>Call the Fl_PNG_Image_fail function</summary>
    /// <param name="imagePtr"></param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_PNG_Image_fail", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_PNG_Image_fail(IntPtr imagePtr);
    
    /// <summary>Call the Fl_PNG_Image_data_w function</summary>
    /// <param name="imagePtr"></param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_PNG_Image_data_w", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_PNG_Image_data_w(IntPtr imagePtr);
    
    /// <summary>Call the Fl_PNG_Image_data_h function</summary>
    /// <param name="imagePtr"></param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_PNG_Image_data_h", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_PNG_Image_data_h(IntPtr imagePtr);
    
    /// <summary>Call the Fl_PNG_Image_d function</summary>
    /// <param name="imagePtr"></param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_PNG_Image_d", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_PNG_Image_d(IntPtr imagePtr);
    
    /// <summary>Call the Fl_PNG_Image_ld function</summary>
    /// <param name="imagePtr"></param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_PNG_Image_ld", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_PNG_Image_ld(IntPtr imagePtr);
    
    /// <summary>Call the Fl_PNG_Image_inactive function</summary>
    /// <param name="imagePtr"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_PNG_Image_inactive", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_PNG_Image_inactive(IntPtr imagePtr);
    
    /// <summary>Call the Fl_PNG_Image_from_dyn_ptr function</summary>
    /// <param name="imagePtr"></param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_PNG_Image_from_dyn_ptr", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_PNG_Image_from_dyn_ptr(IntPtr imagePtr);
    
    /// <summary>Call the Fl_PNG_Image_new function</summary>
    /// <param name="filenamePtr">
    /// <inheritdoc cref="Fl_Widget_new" path="/param[@name='labelPointer']" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_PNG_Image_new", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_PNG_Image_new(IntPtr filenamePtr);
    
    /// <summary>Call the Fl_PNG_Image_from function</summary>
    /// <param name="dataPointer"></param>
    /// <param name="size"></param>
    /// <returns>
    /// <inheritdoc cref="Fl_PNG_Image_new" path="/returns" />
    /// </returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_PNG_Image_from", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_PNG_Image_from(IntPtr dataPointer, int size);
    
    /// <summary>Call the Fl_SVG_Image_draw function</summary>
    /// <param name="imagePtr"></param>
    /// <param name="x"></param>
    /// <param name="y"></param>
    /// <param name="width"></param>
    /// <param name="height"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_SVG_Image_draw", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_SVG_Image_draw(IntPtr imagePtr, int x, int y, int width, int height);
    
    /// <summary>Call the Fl_SVG_Image_draw_ext function</summary>
    /// <param name="imagePtr"></param>
    /// <param name="x"></param>
    /// <param name="y"></param>
    /// <param name="width"></param>
    /// <param name="height"></param>
    /// <param name="cx"></param>
    /// <param name="cy"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_SVG_Image_draw_ext", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_SVG_Image_draw_ext(IntPtr imagePtr, int x, int y, int width, int height, int cx, int cy);
    
    /// <summary>Call the Fl_SVG_Image_width function</summary>
    /// <param name="imagePtr"></param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_SVG_Image_width", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_SVG_Image_width(IntPtr imagePtr);
    
    /// <summary>Call the Fl_SVG_Image_height function</summary>
    /// <param name="imagePtr"></param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_SVG_Image_height", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_SVG_Image_height(IntPtr imagePtr);
    
    /// <summary>Call the Fl_SVG_Image_delete function</summary>
    /// <param name="imagePtr"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_SVG_Image_delete", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_SVG_Image_delete(IntPtr imagePtr);
    
    /// <summary>Call the Fl_SVG_Image_count function</summary>
    /// <param name="imagePtr"></param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_SVG_Image_count", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_SVG_Image_count(IntPtr imagePtr);
    
    /// <summary>Call the Fl_SVG_Image_data function</summary>
    /// <param name="imagePtr"></param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_SVG_Image_data", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_SVG_Image_data(IntPtr imagePtr);
    
    /// <summary>Call the Fl_SVG_Image_copy function</summary>
    /// <param name="imagePtr"></param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_SVG_Image_copy", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_SVG_Image_copy(IntPtr imagePtr);
    
    /// <summary>Call the Fl_SVG_Image_copy_sized function</summary>
    /// <param name="imagePtr"></param>
    /// <param name="width"></param>
    /// <param name="height"></param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_SVG_Image_copy_sized", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_SVG_Image_copy_sized(IntPtr imagePtr, int width, int height);
    
    /// <summary>Call the Fl_SVG_Image_scale function</summary>
    /// <param name="imagePtr"></param>
    /// <param name="width"></param>
    /// <param name="height"></param>
    /// <param name="proportinal"></param>
    /// <param name="can_expand"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_SVG_Image_scale", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_SVG_Image_scale(IntPtr imagePtr, int width, int height, int proportinal, int can_expand);
    
    /// <summary>Call the Fl_SVG_Image_fail function</summary>
    /// <param name="imagePtr"></param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_SVG_Image_fail", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_SVG_Image_fail(IntPtr imagePtr);
    
    /// <summary>Call the Fl_SVG_Image_data_w function</summary>
    /// <param name="imagePtr"></param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_SVG_Image_data_w", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_SVG_Image_data_w(IntPtr imagePtr);
    
    /// <summary>Call the Fl_SVG_Image_data_h function</summary>
    /// <param name="imagePtr"></param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_SVG_Image_data_h", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_SVG_Image_data_h(IntPtr imagePtr);
    
    /// <summary>Call the Fl_SVG_Image_d function</summary>
    /// <param name="imagePtr"></param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_SVG_Image_d", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_SVG_Image_d(IntPtr imagePtr);
    
    /// <summary>Call the Fl_SVG_Image_ld function</summary>
    /// <param name="imagePtr"></param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_SVG_Image_ld", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_SVG_Image_ld(IntPtr imagePtr);
    
    /// <summary>Call the Fl_SVG_Image_inactive function</summary>
    /// <param name="imagePtr"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_SVG_Image_inactive", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_SVG_Image_inactive(IntPtr imagePtr);
    
    /// <summary>Call the Fl_SVG_Image_from_dyn_ptr function</summary>
    /// <param name="imagePtr"></param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_SVG_Image_from_dyn_ptr", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_SVG_Image_from_dyn_ptr(IntPtr imagePtr);
    
    /// <summary>Call the Fl_SVG_Image_new function</summary>
    /// <param name="filenamePtr">
    /// <inheritdoc cref="Fl_Widget_new" path="/param[@name='labelPointer']" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_SVG_Image_new", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_SVG_Image_new(IntPtr filenamePtr);
    
    /// <summary>Call the Fl_SVG_Image_from function</summary>
    /// <param name="dataPointer">
    /// <inheritdoc cref="Fl_Widget_new" path="/param[@name='labelPointer']" />
    /// </param>
    /// <returns>
    /// <inheritdoc cref="Fl_SVG_Image_new" path="/returns" />
    /// </returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_SVG_Image_from", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_SVG_Image_from(IntPtr dataPointer);
    
    /// <summary>Call the Fl_SVG_Image_normalize function</summary>
    /// <param name="self">
    /// <inheritdoc cref="Fl_SVG_Image_new" path="/returns" />
    /// </param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_SVG_Image_normalize", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_SVG_Image_normalize(IntPtr self);
    
    /// <summary>Call the Fl_BMP_Image_draw function</summary>
    /// <param name="imagePtr"></param>
    /// <param name="x"></param>
    /// <param name="y"></param>
    /// <param name="width"></param>
    /// <param name="height"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_BMP_Image_draw", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_BMP_Image_draw(IntPtr imagePtr, int x, int y, int width, int height);
    
    /// <summary>Call the Fl_BMP_Image_draw_ext function</summary>
    /// <param name="imagePtr"></param>
    /// <param name="x"></param>
    /// <param name="y"></param>
    /// <param name="width"></param>
    /// <param name="height"></param>
    /// <param name="cx"></param>
    /// <param name="cy"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_BMP_Image_draw_ext", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_BMP_Image_draw_ext(IntPtr imagePtr, int x, int y, int width, int height, int cx, int cy);
    
    /// <summary>Call the Fl_BMP_Image_width function</summary>
    /// <param name="imagePtr"></param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_BMP_Image_width", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_BMP_Image_width(IntPtr imagePtr);
    
    /// <summary>Call the Fl_BMP_Image_height function</summary>
    /// <param name="imagePtr"></param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_BMP_Image_height", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_BMP_Image_height(IntPtr imagePtr);
    
    /// <summary>Call the Fl_BMP_Image_delete function</summary>
    /// <param name="imagePtr"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_BMP_Image_delete", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_BMP_Image_delete(IntPtr imagePtr);
    
    /// <summary>Call the Fl_BMP_Image_count function</summary>
    /// <param name="imagePtr"></param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_BMP_Image_count", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_BMP_Image_count(IntPtr imagePtr);
    
    /// <summary>Call the Fl_BMP_Image_data function</summary>
    /// <param name="imagePtr"></param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_BMP_Image_data", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_BMP_Image_data(IntPtr imagePtr);
    
    /// <summary>Call the Fl_BMP_Image_copy function</summary>
    /// <param name="imagePtr"></param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_BMP_Image_copy", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_BMP_Image_copy(IntPtr imagePtr);
    
    /// <summary>Call the Fl_BMP_Image_copy_sized function</summary>
    /// <param name="imagePtr"></param>
    /// <param name="width"></param>
    /// <param name="height"></param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_BMP_Image_copy_sized", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_BMP_Image_copy_sized(IntPtr imagePtr, int width, int height);
    
    /// <summary>Call the Fl_BMP_Image_scale function</summary>
    /// <param name="imagePtr"></param>
    /// <param name="width"></param>
    /// <param name="height"></param>
    /// <param name="proportinal"></param>
    /// <param name="can_expand"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_BMP_Image_scale", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_BMP_Image_scale(IntPtr imagePtr, int width, int height, int proportinal, int can_expand);
    
    /// <summary>Call the Fl_BMP_Image_fail function</summary>
    /// <param name="imagePtr"></param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_BMP_Image_fail", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_BMP_Image_fail(IntPtr imagePtr);
    
    /// <summary>Call the Fl_BMP_Image_data_w function</summary>
    /// <param name="imagePtr"></param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_BMP_Image_data_w", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_BMP_Image_data_w(IntPtr imagePtr);
    
    /// <summary>Call the Fl_BMP_Image_data_h function</summary>
    /// <param name="imagePtr"></param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_BMP_Image_data_h", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_BMP_Image_data_h(IntPtr imagePtr);
    
    /// <summary>Call the Fl_BMP_Image_d function</summary>
    /// <param name="imagePtr"></param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_BMP_Image_d", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_BMP_Image_d(IntPtr imagePtr);
    
    /// <summary>Call the Fl_BMP_Image_ld function</summary>
    /// <param name="imagePtr"></param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_BMP_Image_ld", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_BMP_Image_ld(IntPtr imagePtr);
    
    /// <summary>Call the Fl_BMP_Image_inactive function</summary>
    /// <param name="imagePtr"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_BMP_Image_inactive", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_BMP_Image_inactive(IntPtr imagePtr);
    
    /// <summary>Call the Fl_BMP_Image_from_dyn_ptr function</summary>
    /// <param name="imagePtr"></param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_BMP_Image_from_dyn_ptr", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_BMP_Image_from_dyn_ptr(IntPtr imagePtr);
    
    /// <summary>Call the Fl_BMP_Image_new function</summary>
    /// <param name="filenamePtr">
    /// <inheritdoc cref="Fl_Widget_new" path="/param[@name='labelPointer']" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_BMP_Image_new", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_BMP_Image_new(IntPtr filenamePtr);
    
    /// <summary>Call the Fl_BMP_Image_from function</summary>
    /// <param name="dataPointer"></param>
    /// <param name="size"></param>
    /// <returns>
    /// <inheritdoc cref="Fl_BMP_Image_new" path="/returns" />
    /// </returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_BMP_Image_from", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_BMP_Image_from(IntPtr dataPointer, int size);
    
    /// <summary>Call the Fl_GIF_Image_draw function</summary>
    /// <param name="imagePtr"></param>
    /// <param name="x"></param>
    /// <param name="y"></param>
    /// <param name="width"></param>
    /// <param name="height"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_GIF_Image_draw", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_GIF_Image_draw(IntPtr imagePtr, int x, int y, int width, int height);
    
    /// <summary>Call the Fl_GIF_Image_draw_ext function</summary>
    /// <param name="imagePtr"></param>
    /// <param name="x"></param>
    /// <param name="y"></param>
    /// <param name="width"></param>
    /// <param name="height"></param>
    /// <param name="cx"></param>
    /// <param name="cy"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_GIF_Image_draw_ext", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_GIF_Image_draw_ext(IntPtr imagePtr, int x, int y, int width, int height, int cx, int cy);
    
    /// <summary>Call the Fl_GIF_Image_width function</summary>
    /// <param name="imagePtr"></param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_GIF_Image_width", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_GIF_Image_width(IntPtr imagePtr);
    
    /// <summary>Call the Fl_GIF_Image_height function</summary>
    /// <param name="imagePtr"></param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_GIF_Image_height", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_GIF_Image_height(IntPtr imagePtr);
    
    /// <summary>Call the Fl_GIF_Image_delete function</summary>
    /// <param name="imagePtr"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_GIF_Image_delete", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_GIF_Image_delete(IntPtr imagePtr);
    
    /// <summary>Call the Fl_GIF_Image_count function</summary>
    /// <param name="imagePtr"></param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_GIF_Image_count", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_GIF_Image_count(IntPtr imagePtr);
    
    /// <summary>Call the Fl_GIF_Image_data function</summary>
    /// <param name="imagePtr"></param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_GIF_Image_data", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_GIF_Image_data(IntPtr imagePtr);
    
    /// <summary>Call the Fl_GIF_Image_copy function</summary>
    /// <param name="imagePtr"></param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_GIF_Image_copy", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_GIF_Image_copy(IntPtr imagePtr);
    
    /// <summary>Call the Fl_GIF_Image_copy_sized function</summary>
    /// <param name="imagePtr"></param>
    /// <param name="width"></param>
    /// <param name="height"></param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_GIF_Image_copy_sized", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_GIF_Image_copy_sized(IntPtr imagePtr, int width, int height);
    
    /// <summary>Call the Fl_GIF_Image_scale function</summary>
    /// <param name="imagePtr"></param>
    /// <param name="width"></param>
    /// <param name="height"></param>
    /// <param name="proportinal"></param>
    /// <param name="can_expand"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_GIF_Image_scale", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_GIF_Image_scale(IntPtr imagePtr, int width, int height, int proportinal, int can_expand);
    
    /// <summary>Call the Fl_GIF_Image_fail function</summary>
    /// <param name="imagePtr"></param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_GIF_Image_fail", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_GIF_Image_fail(IntPtr imagePtr);
    
    /// <summary>Call the Fl_GIF_Image_data_w function</summary>
    /// <param name="imagePtr"></param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_GIF_Image_data_w", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_GIF_Image_data_w(IntPtr imagePtr);
    
    /// <summary>Call the Fl_GIF_Image_data_h function</summary>
    /// <param name="imagePtr"></param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_GIF_Image_data_h", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_GIF_Image_data_h(IntPtr imagePtr);
    
    /// <summary>Call the Fl_GIF_Image_d function</summary>
    /// <param name="imagePtr"></param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_GIF_Image_d", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_GIF_Image_d(IntPtr imagePtr);
    
    /// <summary>Call the Fl_GIF_Image_ld function</summary>
    /// <param name="imagePtr"></param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_GIF_Image_ld", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_GIF_Image_ld(IntPtr imagePtr);
    
    /// <summary>Call the Fl_GIF_Image_inactive function</summary>
    /// <param name="imagePtr"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_GIF_Image_inactive", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_GIF_Image_inactive(IntPtr imagePtr);
    
    /// <summary>Call the Fl_GIF_Image_from_dyn_ptr function</summary>
    /// <param name="imagePtr"></param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_GIF_Image_from_dyn_ptr", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_GIF_Image_from_dyn_ptr(IntPtr imagePtr);
    
    /// <summary>Call the Fl_GIF_Image_new function</summary>
    /// <param name="filenamePtr">
    /// <inheritdoc cref="Fl_Widget_new" path="/param[@name='labelPointer']" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_GIF_Image_new", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_GIF_Image_new(IntPtr filenamePtr);
    
    /// <summary>Call the Fl_GIF_Image_from function</summary>
    /// <param name="dataPointer"></param>
    /// <param name="size"></param>
    /// <returns>
    /// <inheritdoc cref="Fl_GIF_Image_new" path="/returns" />
    /// </returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_GIF_Image_from", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_GIF_Image_from(IntPtr dataPointer, int size);
    
    /// <summary>Call the Fl_Anim_GIF_Image_draw function</summary>
    /// <param name="imagePtr"></param>
    /// <param name="x"></param>
    /// <param name="y"></param>
    /// <param name="width"></param>
    /// <param name="height"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Anim_GIF_Image_draw", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Anim_GIF_Image_draw(IntPtr imagePtr, int x, int y, int width, int height);
    
    /// <summary>Call the Fl_Anim_GIF_Image_draw_ext function</summary>
    /// <param name="imagePtr"></param>
    /// <param name="x"></param>
    /// <param name="y"></param>
    /// <param name="width"></param>
    /// <param name="height"></param>
    /// <param name="cx"></param>
    /// <param name="cy"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Anim_GIF_Image_draw_ext", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Anim_GIF_Image_draw_ext(IntPtr imagePtr, int x, int y, int width, int height, int cx, int cy);
    
    /// <summary>Call the Fl_Anim_GIF_Image_width function</summary>
    /// <param name="imagePtr"></param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Anim_GIF_Image_width", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Anim_GIF_Image_width(IntPtr imagePtr);
    
    /// <summary>Call the Fl_Anim_GIF_Image_height function</summary>
    /// <param name="imagePtr"></param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Anim_GIF_Image_height", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Anim_GIF_Image_height(IntPtr imagePtr);
    
    /// <summary>Call the Fl_Anim_GIF_Image_delete function</summary>
    /// <param name="imagePtr"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Anim_GIF_Image_delete", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Anim_GIF_Image_delete(IntPtr imagePtr);
    
    /// <summary>Call the Fl_Anim_GIF_Image_count function</summary>
    /// <param name="imagePtr"></param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Anim_GIF_Image_count", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Anim_GIF_Image_count(IntPtr imagePtr);
    
    /// <summary>Call the Fl_Anim_GIF_Image_data function</summary>
    /// <param name="imagePtr"></param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Anim_GIF_Image_data", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Anim_GIF_Image_data(IntPtr imagePtr);
    
    /// <summary>Call the Fl_Anim_GIF_Image_copy function</summary>
    /// <param name="imagePtr"></param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Anim_GIF_Image_copy", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Anim_GIF_Image_copy(IntPtr imagePtr);
    
    /// <summary>Call the Fl_Anim_GIF_Image_copy_sized function</summary>
    /// <param name="imagePtr"></param>
    /// <param name="width"></param>
    /// <param name="height"></param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Anim_GIF_Image_copy_sized", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Anim_GIF_Image_copy_sized(IntPtr imagePtr, int width, int height);
    
    /// <summary>Call the Fl_Anim_GIF_Image_scale function</summary>
    /// <param name="imagePtr"></param>
    /// <param name="width"></param>
    /// <param name="height"></param>
    /// <param name="proportinal"></param>
    /// <param name="can_expand"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Anim_GIF_Image_scale", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Anim_GIF_Image_scale(IntPtr imagePtr, int width, int height, int proportinal, int can_expand);
    
    /// <summary>Call the Fl_Anim_GIF_Image_fail function</summary>
    /// <param name="imagePtr"></param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Anim_GIF_Image_fail", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Anim_GIF_Image_fail(IntPtr imagePtr);
    
    /// <summary>Call the Fl_Anim_GIF_Image_data_w function</summary>
    /// <param name="imagePtr"></param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Anim_GIF_Image_data_w", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Anim_GIF_Image_data_w(IntPtr imagePtr);
    
    /// <summary>Call the Fl_Anim_GIF_Image_data_h function</summary>
    /// <param name="imagePtr"></param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Anim_GIF_Image_data_h", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Anim_GIF_Image_data_h(IntPtr imagePtr);
    
    /// <summary>Call the Fl_Anim_GIF_Image_d function</summary>
    /// <param name="imagePtr"></param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Anim_GIF_Image_d", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Anim_GIF_Image_d(IntPtr imagePtr);
    
    /// <summary>Call the Fl_Anim_GIF_Image_ld function</summary>
    /// <param name="imagePtr"></param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Anim_GIF_Image_ld", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Anim_GIF_Image_ld(IntPtr imagePtr);
    
    /// <summary>Call the Fl_Anim_GIF_Image_inactive function</summary>
    /// <param name="imagePtr"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Anim_GIF_Image_inactive", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Anim_GIF_Image_inactive(IntPtr imagePtr);
    
    /// <summary>Call the Fl_Anim_GIF_Image_from_dyn_ptr function</summary>
    /// <param name="imagePtr"></param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Anim_GIF_Image_from_dyn_ptr", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Anim_GIF_Image_from_dyn_ptr(IntPtr imagePtr);
    
    /// <summary>Call the Fl_Anim_GIF_Image_new function</summary>
    /// <param name="filenamePtr">
    /// <inheritdoc cref="Fl_Widget_new" path="/param[@name='labelPointer']" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Anim_GIF_Image_new", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Anim_GIF_Image_new(IntPtr filenamePtr);
    
    /// <summary>Call the Fl_Anim_GIF_Image_from function</summary>
    /// <param name="imagename"></param>
    /// <param name="data"></param>
    /// <param name="length"></param>
    /// <param name="canvas"></param>
    /// <param name="flags"></param>
    /// <returns>
    /// <inheritdoc cref="Fl_Anim_GIF_Image_new" path="/returns" />
    /// </returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Anim_GIF_Image_from", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Anim_GIF_Image_from(IntPtr imagename, IntPtr data, int length, IntPtr canvas, ushort flags);
    
    /// <summary>Call the Fl_Anim_GIF_Image_delay function</summary>
    /// <param name="self">
    /// <inheritdoc cref="Fl_Anim_GIF_Image_new" path="/returns" />
    /// </param>
    /// <param name="frame"></param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Anim_GIF_Image_delay", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern double Fl_Anim_GIF_Image_delay(IntPtr self, int frame);
    
    /// <summary>Call the Fl_Anim_GIF_Image_set_delay function</summary>
    /// <param name="self">
    /// <inheritdoc cref="Fl_Anim_GIF_Image_new" path="/returns" />
    /// </param>
    /// <param name="frame"></param>
    /// <param name="delay"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Anim_GIF_Image_set_delay", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Anim_GIF_Image_set_delay(IntPtr self, int frame, double delay);
    
    /// <summary>Call the Fl_Anim_GIF_Image_is_animated function</summary>
    /// <param name="self">
    /// <inheritdoc cref="Fl_Anim_GIF_Image_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Anim_GIF_Image_is_animated", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Anim_GIF_Image_is_animated(IntPtr self);
    
    /// <summary>Call the Fl_Anim_GIF_Image_set_speed function</summary>
    /// <param name="self">
    /// <inheritdoc cref="Fl_Anim_GIF_Image_new" path="/returns" />
    /// </param>
    /// <param name="speed"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Anim_GIF_Image_set_speed", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Anim_GIF_Image_set_speed(IntPtr self, double speed);
    
    /// <summary>Call the Fl_Anim_GIF_Image_speed function</summary>
    /// <param name="self">
    /// <inheritdoc cref="Fl_Anim_GIF_Image_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Anim_GIF_Image_speed", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern double Fl_Anim_GIF_Image_speed(IntPtr self);
    
    /// <summary>Call the Fl_Anim_GIF_Image_start function</summary>
    /// <param name="self">
    /// <inheritdoc cref="Fl_Anim_GIF_Image_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Anim_GIF_Image_start", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Anim_GIF_Image_start(IntPtr self);
    
    /// <summary>Call the Fl_Anim_GIF_Image_stop function</summary>
    /// <param name="self">
    /// <inheritdoc cref="Fl_Anim_GIF_Image_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Anim_GIF_Image_stop", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Anim_GIF_Image_stop(IntPtr self);
    
    /// <summary>Call the Fl_Anim_GIF_Image_next function</summary>
    /// <param name="self">
    /// <inheritdoc cref="Fl_Anim_GIF_Image_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Anim_GIF_Image_next", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Anim_GIF_Image_next(IntPtr self);
    
    /// <summary>Call the Fl_Anim_GIF_Image_playing function</summary>
    /// <param name="self">
    /// <inheritdoc cref="Fl_Anim_GIF_Image_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Anim_GIF_Image_playing", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Anim_GIF_Image_playing(IntPtr self);
    
    /// <summary>Call the Fl_Pixmap_draw function</summary>
    /// <param name="imagePtr"></param>
    /// <param name="x"></param>
    /// <param name="y"></param>
    /// <param name="width"></param>
    /// <param name="height"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Pixmap_draw", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Pixmap_draw(IntPtr imagePtr, int x, int y, int width, int height);
    
    /// <summary>Call the Fl_Pixmap_draw_ext function</summary>
    /// <param name="imagePtr"></param>
    /// <param name="x"></param>
    /// <param name="y"></param>
    /// <param name="width"></param>
    /// <param name="height"></param>
    /// <param name="cx"></param>
    /// <param name="cy"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Pixmap_draw_ext", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Pixmap_draw_ext(IntPtr imagePtr, int x, int y, int width, int height, int cx, int cy);
    
    /// <summary>Call the Fl_Pixmap_width function</summary>
    /// <param name="imagePtr"></param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Pixmap_width", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Pixmap_width(IntPtr imagePtr);
    
    /// <summary>Call the Fl_Pixmap_height function</summary>
    /// <param name="imagePtr"></param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Pixmap_height", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Pixmap_height(IntPtr imagePtr);
    
    /// <summary>Call the Fl_Pixmap_delete function</summary>
    /// <param name="imagePtr"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Pixmap_delete", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Pixmap_delete(IntPtr imagePtr);
    
    /// <summary>Call the Fl_Pixmap_count function</summary>
    /// <param name="imagePtr"></param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Pixmap_count", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Pixmap_count(IntPtr imagePtr);
    
    /// <summary>Call the Fl_Pixmap_data function</summary>
    /// <param name="imagePtr"></param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Pixmap_data", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Pixmap_data(IntPtr imagePtr);
    
    /// <summary>Call the Fl_Pixmap_copy function</summary>
    /// <param name="imagePtr"></param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Pixmap_copy", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Pixmap_copy(IntPtr imagePtr);
    
    /// <summary>Call the Fl_Pixmap_copy_sized function</summary>
    /// <param name="imagePtr"></param>
    /// <param name="width"></param>
    /// <param name="height"></param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Pixmap_copy_sized", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Pixmap_copy_sized(IntPtr imagePtr, int width, int height);
    
    /// <summary>Call the Fl_Pixmap_scale function</summary>
    /// <param name="imagePtr"></param>
    /// <param name="width"></param>
    /// <param name="height"></param>
    /// <param name="proportinal"></param>
    /// <param name="can_expand"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Pixmap_scale", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Pixmap_scale(IntPtr imagePtr, int width, int height, int proportinal, int can_expand);
    
    /// <summary>Call the Fl_Pixmap_fail function</summary>
    /// <param name="imagePtr"></param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Pixmap_fail", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Pixmap_fail(IntPtr imagePtr);
    
    /// <summary>Call the Fl_Pixmap_data_w function</summary>
    /// <param name="imagePtr"></param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Pixmap_data_w", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Pixmap_data_w(IntPtr imagePtr);
    
    /// <summary>Call the Fl_Pixmap_data_h function</summary>
    /// <param name="imagePtr"></param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Pixmap_data_h", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Pixmap_data_h(IntPtr imagePtr);
    
    /// <summary>Call the Fl_Pixmap_d function</summary>
    /// <param name="imagePtr"></param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Pixmap_d", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Pixmap_d(IntPtr imagePtr);
    
    /// <summary>Call the Fl_Pixmap_ld function</summary>
    /// <param name="imagePtr"></param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Pixmap_ld", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Pixmap_ld(IntPtr imagePtr);
    
    /// <summary>Call the Fl_Pixmap_inactive function</summary>
    /// <param name="imagePtr"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Pixmap_inactive", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Pixmap_inactive(IntPtr imagePtr);
    
    /// <summary>Call the Fl_Pixmap_from_dyn_ptr function</summary>
    /// <param name="imagePtr"></param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Pixmap_from_dyn_ptr", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Pixmap_from_dyn_ptr(IntPtr imagePtr);
    
    /// <summary>Call the Fl_Pixmap_new function</summary>
    /// <param name="data"></param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Pixmap_new", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Pixmap_new(IntPtr data);
    
    /// <summary>Call the Fl_XPM_Image_draw function</summary>
    /// <param name="imagePtr"></param>
    /// <param name="x"></param>
    /// <param name="y"></param>
    /// <param name="width"></param>
    /// <param name="height"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_XPM_Image_draw", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_XPM_Image_draw(IntPtr imagePtr, int x, int y, int width, int height);
    
    /// <summary>Call the Fl_XPM_Image_draw_ext function</summary>
    /// <param name="imagePtr"></param>
    /// <param name="x"></param>
    /// <param name="y"></param>
    /// <param name="width"></param>
    /// <param name="height"></param>
    /// <param name="cx"></param>
    /// <param name="cy"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_XPM_Image_draw_ext", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_XPM_Image_draw_ext(IntPtr imagePtr, int x, int y, int width, int height, int cx, int cy);
    
    /// <summary>Call the Fl_XPM_Image_width function</summary>
    /// <param name="imagePtr"></param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_XPM_Image_width", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_XPM_Image_width(IntPtr imagePtr);
    
    /// <summary>Call the Fl_XPM_Image_height function</summary>
    /// <param name="imagePtr"></param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_XPM_Image_height", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_XPM_Image_height(IntPtr imagePtr);
    
    /// <summary>Call the Fl_XPM_Image_delete function</summary>
    /// <param name="imagePtr"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_XPM_Image_delete", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_XPM_Image_delete(IntPtr imagePtr);
    
    /// <summary>Call the Fl_XPM_Image_count function</summary>
    /// <param name="imagePtr"></param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_XPM_Image_count", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_XPM_Image_count(IntPtr imagePtr);
    
    /// <summary>Call the Fl_XPM_Image_data function</summary>
    /// <param name="imagePtr"></param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_XPM_Image_data", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_XPM_Image_data(IntPtr imagePtr);
    
    /// <summary>Call the Fl_XPM_Image_copy function</summary>
    /// <param name="imagePtr"></param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_XPM_Image_copy", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_XPM_Image_copy(IntPtr imagePtr);
    
    /// <summary>Call the Fl_XPM_Image_copy_sized function</summary>
    /// <param name="imagePtr"></param>
    /// <param name="width"></param>
    /// <param name="height"></param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_XPM_Image_copy_sized", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_XPM_Image_copy_sized(IntPtr imagePtr, int width, int height);
    
    /// <summary>Call the Fl_XPM_Image_scale function</summary>
    /// <param name="imagePtr"></param>
    /// <param name="width"></param>
    /// <param name="height"></param>
    /// <param name="proportinal"></param>
    /// <param name="can_expand"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_XPM_Image_scale", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_XPM_Image_scale(IntPtr imagePtr, int width, int height, int proportinal, int can_expand);
    
    /// <summary>Call the Fl_XPM_Image_fail function</summary>
    /// <param name="imagePtr"></param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_XPM_Image_fail", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_XPM_Image_fail(IntPtr imagePtr);
    
    /// <summary>Call the Fl_XPM_Image_data_w function</summary>
    /// <param name="imagePtr"></param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_XPM_Image_data_w", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_XPM_Image_data_w(IntPtr imagePtr);
    
    /// <summary>Call the Fl_XPM_Image_data_h function</summary>
    /// <param name="imagePtr"></param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_XPM_Image_data_h", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_XPM_Image_data_h(IntPtr imagePtr);
    
    /// <summary>Call the Fl_XPM_Image_d function</summary>
    /// <param name="imagePtr"></param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_XPM_Image_d", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_XPM_Image_d(IntPtr imagePtr);
    
    /// <summary>Call the Fl_XPM_Image_ld function</summary>
    /// <param name="imagePtr"></param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_XPM_Image_ld", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_XPM_Image_ld(IntPtr imagePtr);
    
    /// <summary>Call the Fl_XPM_Image_inactive function</summary>
    /// <param name="imagePtr"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_XPM_Image_inactive", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_XPM_Image_inactive(IntPtr imagePtr);
    
    /// <summary>Call the Fl_XPM_Image_from_dyn_ptr function</summary>
    /// <param name="imagePtr"></param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_XPM_Image_from_dyn_ptr", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_XPM_Image_from_dyn_ptr(IntPtr imagePtr);
    
    /// <summary>Call the Fl_XPM_Image_new function</summary>
    /// <param name="filename">
    /// <inheritdoc cref="Fl_Widget_new" path="/param[@name='labelPointer']" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_XPM_Image_new", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_XPM_Image_new(IntPtr filename);
    
    /// <summary>Call the Fl_XBM_Image_draw function</summary>
    /// <param name="imagePtr"></param>
    /// <param name="x"></param>
    /// <param name="y"></param>
    /// <param name="width"></param>
    /// <param name="height"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_XBM_Image_draw", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_XBM_Image_draw(IntPtr imagePtr, int x, int y, int width, int height);
    
    /// <summary>Call the Fl_XBM_Image_draw_ext function</summary>
    /// <param name="imagePtr"></param>
    /// <param name="x"></param>
    /// <param name="y"></param>
    /// <param name="width"></param>
    /// <param name="height"></param>
    /// <param name="cx"></param>
    /// <param name="cy"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_XBM_Image_draw_ext", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_XBM_Image_draw_ext(IntPtr imagePtr, int x, int y, int width, int height, int cx, int cy);
    
    /// <summary>Call the Fl_XBM_Image_width function</summary>
    /// <param name="imagePtr"></param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_XBM_Image_width", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_XBM_Image_width(IntPtr imagePtr);
    
    /// <summary>Call the Fl_XBM_Image_height function</summary>
    /// <param name="imagePtr"></param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_XBM_Image_height", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_XBM_Image_height(IntPtr imagePtr);
    
    /// <summary>Call the Fl_XBM_Image_delete function</summary>
    /// <param name="imagePtr"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_XBM_Image_delete", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_XBM_Image_delete(IntPtr imagePtr);
    
    /// <summary>Call the Fl_XBM_Image_count function</summary>
    /// <param name="imagePtr"></param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_XBM_Image_count", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_XBM_Image_count(IntPtr imagePtr);
    
    /// <summary>Call the Fl_XBM_Image_data function</summary>
    /// <param name="imagePtr"></param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_XBM_Image_data", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_XBM_Image_data(IntPtr imagePtr);
    
    /// <summary>Call the Fl_XBM_Image_copy function</summary>
    /// <param name="imagePtr"></param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_XBM_Image_copy", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_XBM_Image_copy(IntPtr imagePtr);
    
    /// <summary>Call the Fl_XBM_Image_copy_sized function</summary>
    /// <param name="imagePtr"></param>
    /// <param name="width"></param>
    /// <param name="height"></param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_XBM_Image_copy_sized", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_XBM_Image_copy_sized(IntPtr imagePtr, int width, int height);
    
    /// <summary>Call the Fl_XBM_Image_scale function</summary>
    /// <param name="imagePtr"></param>
    /// <param name="width"></param>
    /// <param name="height"></param>
    /// <param name="proportinal"></param>
    /// <param name="can_expand"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_XBM_Image_scale", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_XBM_Image_scale(IntPtr imagePtr, int width, int height, int proportinal, int can_expand);
    
    /// <summary>Call the Fl_XBM_Image_fail function</summary>
    /// <param name="imagePtr"></param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_XBM_Image_fail", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_XBM_Image_fail(IntPtr imagePtr);
    
    /// <summary>Call the Fl_XBM_Image_data_w function</summary>
    /// <param name="imagePtr"></param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_XBM_Image_data_w", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_XBM_Image_data_w(IntPtr imagePtr);
    
    /// <summary>Call the Fl_XBM_Image_data_h function</summary>
    /// <param name="imagePtr"></param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_XBM_Image_data_h", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_XBM_Image_data_h(IntPtr imagePtr);
    
    /// <summary>Call the Fl_XBM_Image_d function</summary>
    /// <param name="imagePtr"></param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_XBM_Image_d", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_XBM_Image_d(IntPtr imagePtr);
    
    /// <summary>Call the Fl_XBM_Image_ld function</summary>
    /// <param name="imagePtr"></param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_XBM_Image_ld", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_XBM_Image_ld(IntPtr imagePtr);
    
    /// <summary>Call the Fl_XBM_Image_inactive function</summary>
    /// <param name="imagePtr"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_XBM_Image_inactive", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_XBM_Image_inactive(IntPtr imagePtr);
    
    /// <summary>Call the Fl_XBM_Image_from_dyn_ptr function</summary>
    /// <param name="imagePtr"></param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_XBM_Image_from_dyn_ptr", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_XBM_Image_from_dyn_ptr(IntPtr imagePtr);
    
    /// <summary>Call the Fl_XBM_Image_new function</summary>
    /// <param name="filename">
    /// <inheritdoc cref="Fl_Widget_new" path="/param[@name='labelPointer']" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_XBM_Image_new", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_XBM_Image_new(IntPtr filename);
    
    /// <summary>Call the Fl_PNM_Image_draw function</summary>
    /// <param name="imagePtr"></param>
    /// <param name="x"></param>
    /// <param name="y"></param>
    /// <param name="width"></param>
    /// <param name="height"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_PNM_Image_draw", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_PNM_Image_draw(IntPtr imagePtr, int x, int y, int width, int height);
    
    /// <summary>Call the Fl_PNM_Image_draw_ext function</summary>
    /// <param name="imagePtr"></param>
    /// <param name="x"></param>
    /// <param name="y"></param>
    /// <param name="width"></param>
    /// <param name="height"></param>
    /// <param name="cx"></param>
    /// <param name="cy"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_PNM_Image_draw_ext", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_PNM_Image_draw_ext(IntPtr imagePtr, int x, int y, int width, int height, int cx, int cy);
    
    /// <summary>Call the Fl_PNM_Image_width function</summary>
    /// <param name="imagePtr"></param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_PNM_Image_width", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_PNM_Image_width(IntPtr imagePtr);
    
    /// <summary>Call the Fl_PNM_Image_height function</summary>
    /// <param name="imagePtr"></param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_PNM_Image_height", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_PNM_Image_height(IntPtr imagePtr);
    
    /// <summary>Call the Fl_PNM_Image_delete function</summary>
    /// <param name="imagePtr"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_PNM_Image_delete", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_PNM_Image_delete(IntPtr imagePtr);
    
    /// <summary>Call the Fl_PNM_Image_count function</summary>
    /// <param name="imagePtr"></param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_PNM_Image_count", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_PNM_Image_count(IntPtr imagePtr);
    
    /// <summary>Call the Fl_PNM_Image_data function</summary>
    /// <param name="imagePtr"></param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_PNM_Image_data", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_PNM_Image_data(IntPtr imagePtr);
    
    /// <summary>Call the Fl_PNM_Image_copy function</summary>
    /// <param name="imagePtr"></param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_PNM_Image_copy", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_PNM_Image_copy(IntPtr imagePtr);
    
    /// <summary>Call the Fl_PNM_Image_copy_sized function</summary>
    /// <param name="imagePtr"></param>
    /// <param name="width"></param>
    /// <param name="height"></param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_PNM_Image_copy_sized", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_PNM_Image_copy_sized(IntPtr imagePtr, int width, int height);
    
    /// <summary>Call the Fl_PNM_Image_scale function</summary>
    /// <param name="imagePtr"></param>
    /// <param name="width"></param>
    /// <param name="height"></param>
    /// <param name="proportinal"></param>
    /// <param name="can_expand"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_PNM_Image_scale", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_PNM_Image_scale(IntPtr imagePtr, int width, int height, int proportinal, int can_expand);
    
    /// <summary>Call the Fl_PNM_Image_fail function</summary>
    /// <param name="imagePtr"></param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_PNM_Image_fail", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_PNM_Image_fail(IntPtr imagePtr);
    
    /// <summary>Call the Fl_PNM_Image_data_w function</summary>
    /// <param name="imagePtr"></param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_PNM_Image_data_w", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_PNM_Image_data_w(IntPtr imagePtr);
    
    /// <summary>Call the Fl_PNM_Image_data_h function</summary>
    /// <param name="imagePtr"></param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_PNM_Image_data_h", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_PNM_Image_data_h(IntPtr imagePtr);
    
    /// <summary>Call the Fl_PNM_Image_d function</summary>
    /// <param name="imagePtr"></param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_PNM_Image_d", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_PNM_Image_d(IntPtr imagePtr);
    
    /// <summary>Call the Fl_PNM_Image_ld function</summary>
    /// <param name="imagePtr"></param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_PNM_Image_ld", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_PNM_Image_ld(IntPtr imagePtr);
    
    /// <summary>Call the Fl_PNM_Image_inactive function</summary>
    /// <param name="imagePtr"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_PNM_Image_inactive", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_PNM_Image_inactive(IntPtr imagePtr);
    
    /// <summary>Call the Fl_PNM_Image_from_dyn_ptr function</summary>
    /// <param name="imagePtr"></param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_PNM_Image_from_dyn_ptr", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_PNM_Image_from_dyn_ptr(IntPtr imagePtr);
    
    /// <summary>Call the Fl_PNM_Image_new function</summary>
    /// <param name="filename">
    /// <inheritdoc cref="Fl_Widget_new" path="/param[@name='labelPointer']" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_PNM_Image_new", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_PNM_Image_new(IntPtr filename);
    
    /// <summary>Call the Fl_Tiled_Image_draw function</summary>
    /// <param name="imagePtr"></param>
    /// <param name="x"></param>
    /// <param name="y"></param>
    /// <param name="width"></param>
    /// <param name="height"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Tiled_Image_draw", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Tiled_Image_draw(IntPtr imagePtr, int x, int y, int width, int height);
    
    /// <summary>Call the Fl_Tiled_Image_draw_ext function</summary>
    /// <param name="imagePtr"></param>
    /// <param name="x"></param>
    /// <param name="y"></param>
    /// <param name="width"></param>
    /// <param name="height"></param>
    /// <param name="cx"></param>
    /// <param name="cy"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Tiled_Image_draw_ext", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Tiled_Image_draw_ext(IntPtr imagePtr, int x, int y, int width, int height, int cx, int cy);
    
    /// <summary>Call the Fl_Tiled_Image_width function</summary>
    /// <param name="imagePtr"></param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Tiled_Image_width", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Tiled_Image_width(IntPtr imagePtr);
    
    /// <summary>Call the Fl_Tiled_Image_height function</summary>
    /// <param name="imagePtr"></param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Tiled_Image_height", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Tiled_Image_height(IntPtr imagePtr);
    
    /// <summary>Call the Fl_Tiled_Image_delete function</summary>
    /// <param name="imagePtr"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Tiled_Image_delete", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Tiled_Image_delete(IntPtr imagePtr);
    
    /// <summary>Call the Fl_Tiled_Image_count function</summary>
    /// <param name="imagePtr"></param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Tiled_Image_count", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Tiled_Image_count(IntPtr imagePtr);
    
    /// <summary>Call the Fl_Tiled_Image_data function</summary>
    /// <param name="imagePtr"></param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Tiled_Image_data", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Tiled_Image_data(IntPtr imagePtr);
    
    /// <summary>Call the Fl_Tiled_Image_copy function</summary>
    /// <param name="imagePtr"></param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Tiled_Image_copy", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Tiled_Image_copy(IntPtr imagePtr);
    
    /// <summary>Call the Fl_Tiled_Image_copy_sized function</summary>
    /// <param name="imagePtr"></param>
    /// <param name="width"></param>
    /// <param name="height"></param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Tiled_Image_copy_sized", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Tiled_Image_copy_sized(IntPtr imagePtr, int width, int height);
    
    /// <summary>Call the Fl_Tiled_Image_scale function</summary>
    /// <param name="imagePtr"></param>
    /// <param name="width"></param>
    /// <param name="height"></param>
    /// <param name="proportinal"></param>
    /// <param name="can_expand"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Tiled_Image_scale", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Tiled_Image_scale(IntPtr imagePtr, int width, int height, int proportinal, int can_expand);
    
    /// <summary>Call the Fl_Tiled_Image_fail function</summary>
    /// <param name="imagePtr"></param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Tiled_Image_fail", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Tiled_Image_fail(IntPtr imagePtr);
    
    /// <summary>Call the Fl_Tiled_Image_data_w function</summary>
    /// <param name="imagePtr"></param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Tiled_Image_data_w", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Tiled_Image_data_w(IntPtr imagePtr);
    
    /// <summary>Call the Fl_Tiled_Image_data_h function</summary>
    /// <param name="imagePtr"></param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Tiled_Image_data_h", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Tiled_Image_data_h(IntPtr imagePtr);
    
    /// <summary>Call the Fl_Tiled_Image_d function</summary>
    /// <param name="imagePtr"></param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Tiled_Image_d", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Tiled_Image_d(IntPtr imagePtr);
    
    /// <summary>Call the Fl_Tiled_Image_ld function</summary>
    /// <param name="imagePtr"></param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Tiled_Image_ld", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Tiled_Image_ld(IntPtr imagePtr);
    
    /// <summary>Call the Fl_Tiled_Image_inactive function</summary>
    /// <param name="imagePtr"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Tiled_Image_inactive", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Tiled_Image_inactive(IntPtr imagePtr);
    
    /// <summary>Call the Fl_Tiled_Image_from_dyn_ptr function</summary>
    /// <param name="imagePtr"></param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Tiled_Image_from_dyn_ptr", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Tiled_Image_from_dyn_ptr(IntPtr imagePtr);
    
    /// <summary>Call the Fl_Tiled_Image_new function</summary>
    /// <param name="image"></param>
    /// <param name="width"></param>
    /// <param name="height"></param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Tiled_Image_new", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Tiled_Image_new(IntPtr image, int width, int height);
    
    /// <summary>Call the Fl_RGB_Image_draw function</summary>
    /// <param name="imagePtr"></param>
    /// <param name="x"></param>
    /// <param name="y"></param>
    /// <param name="width"></param>
    /// <param name="height"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_RGB_Image_draw", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_RGB_Image_draw(IntPtr imagePtr, int x, int y, int width, int height);
    
    /// <summary>Call the Fl_RGB_Image_draw_ext function</summary>
    /// <param name="imagePtr"></param>
    /// <param name="x"></param>
    /// <param name="y"></param>
    /// <param name="width"></param>
    /// <param name="height"></param>
    /// <param name="cx"></param>
    /// <param name="cy"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_RGB_Image_draw_ext", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_RGB_Image_draw_ext(IntPtr imagePtr, int x, int y, int width, int height, int cx, int cy);
    
    /// <summary>Call the Fl_RGB_Image_width function</summary>
    /// <param name="imagePtr"></param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_RGB_Image_width", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_RGB_Image_width(IntPtr imagePtr);
    
    /// <summary>Call the Fl_RGB_Image_height function</summary>
    /// <param name="imagePtr"></param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_RGB_Image_height", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_RGB_Image_height(IntPtr imagePtr);
    
    /// <summary>Call the Fl_RGB_Image_delete function</summary>
    /// <param name="imagePtr"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_RGB_Image_delete", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_RGB_Image_delete(IntPtr imagePtr);
    
    /// <summary>Call the Fl_RGB_Image_count function</summary>
    /// <param name="imagePtr"></param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_RGB_Image_count", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_RGB_Image_count(IntPtr imagePtr);
    
    /// <summary>Call the Fl_RGB_Image_data function</summary>
    /// <param name="imagePtr"></param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_RGB_Image_data", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_RGB_Image_data(IntPtr imagePtr);
    
    /// <summary>Call the Fl_RGB_Image_copy function</summary>
    /// <param name="imagePtr"></param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_RGB_Image_copy", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_RGB_Image_copy(IntPtr imagePtr);
    
    /// <summary>Call the Fl_RGB_Image_copy_sized function</summary>
    /// <param name="imagePtr"></param>
    /// <param name="width"></param>
    /// <param name="height"></param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_RGB_Image_copy_sized", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_RGB_Image_copy_sized(IntPtr imagePtr, int width, int height);
    
    /// <summary>Call the Fl_RGB_Image_scale function</summary>
    /// <param name="imagePtr"></param>
    /// <param name="width"></param>
    /// <param name="height"></param>
    /// <param name="proportinal"></param>
    /// <param name="can_expand"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_RGB_Image_scale", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_RGB_Image_scale(IntPtr imagePtr, int width, int height, int proportinal, int can_expand);
    
    /// <summary>Call the Fl_RGB_Image_fail function</summary>
    /// <param name="imagePtr"></param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_RGB_Image_fail", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_RGB_Image_fail(IntPtr imagePtr);
    
    /// <summary>Call the Fl_RGB_Image_data_w function</summary>
    /// <param name="imagePtr"></param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_RGB_Image_data_w", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_RGB_Image_data_w(IntPtr imagePtr);
    
    /// <summary>Call the Fl_RGB_Image_data_h function</summary>
    /// <param name="imagePtr"></param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_RGB_Image_data_h", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_RGB_Image_data_h(IntPtr imagePtr);
    
    /// <summary>Call the Fl_RGB_Image_d function</summary>
    /// <param name="imagePtr"></param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_RGB_Image_d", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_RGB_Image_d(IntPtr imagePtr);
    
    /// <summary>Call the Fl_RGB_Image_ld function</summary>
    /// <param name="imagePtr"></param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_RGB_Image_ld", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_RGB_Image_ld(IntPtr imagePtr);
    
    /// <summary>Call the Fl_RGB_Image_inactive function</summary>
    /// <param name="imagePtr"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_RGB_Image_inactive", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_RGB_Image_inactive(IntPtr imagePtr);
    
    /// <summary>Call the Fl_RGB_Image_from_dyn_ptr function</summary>
    /// <param name="imagePtr"></param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_RGB_Image_from_dyn_ptr", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_RGB_Image_from_dyn_ptr(IntPtr imagePtr);
    
    /// <summary>Call the Fl_RGB_Image_new function</summary>
    /// <param name="bits"></param>
    /// <param name="width"></param>
    /// <param name="height"></param>
    /// <param name="depth"></param>
    /// <param name="ld"></param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_RGB_Image_new", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_RGB_Image_new(IntPtr bits, int width, int height, int depth, int ld);
    
    /// <summary>Call the Fl_RGB_Image_from_data function</summary>
    /// <param name="bits"></param>
    /// <param name="width"></param>
    /// <param name="height"></param>
    /// <param name="depth"></param>
    /// <param name="ld"></param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_RGB_Image_from_data", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_RGB_Image_from_data(IntPtr bits, int width, int height, int depth, int ld);
    
    /// <summary>Call the Fl_RGB_Image_from_pixmap function</summary>
    /// <param name="image">
    /// <inheritdoc cref="Fl_Pixmap_new" path="/returns" />
    /// </param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_RGB_Image_from_pixmap", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_RGB_Image_from_pixmap(IntPtr image);
    
    /// <summary>Call the Fl_RGB_Image_set_scaling_algorithm function</summary>
    /// <param name="algorithm"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_RGB_Image_set_scaling_algorithm", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_RGB_Image_set_scaling_algorithm(int algorithm);
    
    /// <summary>Call the Fl_RGB_Image_scaling_algorithm function</summary>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_RGB_Image_scaling_algorithm", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_RGB_Image_scaling_algorithm();
    
    /// <summary>Call the Fl_Shared_Image_draw function</summary>
    /// <param name="imagePtr"></param>
    /// <param name="x"></param>
    /// <param name="y"></param>
    /// <param name="width"></param>
    /// <param name="height"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Shared_Image_draw", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Shared_Image_draw(IntPtr imagePtr, int x, int y, int width, int height);
    
    /// <summary>Call the Fl_Shared_Image_draw_ext function</summary>
    /// <param name="imagePtr"></param>
    /// <param name="x"></param>
    /// <param name="y"></param>
    /// <param name="width"></param>
    /// <param name="height"></param>
    /// <param name="cx"></param>
    /// <param name="cy"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Shared_Image_draw_ext", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Shared_Image_draw_ext(IntPtr imagePtr, int x, int y, int width, int height, int cx, int cy);
    
    /// <summary>Call the Fl_Shared_Image_width function</summary>
    /// <param name="imagePtr"></param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Shared_Image_width", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Shared_Image_width(IntPtr imagePtr);
    
    /// <summary>Call the Fl_Shared_Image_height function</summary>
    /// <param name="imagePtr"></param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Shared_Image_height", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Shared_Image_height(IntPtr imagePtr);
    
    /// <summary>Call the Fl_Shared_Image_delete function</summary>
    /// <param name="imagePtr"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Shared_Image_delete", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Shared_Image_delete(IntPtr imagePtr);
    
    /// <summary>Call the Fl_Shared_Image_count function</summary>
    /// <param name="imagePtr"></param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Shared_Image_count", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Shared_Image_count(IntPtr imagePtr);
    
    /// <summary>Call the Fl_Shared_Image_data function</summary>
    /// <param name="imagePtr"></param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Shared_Image_data", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Shared_Image_data(IntPtr imagePtr);
    
    /// <summary>Call the Fl_Shared_Image_copy function</summary>
    /// <param name="imagePtr"></param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Shared_Image_copy", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Shared_Image_copy(IntPtr imagePtr);
    
    /// <summary>Call the Fl_Shared_Image_copy_sized function</summary>
    /// <param name="imagePtr"></param>
    /// <param name="width"></param>
    /// <param name="height"></param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Shared_Image_copy_sized", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Shared_Image_copy_sized(IntPtr imagePtr, int width, int height);
    
    /// <summary>Call the Fl_Shared_Image_scale function</summary>
    /// <param name="imagePtr"></param>
    /// <param name="width"></param>
    /// <param name="height"></param>
    /// <param name="proportinal"></param>
    /// <param name="can_expand"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Shared_Image_scale", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Shared_Image_scale(IntPtr imagePtr, int width, int height, int proportinal, int can_expand);
    
    /// <summary>Call the Fl_Shared_Image_fail function</summary>
    /// <param name="imagePtr"></param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Shared_Image_fail", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Shared_Image_fail(IntPtr imagePtr);
    
    /// <summary>Call the Fl_Shared_Image_data_w function</summary>
    /// <param name="imagePtr"></param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Shared_Image_data_w", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Shared_Image_data_w(IntPtr imagePtr);
    
    /// <summary>Call the Fl_Shared_Image_data_h function</summary>
    /// <param name="imagePtr"></param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Shared_Image_data_h", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Shared_Image_data_h(IntPtr imagePtr);
    
    /// <summary>Call the Fl_Shared_Image_d function</summary>
    /// <param name="imagePtr"></param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Shared_Image_d", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Shared_Image_d(IntPtr imagePtr);
    
    /// <summary>Call the Fl_Shared_Image_ld function</summary>
    /// <param name="imagePtr"></param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Shared_Image_ld", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern int Fl_Shared_Image_ld(IntPtr imagePtr);
    
    /// <summary>Call the Fl_Shared_Image_inactive function</summary>
    /// <param name="imagePtr"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Shared_Image_inactive", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_Shared_Image_inactive(IntPtr imagePtr);
    
    /// <summary>Call the Fl_Shared_Image_from_dyn_ptr function</summary>
    /// <param name="imagePtr"></param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Shared_Image_from_dyn_ptr", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Shared_Image_from_dyn_ptr(IntPtr imagePtr);
    
    /// <summary>Call the Fl_Shared_Image_get function</summary>
    /// <param name="name">
    /// <inheritdoc cref="Fl_Widget_new" path="/param[@name='labelPointer']" />
    /// </param>
    /// <param name="width"></param>
    /// <param name="height"></param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Shared_Image_get", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Shared_Image_get(IntPtr name, int width, int height);
    
    /// <summary>Call the Fl_Shared_Image_from_rgb function</summary>
    /// <param name="rgbPtr">
    /// <inheritdoc cref="Fl_RGB_Image_new" path="/returns" />
    /// </param>
    /// <param name="own_it"></param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_Shared_Image_from_rgb", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_Shared_Image_from_rgb(IntPtr rgbPtr, int own_it);
    
    /// <summary>Call the Fl_ICO_Image_new function</summary>
    /// <param name="filename">
    /// <inheritdoc cref="Fl_Widget_new" path="/param[@name='labelPointer']" />
    /// </param>
    /// <param name="id"></param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_ICO_Image_new", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_ICO_Image_new(IntPtr filename, int id);
    
    /// <summary>Call the Fl_ICO_Image_from_data function</summary>
    /// <param name="data"></param>
    /// <param name="length"></param>
    /// <param name="id"></param>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_ICO_Image_from_data", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern void Fl_ICO_Image_from_data(IntPtr data, uint length, int id);
    
    /// <summary>Call the Fl_ICO_Image_icondirentry function</summary>
    /// <param name="self">
    /// <inheritdoc cref="Fl_ICO_Image_new" path="/returns" />
    /// </param>
    /// <param name="size"></param>
    /// <returns></returns>
    [DllImport(Constants.LibraryFilename, EntryPoint = "Fl_ICO_Image_icondirentry", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
    internal static extern IntPtr Fl_ICO_Image_icondirentry(IntPtr self, ref uint size);
    
}